{"version":3,"file":"props.umd.js","sources":["../../src/modules/TemplateEngine.js","../../src/plugins/Props.js"],"sourcesContent":["\"use strict\";\n\n/**\n * @class ðŸ”’ TemplateEngine\n * @classdesc A secure template engine that handles interpolation and dynamic attribute parsing.\n * Provides a safe way to evaluate expressions in templates while preventing XSS attacks.\n * All methods are static and can be called directly on the class.\n *\n * @example\n * const template = \"Hello, {{name}}!\";\n * const data = { name: \"World\" };\n * const result = TemplateEngine.parse(template, data); // Returns: \"Hello, World!\"\n */\nexport class TemplateEngine {\n  /**\n   * @private {RegExp} Regular expression for matching template expressions in the format {{ expression }}\n   * @type {RegExp}\n   */\n  static expressionPattern = /\\{\\{\\s*(.*?)\\s*\\}\\}/g;\n\n  /**\n   * Parses a template string, replacing expressions with their evaluated values.\n   * Expressions are evaluated in the provided data context.\n   *\n   * @public\n   * @static\n   * @param {string} template - The template string to parse.\n   * @param {Record<string, unknown>} data - The data context for evaluating expressions.\n   * @returns {string} The parsed template with expressions replaced by their values.\n   * @example\n   * const result = TemplateEngine.parse(\"{{user.name}} is {{user.age}} years old\", {\n   *   user: { name: \"John\", age: 30 }\n   * }); // Returns: \"John is 30 years old\"\n   */\n  static parse(template, data) {\n    if (typeof template !== \"string\") return template;\n    return template.replace(this.expressionPattern, (_, expression) =>\n      this.evaluate(expression, data)\n    );\n  }\n\n  /**\n   * Evaluates an expression in the context of the provided data object.\n   * Note: This does not provide a true sandbox and evaluated expressions may access global scope.\n   * The use of the `with` statement is necessary for expression evaluation but has security implications.\n   * Expressions should be carefully validated before evaluation.\n   *\n   * @public\n   * @static\n   * @param {string} expression - The expression to evaluate.\n   * @param {Record<string, unknown>} data - The data context for evaluation.\n   * @returns {unknown} The result of the evaluation, or an empty string if evaluation fails.\n   * @example\n   * const result = TemplateEngine.evaluate(\"user.name\", { user: { name: \"John\" } }); // Returns: \"John\"\n   * const age = TemplateEngine.evaluate(\"user.age\", { user: { age: 30 } }); // Returns: 30\n   */\n  static evaluate(expression, data) {\n    if (typeof expression !== \"string\") return expression;\n    try {\n      return new Function(\"data\", `with(data) { return ${expression}; }`)(data);\n    } catch {\n      return \"\";\n    }\n  }\n}\n","\"use strict\";\n\nimport { TemplateEngine } from \"../modules/TemplateEngine.js\";\n\n/**\n * @class ðŸŽ¯ PropsPlugin\n * @classdesc A plugin that extends Eleva's props data handling to support any type of data structure\n * with automatic type detection, parsing, and reactive prop updates. This plugin enables seamless\n * passing of complex data types from parent to child components without manual parsing.\n *\n * Core Features:\n * - Automatic type detection and parsing (strings, numbers, booleans, objects, arrays, dates, etc.)\n * - Support for complex data structures including nested objects and arrays\n * - Reactive props that automatically update when parent data changes\n * - Comprehensive error handling with custom error callbacks\n * - Simple configuration with minimal setup required\n *\n * @example\n * // Install the plugin\n * const app = new Eleva(\"myApp\");\n * app.use(PropsPlugin, {\n *   enableAutoParsing: true,\n *   enableReactivity: true,\n *   onError: (error, value) => {\n *     console.error('Props parsing error:', error, value);\n *   }\n * });\n *\n * // Use complex props in components\n * app.component(\"UserCard\", {\n *   template: (ctx) => `\n *     <div class=\"user-info-container\"\n *          :user='${JSON.stringify(ctx.user.value)}'\n *          :permissions='${JSON.stringify(ctx.permissions.value)}'\n *          :settings='${JSON.stringify(ctx.settings.value)}'>\n *     </div>\n *   `,\n *   children: {\n *     '.user-info-container': 'UserInfo'\n *   }\n * });\n *\n * app.component(\"UserInfo\", {\n *   setup({ props }) {\n *     return {\n *       user: props.user,        // Automatically parsed object\n *       permissions: props.permissions,  // Automatically parsed array\n *       settings: props.settings  // Automatically parsed object\n *     };\n *   }\n * });\n */\nexport const PropsPlugin = {\n  /**\n   * Unique identifier for the plugin\n   * @type {string}\n   */\n  name: \"props\",\n\n  /**\n   * Plugin version\n   * @type {string}\n   */\n  version: \"1.0.0-rc.2\",\n\n  /**\n   * Plugin description\n   * @type {string}\n   */\n  description:\n    \"Advanced props data handling for complex data structures with automatic type detection and reactivity\",\n\n  /**\n   * Installs the plugin into the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   * @param {Object} options - Plugin configuration options\n   * @param {boolean} [options.enableAutoParsing=true] - Enable automatic type detection and parsing\n   * @param {boolean} [options.enableReactivity=true] - Enable reactive prop updates using Eleva's signal system\n   * @param {Function} [options.onError=null] - Error handler function called when parsing fails\n   *\n   * @example\n   * // Basic installation\n   * app.use(PropsPlugin);\n   *\n   * // Installation with custom options\n   * app.use(PropsPlugin, {\n   *   enableAutoParsing: true,\n   *   enableReactivity: false,\n   *   onError: (error, value) => {\n   *     console.error('Props parsing error:', error, value);\n   *   }\n   * });\n   */\n  install(eleva, options = {}) {\n    const {\n      enableAutoParsing = true,\n      enableReactivity = true,\n      onError = null,\n    } = options;\n\n    /**\n     * Detects the type of a given value\n     * @private\n     * @param {any} value - The value to detect type for\n     * @returns {string} The detected type ('string', 'number', 'boolean', 'object', 'array', 'date', 'map', 'set', 'function', 'null', 'undefined', 'unknown')\n     *\n     * @example\n     * detectType(\"hello\")     // â†’ \"string\"\n     * detectType(42)          // â†’ \"number\"\n     * detectType(true)        // â†’ \"boolean\"\n     * detectType([1, 2, 3])   // â†’ \"array\"\n     * detectType({})          // â†’ \"object\"\n     * detectType(new Date())  // â†’ \"date\"\n     * detectType(null)        // â†’ \"null\"\n     */\n    const detectType = (value) => {\n      if (value === null) return \"null\";\n      if (value === undefined) return \"undefined\";\n      if (typeof value === \"boolean\") return \"boolean\";\n      if (typeof value === \"number\") return \"number\";\n      if (typeof value === \"string\") return \"string\";\n      if (typeof value === \"function\") return \"function\";\n      if (value instanceof Date) return \"date\";\n      if (value instanceof Map) return \"map\";\n      if (value instanceof Set) return \"set\";\n      if (Array.isArray(value)) return \"array\";\n      if (typeof value === \"object\") return \"object\";\n      return \"unknown\";\n    };\n\n    /**\n     * Parses a prop value with automatic type detection\n     * @private\n     * @param {any} value - The value to parse\n     * @returns {any} The parsed value with appropriate type\n     *\n     * @description\n     * This function automatically detects and parses different data types from string values:\n     * - Special strings: \"true\" â†’ true, \"false\" â†’ false, \"null\" â†’ null, \"undefined\" â†’ undefined\n     * - JSON objects/arrays: '{\"key\": \"value\"}' â†’ {key: \"value\"}, '[1, 2, 3]' â†’ [1, 2, 3]\n     * - Boolean-like strings: \"1\" â†’ true, \"0\" â†’ false, \"\" â†’ true\n     * - Numeric strings: \"42\" â†’ 42, \"3.14\" â†’ 3.14\n     * - Date strings: \"2023-01-01T00:00:00.000Z\" â†’ Date object\n     * - Other strings: returned as-is\n     *\n     * @example\n     * parsePropValue(\"true\")           // â†’ true\n     * parsePropValue(\"42\")             // â†’ 42\n     * parsePropValue('{\"key\": \"val\"}') // â†’ {key: \"val\"}\n     * parsePropValue('[1, 2, 3]')      // â†’ [1, 2, 3]\n     * parsePropValue(\"hello\")          // â†’ \"hello\"\n     */\n    const parsePropValue = (value) => {\n      try {\n        // Handle non-string values - return as-is\n        if (typeof value !== \"string\") {\n          return value;\n        }\n\n        // Handle special string patterns first\n        if (value === \"true\") return true;\n        if (value === \"false\") return false;\n        if (value === \"null\") return null;\n        if (value === \"undefined\") return undefined;\n\n        // Try to parse as JSON (for objects and arrays)\n        // This handles complex data structures like objects and arrays\n        if (value.startsWith(\"{\") || value.startsWith(\"[\")) {\n          try {\n            return JSON.parse(value);\n          } catch (e) {\n            // Not valid JSON, throw error to trigger error handler\n            throw new Error(`Invalid JSON: ${value}`);\n          }\n        }\n\n        // Handle boolean-like strings (including \"1\" and \"0\")\n        // These are common in HTML attributes and should be treated as booleans\n        if (value === \"1\") return true;\n        if (value === \"0\") return false;\n        if (value === \"\") return true; // Empty string is truthy in HTML attributes\n\n        // Handle numeric strings (after boolean check to avoid conflicts)\n        // This ensures \"0\" is treated as boolean false, not number 0\n        if (!isNaN(value) && value !== \"\" && !isNaN(parseFloat(value))) {\n          return Number(value);\n        }\n\n        // Handle date strings (ISO format)\n        // Recognizes standard ISO date format and converts to Date object\n        if (value.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/)) {\n          const date = new Date(value);\n          if (!isNaN(date.getTime())) {\n            return date;\n          }\n        }\n\n        // Return as string if no other parsing applies\n        // This is the fallback for regular text strings\n        return value;\n      } catch (error) {\n        // Call error handler if provided\n        if (onError) {\n          onError(error, value);\n        }\n        // Fallback to original value to prevent breaking the application\n        return value;\n      }\n    };\n\n    /**\n     * Enhanced props extraction with automatic type detection\n     * @private\n     * @param {HTMLElement} element - The DOM element to extract props from\n     * @returns {Object} Object containing parsed props with appropriate types\n     *\n     * @description\n     * Extracts props from DOM element attributes that start with \":\" and automatically\n     * parses them to their appropriate types. Removes the attributes from the element\n     * after extraction.\n     *\n     * @example\n     * // HTML: <div :name=\"John\" :age=\"30\" :active=\"true\" :data='{\"key\": \"value\"}'></div>\n     * const props = extractProps(element);\n     * // Result: { name: \"John\", age: 30, active: true, data: {key: \"value\"} }\n     */\n    const extractProps = (element) => {\n      const props = {};\n      const attrs = element.attributes;\n\n      // Iterate through attributes in reverse order to handle removal correctly\n      for (let i = attrs.length - 1; i >= 0; i--) {\n        const attr = attrs[i];\n        // Only process attributes that start with \":\" (prop attributes)\n        if (attr.name.startsWith(\":\")) {\n          const propName = attr.name.slice(1); // Remove the \":\" prefix\n          // Parse the value if auto-parsing is enabled, otherwise use as-is\n          const parsedValue = enableAutoParsing\n            ? parsePropValue(attr.value)\n            : attr.value;\n          props[propName] = parsedValue;\n          // Remove the attribute from the DOM element after extraction\n          element.removeAttribute(attr.name);\n        }\n      }\n\n      return props;\n    };\n\n    /**\n     * Creates reactive props using Eleva's signal system\n     * @private\n     * @param {Object} props - The props object to make reactive\n     * @returns {Object} Object containing reactive props (Eleva signals)\n     *\n     * @description\n     * Converts regular prop values into Eleva signals for reactive updates.\n     * If a value is already a signal, it's passed through unchanged.\n     *\n     * @example\n     * const props = { name: \"John\", age: 30, active: true };\n     * const reactiveProps = createReactiveProps(props);\n     * // Result: {\n     * //   name: Signal(\"John\"),\n     * //   age: Signal(30),\n     * //   active: Signal(true)\n     * // }\n     */\n    const createReactiveProps = (props) => {\n      const reactiveProps = {};\n\n      // Convert each prop value to a reactive signal\n      Object.entries(props).forEach(([key, value]) => {\n        // Check if value is already a signal (has 'value' and 'watch' properties)\n        if (\n          value &&\n          typeof value === \"object\" &&\n          \"value\" in value &&\n          \"watch\" in value\n        ) {\n          // Value is already a signal, use it as-is\n          reactiveProps[key] = value;\n        } else {\n          // Create new signal for the prop value to make it reactive\n          reactiveProps[key] = new eleva.signal(value);\n        }\n      });\n\n      return reactiveProps;\n    };\n\n    // Override Eleva's internal _extractProps method with our enhanced version\n    eleva._extractProps = extractProps;\n\n    // Override Eleva's mount method to apply enhanced prop handling\n    const originalMount = eleva.mount;\n    eleva.mount = async (container, compName, props = {}) => {\n      // Create reactive props if reactivity is enabled\n      const enhancedProps = enableReactivity\n        ? createReactiveProps(props)\n        : props;\n\n      // Call the original mount method with enhanced props\n      return await originalMount.call(\n        eleva,\n        container,\n        compName,\n        enhancedProps\n      );\n    };\n\n    // Override Eleva's _mountComponents method to enable signal reference passing\n    const originalMountComponents = eleva._mountComponents;\n\n    // Cache to store parent contexts by container element\n    const parentContextCache = new WeakMap();\n    // Store child instances that need signal linking\n    const pendingSignalLinks = new Set();\n\n    eleva._mountComponents = async (container, children, childInstances) => {\n      for (const [selector, component] of Object.entries(children)) {\n        if (!selector) continue;\n        for (const el of container.querySelectorAll(selector)) {\n          if (!(el instanceof HTMLElement)) continue;\n\n          // Extract props from DOM attributes\n          const extractedProps = eleva._extractProps(el);\n\n          // Get parent context to check for signal references\n          let enhancedProps = extractedProps;\n\n          // Try to find parent context by looking up the DOM tree\n          let parentContext = parentContextCache.get(container);\n          if (!parentContext) {\n            let currentElement = container;\n            while (currentElement && !parentContext) {\n              if (\n                currentElement._eleva_instance &&\n                currentElement._eleva_instance.data\n              ) {\n                parentContext = currentElement._eleva_instance.data;\n                // Cache the parent context for future use\n                parentContextCache.set(container, parentContext);\n                break;\n              }\n              currentElement = currentElement.parentElement;\n            }\n          }\n\n          if (enableReactivity && parentContext) {\n            const signalProps = {};\n\n            // Check each extracted prop to see if there's a matching signal in parent context\n            Object.keys(extractedProps).forEach((propName) => {\n              if (\n                parentContext[propName] &&\n                parentContext[propName] instanceof eleva.signal\n              ) {\n                // Found a signal in parent context with the same name as the prop\n                // Pass the signal reference instead of creating a new one\n                signalProps[propName] = parentContext[propName];\n              }\n            });\n\n            // Merge signal props with regular props (signal props take precedence)\n            enhancedProps = {\n              ...extractedProps,\n              ...signalProps,\n            };\n          }\n\n          // Create reactive props for non-signal props only\n          let finalProps = enhancedProps;\n          if (enableReactivity) {\n            // Only create reactive props for values that aren't already signals\n            const nonSignalProps = {};\n            Object.entries(enhancedProps).forEach(([key, value]) => {\n              if (\n                !(\n                  value &&\n                  typeof value === \"object\" &&\n                  \"value\" in value &&\n                  \"watch\" in value\n                )\n              ) {\n                // This is not a signal, create a reactive prop for it\n                nonSignalProps[key] = value;\n              }\n            });\n\n            // Create reactive props only for non-signal values\n            const reactiveNonSignalProps = createReactiveProps(nonSignalProps);\n\n            // Merge signal props with reactive non-signal props\n            finalProps = {\n              ...reactiveNonSignalProps,\n              ...enhancedProps, // Signal props take precedence\n            };\n          }\n\n          /** @type {MountResult} */\n          const instance = await eleva.mount(el, component, finalProps);\n          if (instance && !childInstances.includes(instance)) {\n            childInstances.push(instance);\n\n            // If we have extracted props but no parent context yet, mark for later signal linking\n            if (\n              enableReactivity &&\n              Object.keys(extractedProps).length > 0 &&\n              !parentContext\n            ) {\n              pendingSignalLinks.add({\n                instance,\n                extractedProps,\n                container,\n                component,\n              });\n            }\n          }\n        }\n      }\n\n      // After mounting all children, try to link signals for pending instances\n      if (enableReactivity && pendingSignalLinks.size > 0) {\n        for (const pending of pendingSignalLinks) {\n          const { instance, extractedProps, container, component } = pending;\n\n          // Try to find parent context again\n          let parentContext = parentContextCache.get(container);\n          if (!parentContext) {\n            let currentElement = container;\n            while (currentElement && !parentContext) {\n              if (\n                currentElement._eleva_instance &&\n                currentElement._eleva_instance.data\n              ) {\n                parentContext = currentElement._eleva_instance.data;\n                parentContextCache.set(container, parentContext);\n                break;\n              }\n              currentElement = currentElement.parentElement;\n            }\n          }\n\n          if (parentContext) {\n            const signalProps = {};\n\n            // Check each extracted prop to see if there's a matching signal in parent context\n            Object.keys(extractedProps).forEach((propName) => {\n              if (\n                parentContext[propName] &&\n                parentContext[propName] instanceof eleva.signal\n              ) {\n                signalProps[propName] = parentContext[propName];\n              }\n            });\n\n            // Update the child instance's data with signal references\n            if (Object.keys(signalProps).length > 0) {\n              Object.assign(instance.data, signalProps);\n\n              // Set up signal watchers for the newly linked signals\n              Object.keys(signalProps).forEach((propName) => {\n                const signal = signalProps[propName];\n                if (signal && typeof signal.watch === \"function\") {\n                  signal.watch((newValue) => {\n                    // Trigger a re-render of the child component when the signal changes\n                    const childComponent =\n                      eleva._components.get(component) || component;\n                    if (childComponent && childComponent.template) {\n                      const templateResult =\n                        typeof childComponent.template === \"function\"\n                          ? childComponent.template(instance.data)\n                          : childComponent.template;\n                      const newHtml = TemplateEngine.parse(\n                        templateResult,\n                        instance.data\n                      );\n                      eleva.renderer.patchDOM(instance.container, newHtml);\n                    }\n                  });\n                }\n              });\n\n              // Initial re-render to show the correct signal values\n              const childComponent =\n                eleva._components.get(component) || component;\n              if (childComponent && childComponent.template) {\n                const templateResult =\n                  typeof childComponent.template === \"function\"\n                    ? childComponent.template(instance.data)\n                    : childComponent.template;\n                const newHtml = TemplateEngine.parse(\n                  templateResult,\n                  instance.data\n                );\n                eleva.renderer.patchDOM(instance.container, newHtml);\n              }\n            }\n\n            // Remove from pending list\n            pendingSignalLinks.delete(pending);\n          }\n        }\n      }\n    };\n\n    /**\n     * Expose utility methods on the Eleva instance\n     * @namespace eleva.props\n     */\n    eleva.props = {\n      /**\n       * Parse a single value with automatic type detection\n       * @param {any} value - The value to parse\n       * @returns {any} The parsed value with appropriate type\n       *\n       * @example\n       * app.props.parse(\"42\")             // â†’ 42\n       * app.props.parse(\"true\")           // â†’ true\n       * app.props.parse('{\"key\": \"val\"}') // â†’ {key: \"val\"}\n       */\n      parse: (value) => {\n        // Return value as-is if auto parsing is disabled\n        if (!enableAutoParsing) {\n          return value;\n        }\n        // Use our enhanced parsing function\n        return parsePropValue(value);\n      },\n\n      /**\n       * Detect the type of a value\n       * @param {any} value - The value to detect type for\n       * @returns {string} The detected type\n       *\n       * @example\n       * app.props.detectType(\"hello\")     // â†’ \"string\"\n       * app.props.detectType(42)          // â†’ \"number\"\n       * app.props.detectType([1, 2, 3])   // â†’ \"array\"\n       */\n      detectType,\n    };\n\n    // Store original methods for uninstall\n    eleva._originalExtractProps = eleva._extractProps;\n    eleva._originalMount = originalMount;\n    eleva._originalMountComponents = originalMountComponents;\n  },\n\n  /**\n   * Uninstalls the plugin from the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   *\n   * @description\n   * Restores the original Eleva methods and removes all plugin-specific\n   * functionality. This method should be called when the plugin is no\n   * longer needed.\n   *\n   * @example\n   * // Uninstall the plugin\n   * PropsPlugin.uninstall(app);\n   */\n  uninstall(eleva) {\n    // Restore original _extractProps method\n    if (eleva._originalExtractProps) {\n      eleva._extractProps = eleva._originalExtractProps;\n      delete eleva._originalExtractProps;\n    }\n\n    // Restore original mount method\n    if (eleva._originalMount) {\n      eleva.mount = eleva._originalMount;\n      delete eleva._originalMount;\n    }\n\n    // Restore original _mountComponents method\n    if (eleva._originalMountComponents) {\n      eleva._mountComponents = eleva._originalMountComponents;\n      delete eleva._originalMountComponents;\n    }\n\n    // Remove plugin utility methods\n    if (eleva.props) {\n      delete eleva.props;\n    }\n  },\n};\n"],"names":["TemplateEngine","parse","template","data","replace","expressionPattern","_","expression","evaluate","Function","_unused","PropsPlugin","name","version","description","install","eleva","options","enableAutoParsing","enableReactivity","onError","detectType","value","undefined","Date","Map","Set","Array","isArray","parsePropValue","startsWith","JSON","e","Error","isNaN","parseFloat","Number","match","date","getTime","error","extractProps","element","props","attrs","attributes","i","length","attr","propName","slice","parsedValue","removeAttribute","createReactiveProps","reactiveProps","Object","entries","forEach","key","signal","_extractProps","originalMount","mount","container","compName","enhancedProps","call","originalMountComponents","_mountComponents","parentContextCache","WeakMap","pendingSignalLinks","children","childInstances","selector","component","el","querySelectorAll","HTMLElement","extractedProps","parentContext","get","currentElement","_eleva_instance","set","parentElement","signalProps","keys","_extends","finalProps","nonSignalProps","reactiveNonSignalProps","instance","includes","push","add","size","pending","assign","watch","newValue","childComponent","_components","templateResult","newHtml","renderer","patchDOM","delete","_originalExtractProps","_originalMount","_originalMountComponents","uninstall"],"mappings":"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"}