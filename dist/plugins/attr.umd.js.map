{"version":3,"file":"attr.umd.js","sources":["../../src/plugins/Attr.js"],"sourcesContent":["\"use strict\";\n\n/**\n * A regular expression to match hyphenated lowercase letters.\n * @private\n * @type {RegExp}\n */\nconst CAMEL_RE = /-([a-z])/g;\n\n/**\n * @class ðŸŽ¯ AttrPlugin\n * @classdesc A plugin that provides advanced attribute handling for Eleva components.\n * This plugin extends the renderer with sophisticated attribute processing including:\n * - ARIA attribute handling with proper property mapping\n * - Data attribute management\n * - Boolean attribute processing\n * - Dynamic property detection and mapping\n * - Attribute cleanup and removal\n *\n * @example\n * // Install the plugin\n * const app = new Eleva(\"myApp\");\n * app.use(AttrPlugin);\n *\n * // Use advanced attributes in components\n * app.component(\"myComponent\", {\n *   template: (ctx) => `\n *     <button \n *       aria-expanded=\"${ctx.isExpanded.value}\"\n *       data-user-id=\"${ctx.userId.value}\"\n *       disabled=\"${ctx.isLoading.value}\"\n *       class=\"btn ${ctx.variant.value}\"\n *     >\n *       ${ctx.text.value}\n *     </button>\n *   `\n * });\n */\nexport const AttrPlugin = {\n    /**\n     * Unique identifier for the plugin\n     * @type {string}\n     */\n    name: \"attr\",\n\n    /**\n     * Plugin version\n     * @type {string}\n     */\n    version: \"1.0.0-rc.1\",\n\n    /**\n     * Plugin description\n     * @type {string}\n     */\n    description: \"Advanced attribute handling for Eleva components\",\n\n    /**\n     * Installs the plugin into the Eleva instance\n     * \n     * @param {Object} eleva - The Eleva instance\n     * @param {Object} options - Plugin configuration options\n     * @param {boolean} [options.enableAria=true] - Enable ARIA attribute handling\n     * @param {boolean} [options.enableData=true] - Enable data attribute handling\n     * @param {boolean} [options.enableBoolean=true] - Enable boolean attribute handling\n     * @param {boolean} [options.enableDynamic=true] - Enable dynamic property detection\n     */\n    install(eleva, options = {}) {\n        const {\n            enableAria = true,\n            enableData = true,\n            enableBoolean = true,\n            enableDynamic = true\n        } = options;\n\n        /**\n         * Updates the attributes of an element to match a new element's attributes.\n         * This method provides sophisticated attribute processing including:\n         * - ARIA attribute handling with proper property mapping\n         * - Data attribute management\n         * - Boolean attribute processing\n         * - Dynamic property detection and mapping\n         * - Attribute cleanup and removal\n         *\n         * @param {HTMLElement} oldEl - The original element to update\n         * @param {HTMLElement} newEl - The new element to update\n         * @returns {void}\n         */\n        const updateAttributes = (oldEl, newEl) => {\n            const oldAttrs = oldEl.attributes;\n            const newAttrs = newEl.attributes;\n\n            // Process new attributes\n            for (let i = 0; i < newAttrs.length; i++) {\n                const { name, value } = newAttrs[i];\n\n                // Skip event attributes (handled by event system)\n                if (name.startsWith(\"@\")) continue;\n\n                // Skip if attribute hasn't changed\n                if (oldEl.getAttribute(name) === value) continue;\n\n                // Handle ARIA attributes\n                if (enableAria && name.startsWith(\"aria-\")) {\n                    const prop = \"aria\" + name.slice(5).replace(CAMEL_RE, (_, l) => l.toUpperCase());\n                    oldEl[prop] = value;\n                    oldEl.setAttribute(name, value);\n                }\n                // Handle data attributes\n                else if (enableData && name.startsWith(\"data-\")) {\n                    oldEl.dataset[name.slice(5)] = value;\n                    oldEl.setAttribute(name, value);\n                }\n                // Handle other attributes\n                else {\n                    let prop = name.replace(CAMEL_RE, (_, l) => l.toUpperCase());\n\n                    // Dynamic property detection\n                    if (enableDynamic && !(prop in oldEl) && !Object.getOwnPropertyDescriptor(Object.getPrototypeOf(oldEl), prop)) {\n                        const elementProps = Object.getOwnPropertyNames(Object.getPrototypeOf(oldEl));\n                        const matchingProp = elementProps.find(p =>\n                            p.toLowerCase() === name.toLowerCase() ||\n                            p.toLowerCase().includes(name.toLowerCase()) ||\n                            name.toLowerCase().includes(p.toLowerCase())\n                        );\n\n                        if (matchingProp) {\n                            prop = matchingProp;\n                        }\n                    }\n\n                    const descriptor = Object.getOwnPropertyDescriptor(\n                        Object.getPrototypeOf(oldEl),\n                        prop\n                    );\n                    const hasProperty = prop in oldEl || descriptor;\n\n                    if (hasProperty) {\n                        // Boolean attribute handling\n                        if (enableBoolean) {\n                            const isBoolean =\n                                typeof oldEl[prop] === \"boolean\" ||\n                                (descriptor?.get &&\n                                    typeof descriptor.get.call(oldEl) === \"boolean\");\n\n                            if (isBoolean) {\n                                const boolValue = value !== \"false\" &&\n                                    (value === \"\" || value === prop || value === \"true\");\n                                oldEl[prop] = boolValue;\n\n                                if (boolValue) {\n                                    oldEl.setAttribute(name, \"\");\n                                } else {\n                                    oldEl.removeAttribute(name);\n                                }\n                            } else {\n                                oldEl[prop] = value;\n                                oldEl.setAttribute(name, value);\n                            }\n                        } else {\n                            oldEl[prop] = value;\n                            oldEl.setAttribute(name, value);\n                        }\n                    } else {\n                        oldEl.setAttribute(name, value);\n                    }\n                }\n            }\n\n            // Remove old attributes that are no longer present\n            for (let i = oldAttrs.length - 1; i >= 0; i--) {\n                const name = oldAttrs[i].name;\n                if (!newEl.hasAttribute(name)) {\n                    oldEl.removeAttribute(name);\n                }\n            }\n        };\n\n        // Extend the renderer with the advanced attribute handler\n        if (eleva.renderer) {\n            eleva.renderer.updateAttributes = updateAttributes;\n\n            // Store the original _patchNode method\n            const originalPatchNode = eleva.renderer._patchNode;\n            eleva.renderer._originalPatchNode = originalPatchNode;\n\n            // Override the _patchNode method to use our attribute handler\n            eleva.renderer._patchNode = function (oldNode, newNode) {\n                if (oldNode?._eleva_instance) return;\n\n                if (!this._isSameNode(oldNode, newNode)) {\n                    oldNode.replaceWith(newNode.cloneNode(true));\n                    return;\n                }\n\n                if (oldNode.nodeType === Node.ELEMENT_NODE) {\n                    updateAttributes(oldNode, newNode);\n                    this._diff(oldNode, newNode);\n                } else if (\n                    oldNode.nodeType === Node.TEXT_NODE &&\n                    oldNode.nodeValue !== newNode.nodeValue\n                ) {\n                    oldNode.nodeValue = newNode.nodeValue;\n                }\n            };\n        }\n\n        // Add plugin metadata to the Eleva instance\n        if (!eleva.plugins) {\n            eleva.plugins = new Map();\n        }\n        eleva.plugins.set(this.name, {\n            name: this.name,\n            version: this.version,\n            description: this.description,\n            options\n        });\n\n        // Add utility methods for manual attribute updates\n        eleva.updateElementAttributes = updateAttributes;\n    },\n\n    /**\n     * Uninstalls the plugin from the Eleva instance\n     * \n     * @param {Object} eleva - The Eleva instance\n     */\n    uninstall(eleva) {\n        // Restore original _patchNode method if it exists\n        if (eleva.renderer && eleva.renderer._originalPatchNode) {\n            eleva.renderer._patchNode = eleva.renderer._originalPatchNode;\n            delete eleva.renderer._originalPatchNode;\n        }\n\n        // Remove plugin metadata\n        if (eleva.plugins) {\n            eleva.plugins.delete(this.name);\n        }\n\n        // Remove utility methods\n        delete eleva.updateElementAttributes;\n    }\n};\n"],"names":["CAMEL_RE","AttrPlugin","name","version","description","install","eleva","options","enableAria","enableData","enableBoolean","enableDynamic","updateAttributes","oldEl","newEl","oldAttrs","attributes","newAttrs","i","length","value","startsWith","getAttribute","prop","slice","replace","_","l","toUpperCase","setAttribute","dataset","Object","getOwnPropertyDescriptor","getPrototypeOf","elementProps","getOwnPropertyNames","matchingProp","find","p","toLowerCase","includes","descriptor","hasProperty","isBoolean","get","call","boolValue","removeAttribute","hasAttribute","renderer","originalPatchNode","_patchNode","_originalPatchNode","oldNode","newNode","_eleva_instance","_isSameNode","replaceWith","cloneNode","nodeType","Node","ELEMENT_NODE","_diff","TEXT_NODE","nodeValue","plugins","Map","set","updateElementAttributes","uninstall","delete"],"mappings":"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"}