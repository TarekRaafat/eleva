{"version":3,"file":"router.umd.js","sources":["../../src/plugins/Router.js"],"sourcesContent":["\"use strict\";\n\n/**\n * @typedef {import('eleva').Eleva} Eleva\n * @typedef {import('eleva').Signal} Signal\n * @typedef {import('eleva').ComponentDefinition} ComponentDefinition\n */\n\n/**\n * Simple error handler for the core router.\n * Can be overridden by error handling plugins.\n * Provides consistent error formatting and logging for router operations.\n * @private\n */\nconst CoreErrorHandler = {\n  /**\n   * Handles router errors with basic formatting.\n   * @param {Error} error - The error to handle.\n   * @param {string} context - The context where the error occurred.\n   * @param {Object} details - Additional error details.\n   * @throws {Error} The formatted error.\n   */\n  handle(error, context, details = {}) {\n    const message = `[ElevaRouter] ${context}: ${error.message}`;\n    const formattedError = new Error(message);\n\n    // Preserve original error details\n    formattedError.originalError = error;\n    formattedError.context = context;\n    formattedError.details = details;\n\n    console.error(message, { error, context, details });\n    throw formattedError;\n  },\n\n  /**\n   * Logs a warning without throwing an error.\n   * @param {string} message - The warning message.\n   * @param {Object} details - Additional warning details.\n   */\n  warn(message, details = {}) {\n    console.warn(`[ElevaRouter] ${message}`, details);\n  },\n\n  /**\n   * Logs an error without throwing.\n   * @param {string} message - The error message.\n   * @param {Error} error - The original error.\n   * @param {Object} details - Additional error details.\n   */\n  log(message, error, details = {}) {\n    console.error(`[ElevaRouter] ${message}`, { error, details });\n  },\n};\n\n/**\n * @typedef {Object} RouteLocation\n * @property {string} path - The path of the route (e.g., '/users/123').\n * @property {Object<string, string>} query - An object representing the query parameters.\n * @property {string} fullUrl - The complete URL including hash, path, and query string.\n * @property {Object<string, string>} params - An object containing dynamic route parameters.\n * @property {Object<string, any>} meta - The meta object associated with the matched route.\n * @property {string} [name] - The optional name of the matched route.\n * @property {RouteDefinition} matched - The raw route definition object that was matched.\n */\n\n/**\n * @typedef {(to: RouteLocation, from: RouteLocation | null) => boolean | string | {path: string} | void | Promise<boolean | string | {path: string} | void>} NavigationGuard\n * A function that acts as a guard for navigation. It runs *before* the navigation is confirmed.\n * It can return:\n * - `true` or `undefined`: to allow navigation.\n * - `false`: to abort the navigation.\n * - a `string` (path) or a `location object`: to redirect to a new route.\n */\n\n/**\n * @typedef {(...args: any[]) => void | Promise<void>} NavigationHook\n * A function that acts as a lifecycle hook, typically for side effects. It does not affect navigation flow.\n */\n\n/**\n * @typedef {Object} RouterPlugin\n * @property {string} name - The plugin name.\n * @property {string} [version] - The plugin version.\n * @property {Function} install - The install function that receives the router instance.\n * @property {Function} [destroy] - Optional cleanup function called when the router is destroyed.\n */\n\n/**\n * @typedef {Object} RouteDefinition\n * @property {string} path - The URL path pattern (e.g., '/', '/about', '/users/:id', '*').\n * @property {string | ComponentDefinition | (() => Promise<{default: ComponentDefinition}>)} component - The component to render. Can be a registered name, a definition object, or an async import function.\n * @property {string | ComponentDefinition | (() => Promise<{default: ComponentDefinition}>)} [layout] - An optional layout component to wrap the route's component.\n * @property {string} [name] - An optional name for the route.\n * @property {Object<string, any>} [meta] - Optional metadata for the route (e.g., for titles, auth flags).\n * @property {NavigationGuard} [beforeEnter] - A route-specific guard executed before entering the route.\n * @property {NavigationHook} [afterEnter] - A hook executed *after* the route has been entered and the new component is mounted.\n * @property {NavigationGuard} [beforeLeave] - A guard executed *before* leaving the current route.\n * @property {NavigationHook} [afterLeave] - A hook executed *after* leaving the current route and its component has been unmounted.\n */\n\n/**\n * @class Router\n * @classdesc A powerful, reactive, and flexible Router Plugin for Eleva.js.\n * This class manages all routing logic, including state, navigation, and rendering.\n * @private\n */\nclass Router {\n  /**\n   * Creates an instance of the Router.\n   * @param {Eleva} eleva - The Eleva framework instance.\n   * @param {RouterOptions} options - The configuration options for the router.\n   */\n  constructor(eleva, options = {}) {\n    /** @type {Eleva} The Eleva framework instance. */\n    this.eleva = eleva;\n\n    /** @type {RouterOptions} The merged router options. */\n    this.options = {\n      mode: \"hash\",\n      queryParam: \"view\",\n      viewSelector: \"root\",\n      ...options,\n    };\n\n    /** @private @type {RouteDefinition[]} The processed list of route definitions. */\n    this.routes = this._processRoutes(options.routes || []);\n\n    /** @private @type {import('eleva').Emitter} The shared Eleva event emitter for global hooks. */\n    this.emitter = this.eleva.emitter;\n\n    /** @private @type {boolean} A flag indicating if the router has been started. */\n    this.isStarted = false;\n\n    /** @private @type {boolean} A flag to prevent navigation loops from history events. */\n    this._isNavigating = false;\n\n    /** @private @type {Array<() => void>} A collection of cleanup functions for event listeners. */\n    this.eventListeners = [];\n\n    /** @type {Signal<RouteLocation | null>} A reactive signal holding the current route's information. */\n    this.currentRoute = new this.eleva.signal(null);\n\n    /** @type {Signal<RouteLocation | null>} A reactive signal holding the previous route's information. */\n    this.previousRoute = new this.eleva.signal(null);\n\n    /** @type {Signal<Object<string, string>>} A reactive signal holding the current route's parameters. */\n    this.currentParams = new this.eleva.signal({});\n\n    /** @type {Signal<Object<string, string>>} A reactive signal holding the current route's query parameters. */\n    this.currentQuery = new this.eleva.signal({});\n\n    /** @type {Signal<import('eleva').MountResult | null>} A reactive signal for the currently mounted layout instance. */\n    this.currentLayout = new this.eleva.signal(null);\n\n    /** @type {Signal<import('eleva').MountResult | null>} A reactive signal for the currently mounted view (page) instance. */\n    this.currentView = new this.eleva.signal(null);\n\n    /** @private @type {Map<string, RouterPlugin>} Map of registered plugins by name. */\n    this.plugins = new Map();\n\n    /** @type {Object} The error handler instance. Can be overridden by plugins. */\n    this.errorHandler = CoreErrorHandler;\n\n    this._validateOptions();\n  }\n\n  /**\n   * Validates the provided router options.\n   * @private\n   * @throws {Error} If the routing mode is invalid.\n   */\n  _validateOptions() {\n    if (![\"hash\", \"query\", \"history\"].includes(this.options.mode)) {\n      this.errorHandler.handle(\n        new Error(\n          `Invalid routing mode: ${this.options.mode}. Must be \"hash\", \"query\", or \"history\".`\n        ),\n        \"Configuration validation failed\"\n      );\n    }\n  }\n\n  /**\n   * Pre-processes route definitions to parse their path segments for efficient matching.\n   * @private\n   * @param {RouteDefinition[]} routes - The raw route definitions.\n   * @returns {RouteDefinition[]} The processed routes.\n   */\n  _processRoutes(routes) {\n    const processedRoutes = [];\n    for (const route of routes) {\n      try {\n        processedRoutes.push({\n          ...route,\n          segments: this._parsePathIntoSegments(route.path),\n        });\n      } catch (error) {\n        this.errorHandler.warn(\n          `Invalid path in route definition \"${route.path || \"undefined\"}\": ${error.message}`,\n          { route, error }\n        );\n      }\n    }\n    return processedRoutes;\n  }\n\n  /**\n   * Parses a route path string into an array of static and parameter segments.\n   * @private\n   * @param {string} path - The path pattern to parse.\n   * @returns {Array<{type: 'static' | 'param', value?: string, name?: string}>} An array of segment objects.\n   * @throws {Error} If the route path is not a valid string.\n   */\n  _parsePathIntoSegments(path) {\n    if (!path || typeof path !== \"string\") {\n      this.errorHandler.handle(\n        new Error(\"Route path must be a non-empty string\"),\n        \"Path parsing failed\",\n        { path }\n      );\n    }\n\n    const normalizedPath = path.replace(/\\/+/g, \"/\").replace(/\\/$/, \"\") || \"/\";\n\n    if (normalizedPath === \"/\") {\n      return [];\n    }\n\n    return normalizedPath\n      .split(\"/\")\n      .filter(Boolean)\n      .map((segment) => {\n        if (segment.startsWith(\":\")) {\n          const paramName = segment.substring(1);\n          if (!paramName) {\n            this.errorHandler.handle(\n              new Error(`Invalid parameter segment: ${segment}`),\n              \"Path parsing failed\",\n              { segment, path }\n            );\n          }\n          return { type: \"param\", name: paramName };\n        }\n        return { type: \"static\", value: segment };\n      });\n  }\n\n  /**\n   * Finds the view element within a container using multiple selector strategies.\n   * @private\n   * @param {HTMLElement} container - The parent element to search within.\n   * @returns {HTMLElement} The found view element or the container itself as a fallback.\n   */\n  _findViewElement(container) {\n    const selector = this.options.viewSelector;\n    return (\n      container.querySelector(`#${selector}`) ||\n      container.querySelector(`.${selector}`) ||\n      container.querySelector(`[data-${selector}]`) ||\n      container.querySelector(selector) ||\n      container\n    );\n  }\n\n  /**\n   * Starts the router, initializes event listeners, and performs the initial navigation.\n   * @returns {Promise<void>}\n   */\n  async start() {\n    if (this.isStarted) {\n      this.errorHandler.warn(\"Router is already started\");\n      return;\n    }\n    if (typeof window === \"undefined\") {\n      this.errorHandler.warn(\n        \"Router start skipped: `window` object not available (SSR environment)\"\n      );\n      return;\n    }\n    if (\n      typeof document !== \"undefined\" &&\n      !document.querySelector(this.options.mount)\n    ) {\n      this.errorHandler.warn(\n        `Mount element \"${this.options.mount}\" was not found in the DOM. The router will not start.`,\n        { mountSelector: this.options.mount }\n      );\n      return;\n    }\n    const handler = () => this._handleRouteChange();\n    if (this.options.mode === \"hash\") {\n      window.addEventListener(\"hashchange\", handler);\n      this.eventListeners.push(() =>\n        window.removeEventListener(\"hashchange\", handler)\n      );\n    } else {\n      window.addEventListener(\"popstate\", handler);\n      this.eventListeners.push(() =>\n        window.removeEventListener(\"popstate\", handler)\n      );\n    }\n    this.isStarted = true;\n    await this._handleRouteChange();\n  }\n\n  /**\n   * Stops the router and cleans up all event listeners and mounted components.\n   * @returns {Promise<void>}\n   */\n  async destroy() {\n    if (!this.isStarted) return;\n\n    // Clean up plugins\n    for (const plugin of this.plugins.values()) {\n      if (typeof plugin.destroy === \"function\") {\n        try {\n          await plugin.destroy(this);\n        } catch (error) {\n          this.errorHandler.log(`Plugin ${plugin.name} destroy failed`, error);\n        }\n      }\n    }\n\n    this.eventListeners.forEach((cleanup) => cleanup());\n    this.eventListeners = [];\n    if (this.currentLayout.value) {\n      await this.currentLayout.value.unmount();\n    }\n    this.isStarted = false;\n  }\n\n  /**\n   * Programmatically navigates to a new route.\n   * @param {string | {path: string, query?: object, params?: object, replace?: boolean, state?: object}} location - The target location as a string or object.\n   * @param {object} [params] - Optional route parameters (for string-based location).\n   * @returns {Promise<void>}\n   */\n  async navigate(location, params = {}) {\n    try {\n      const target =\n        typeof location === \"string\" ? { path: location, params } : location;\n      let path = this._buildPath(target.path, target.params || {});\n      const query = target.query || {};\n\n      if (Object.keys(query).length > 0) {\n        const queryString = new URLSearchParams(query).toString();\n        if (queryString) path += `?${queryString}`;\n      }\n\n      if (this._isSameRoute(path, target.params, query)) {\n        return;\n      }\n\n      const navigationSuccessful = await this._proceedWithNavigation(path);\n\n      if (navigationSuccessful) {\n        this._isNavigating = true;\n        const state = target.state || {};\n        const replace = target.replace || false;\n        const historyMethod = replace ? \"replaceState\" : \"pushState\";\n\n        if (this.options.mode === \"hash\") {\n          if (replace) {\n            const newUrl = `${window.location.pathname}${window.location.search}#${path}`;\n            window.history.replaceState(state, \"\", newUrl);\n          } else {\n            window.location.hash = path;\n          }\n        } else {\n          const url =\n            this.options.mode === \"query\" ? this._buildQueryUrl(path) : path;\n          history[historyMethod](state, \"\", url);\n        }\n        queueMicrotask(() => {\n          this._isNavigating = false;\n        });\n      }\n    } catch (error) {\n      this.errorHandler.log(\"Navigation failed\", error);\n      await this.emitter.emit(\"router:onError\", error);\n    }\n  }\n\n  /**\n   * Builds a URL for query mode.\n   * @private\n   * @param {string} path - The path to set as the query parameter.\n   * @returns {string} The full URL with the updated query string.\n   */\n  _buildQueryUrl(path) {\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.set(this.options.queryParam, path.split(\"?\")[0]);\n    return `${window.location.pathname}?${urlParams.toString()}`;\n  }\n\n  /**\n   * Checks if the target route is identical to the current route.\n   * @private\n   * @param {string} path - The target path with query string.\n   * @param {object} params - The target params.\n   * @param {object} query - The target query.\n   * @returns {boolean} - True if the routes are the same.\n   */\n  _isSameRoute(path, params, query) {\n    const current = this.currentRoute.value;\n    if (!current) return false;\n    const [targetPath, queryString] = path.split(\"?\");\n    const targetQuery = query || this._parseQuery(queryString || \"\");\n    return (\n      current.path === targetPath &&\n      JSON.stringify(current.params) === JSON.stringify(params || {}) &&\n      JSON.stringify(current.query) === JSON.stringify(targetQuery)\n    );\n  }\n\n  /**\n   * Injects dynamic parameters into a path string.\n   * @private\n   */\n  _buildPath(path, params) {\n    let result = path;\n    for (const [key, value] of Object.entries(params)) {\n      // Fix: Handle special characters and ensure proper encoding\n      const encodedValue = encodeURIComponent(String(value));\n      result = result.replace(new RegExp(`:${key}\\\\b`, \"g\"), encodedValue);\n    }\n    return result;\n  }\n\n  /**\n   * The handler for browser-initiated route changes (e.g., back/forward buttons).\n   * @private\n   */\n  async _handleRouteChange() {\n    if (this._isNavigating) return;\n    const from = this.currentRoute.value;\n    const toLocation = this._getCurrentLocation();\n\n    const navigationSuccessful = await this._proceedWithNavigation(\n      toLocation.fullUrl\n    );\n\n    // If navigation was blocked by a guard, revert the URL change\n    if (!navigationSuccessful && from) {\n      this.navigate({ path: from.path, query: from.query, replace: true });\n    }\n  }\n\n  /**\n   * Manages the core navigation lifecycle. Runs guards before committing changes.\n   * @private\n   * @param {string} fullPath - The full path (e.g., '/users/123?foo=bar') to navigate to.\n   * @returns {Promise<boolean>} - `true` if navigation succeeded, `false` if aborted.\n   */\n  async _proceedWithNavigation(fullPath) {\n    const from = this.currentRoute.value;\n    const [path, queryString] = (fullPath || \"/\").split(\"?\");\n    const toLocation = {\n      path: path.startsWith(\"/\") ? path : `/${path}`,\n      query: this._parseQuery(queryString),\n      fullUrl: fullPath,\n    };\n\n    let toMatch = this._matchRoute(toLocation.path);\n\n    if (!toMatch) {\n      const notFoundRoute = this.routes.find((route) => route.path === \"*\");\n      if (notFoundRoute) {\n        toMatch = {\n          route: notFoundRoute,\n          params: { pathMatch: toLocation.path.substring(1) },\n        };\n      } else {\n        await this.emitter.emit(\n          \"router:onError\",\n          new Error(`Route not found: ${toLocation.path}`),\n          toLocation,\n          from\n        );\n        return false;\n      }\n    }\n\n    const to = {\n      ...toLocation,\n      params: toMatch.params,\n      meta: toMatch.route.meta || {},\n      name: toMatch.route.name,\n      matched: toMatch.route,\n    };\n\n    try {\n      // 1. Run all *pre-navigation* guards.\n      const canNavigate = await this._runGuards(to, from, toMatch.route);\n      if (!canNavigate) return false;\n\n      // 2. Resolve async components *before* touching the DOM.\n      const { layoutComponent, pageComponent } = await this._resolveComponents(\n        toMatch.route\n      );\n\n      // 3. Unmount the previous view/layout.\n      if (from) {\n        const toLayout = toMatch.route.layout || this.options.globalLayout;\n        const fromLayout = from.matched.layout || this.options.globalLayout;\n\n        const tryUnmount = async (instance) => {\n          if (!instance) return;\n\n          try {\n            await instance.unmount();\n          } catch (error) {\n            this.errorHandler.warn(\"Error during component unmount\", {\n              error,\n              instance,\n            });\n          }\n        };\n\n        if (toLayout !== fromLayout) {\n          await tryUnmount(this.currentLayout.value);\n          this.currentLayout.value = null;\n        } else {\n          await tryUnmount(this.currentView.value);\n          this.currentView.value = null;\n        }\n\n        // 4. Call `afterLeave` hook *after* the old component has been unmounted.\n        if (from.matched.afterLeave) {\n          await from.matched.afterLeave(to, from);\n          await this.emitter.emit(\"router:afterLeave\", to, from);\n        }\n      }\n\n      // 5. Update reactive state.\n      this.previousRoute.value = from;\n      this.currentRoute.value = to;\n      this.currentParams.value = to.params || {};\n      this.currentQuery.value = to.query || {};\n\n      // 6. Render the new components.\n      await this._render(layoutComponent, pageComponent, to);\n\n      // 7. Run post-navigation hooks.\n      if (toMatch.route.afterEnter) {\n        await toMatch.route.afterEnter(to, from);\n        await this.emitter.emit(\"router:afterEnter\", to, from);\n      }\n      await this.emitter.emit(\"router:afterEach\", to, from);\n\n      return true;\n    } catch (error) {\n      this.errorHandler.log(\"Error during navigation\", error, { to, from });\n      await this.emitter.emit(\"router:onError\", error, to, from);\n      return false;\n    }\n  }\n\n  /**\n   * Executes all applicable navigation guards for a transition in order.\n   * @private\n   * @returns {Promise<boolean>} - `false` if navigation should be aborted.\n   */\n  async _runGuards(to, from, route) {\n    const guards = [\n      ...(this.options.onBeforeEach ? [this.options.onBeforeEach] : []),\n      ...(from && from.matched.beforeLeave ? [from.matched.beforeLeave] : []),\n      ...(route.beforeEnter ? [route.beforeEnter] : []),\n    ];\n    for (const guard of guards) {\n      const result = await guard(to, from);\n      if (result === false) return false;\n      if (typeof result === \"string\" || typeof result === \"object\") {\n        this.navigate(result);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Resolves a string component definition to a component object.\n   * @private\n   * @param {string} def - The component name to resolve.\n   * @returns {ComponentDefinition} The resolved component.\n   * @throws {Error} If the component is not registered.\n   */\n  _resolveStringComponent(def) {\n    const componentDef = this.eleva._components.get(def);\n    if (!componentDef) {\n      this.errorHandler.handle(\n        new Error(`Component \"${def}\" not registered.`),\n        \"Component resolution failed\",\n        {\n          componentName: def,\n          availableComponents: Array.from(this.eleva._components.keys()),\n        }\n      );\n    }\n    return componentDef;\n  }\n\n  /**\n   * Resolves a function component definition to a component object.\n   * @private\n   * @param {Function} def - The function to resolve.\n   * @returns {Promise<ComponentDefinition>} The resolved component.\n   * @throws {Error} If the function fails to load the component.\n   */\n  async _resolveFunctionComponent(def) {\n    try {\n      const funcStr = def.toString();\n      const isAsyncImport =\n        funcStr.includes(\"import(\") || funcStr.startsWith(\"() =>\");\n\n      const result = await def();\n      return isAsyncImport ? result.default || result : result;\n    } catch (error) {\n      this.errorHandler.handle(\n        new Error(`Failed to load async component: ${error.message}`),\n        \"Component resolution failed\",\n        { function: def.toString(), error }\n      );\n    }\n  }\n\n  /**\n   * Validates a component definition object.\n   * @private\n   * @param {any} def - The component definition to validate.\n   * @returns {ComponentDefinition} The validated component.\n   * @throws {Error} If the component definition is invalid.\n   */\n  _validateComponentDefinition(def) {\n    if (!def || typeof def !== \"object\") {\n      this.errorHandler.handle(\n        new Error(`Invalid component definition: ${typeof def}`),\n        \"Component validation failed\",\n        { definition: def }\n      );\n    }\n\n    if (\n      typeof def.template !== \"function\" &&\n      typeof def.template !== \"string\"\n    ) {\n      this.errorHandler.handle(\n        new Error(\"Component missing template property\"),\n        \"Component validation failed\",\n        { definition: def }\n      );\n    }\n\n    return def;\n  }\n\n  /**\n   * Resolves a component definition to a component object.\n   * @private\n   * @param {any} def - The component definition to resolve.\n   * @returns {Promise<ComponentDefinition | null>} The resolved component or null.\n   */\n  async _resolveComponent(def) {\n    if (def === null || def === undefined) {\n      return null;\n    }\n\n    if (typeof def === \"string\") {\n      return this._resolveStringComponent(def);\n    }\n\n    if (typeof def === \"function\") {\n      return await this._resolveFunctionComponent(def);\n    }\n\n    if (def && typeof def === \"object\") {\n      return this._validateComponentDefinition(def);\n    }\n\n    this.errorHandler.handle(\n      new Error(`Invalid component definition: ${typeof def}`),\n      \"Component resolution failed\",\n      { definition: def }\n    );\n  }\n\n  /**\n   * Asynchronously resolves the layout and page components for a route.\n   * @private\n   * @param {RouteDefinition} route - The route to resolve components for.\n   * @returns {Promise<{layoutComponent: ComponentDefinition | null, pageComponent: ComponentDefinition}>}\n   */\n  async _resolveComponents(route) {\n    const effectiveLayout = route.layout || this.options.globalLayout;\n\n    try {\n      const [layoutComponent, pageComponent] = await Promise.all([\n        this._resolveComponent(effectiveLayout),\n        this._resolveComponent(route.component),\n      ]);\n\n      if (!pageComponent) {\n        this.errorHandler.handle(\n          new Error(\n            `Page component is null or undefined for route: ${route.path}`\n          ),\n          \"Component resolution failed\",\n          { route: route.path }\n        );\n      }\n\n      return { layoutComponent, pageComponent };\n    } catch (error) {\n      this.errorHandler.log(\n        `Error resolving components for route ${route.path}`,\n        error,\n        { route: route.path }\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Renders the components for the current route into the DOM.\n   * @private\n   * @param {ComponentDefinition | null} layoutComponent - The pre-loaded layout component.\n   * @param {ComponentDefinition} pageComponent - The pre-loaded page component.\n   */\n  async _render(layoutComponent, pageComponent) {\n    const mountEl = document.querySelector(this.options.mount);\n    if (!mountEl) {\n      this.errorHandler.handle(\n        new Error(`Mount element \"${this.options.mount}\" not found.`),\n        { mountSelector: this.options.mount }\n      );\n    }\n\n    if (layoutComponent) {\n      const layoutInstance = await this.eleva.mount(\n        mountEl,\n        this._wrapComponentWithChildren(layoutComponent)\n      );\n      this.currentLayout.value = layoutInstance;\n      const viewEl = this._findViewElement(layoutInstance.container);\n      const viewInstance = await this.eleva.mount(\n        viewEl,\n        this._wrapComponentWithChildren(pageComponent)\n      );\n      this.currentView.value = viewInstance;\n    } else {\n      const viewInstance = await this.eleva.mount(\n        mountEl,\n        this._wrapComponentWithChildren(pageComponent)\n      );\n      this.currentView.value = viewInstance;\n      this.currentLayout.value = null;\n    }\n  }\n\n  /**\n   * Creates a getter function for router context properties.\n   * @private\n   * @param {string} property - The property name to access.\n   * @param {any} defaultValue - The default value if property is undefined.\n   * @returns {Function} A getter function.\n   */\n  _createRouteGetter(property, defaultValue) {\n    return () => this.currentRoute.value?.[property] ?? defaultValue;\n  }\n\n  /**\n   * Wraps a component definition to inject router-specific context into its setup function.\n   * @private\n   * @param {ComponentDefinition} component - The component to wrap.\n   * @returns {ComponentDefinition} The wrapped component definition.\n   */\n  _wrapComponent(component) {\n    const originalSetup = component.setup;\n    const self = this;\n\n    return {\n      ...component,\n      async setup(ctx) {\n        ctx.router = {\n          navigate: self.navigate.bind(self),\n          current: self.currentRoute,\n          previous: self.previousRoute,\n\n          // Route property getters\n          get params() {\n            return self._createRouteGetter(\"params\", {})();\n          },\n          get query() {\n            return self._createRouteGetter(\"query\", {})();\n          },\n          get path() {\n            return self._createRouteGetter(\"path\", \"/\")();\n          },\n          get fullUrl() {\n            return self._createRouteGetter(\"fullUrl\", window.location.href)();\n          },\n          get meta() {\n            return self._createRouteGetter(\"meta\", {})();\n          },\n        };\n\n        return originalSetup ? await originalSetup(ctx) : {};\n      },\n    };\n  }\n\n  /**\n   * Recursively wraps all child components to ensure they have access to router context.\n   * @private\n   * @param {ComponentDefinition} component - The component to wrap.\n   * @returns {ComponentDefinition} The wrapped component definition.\n   */\n  _wrapComponentWithChildren(component) {\n    const wrappedComponent = this._wrapComponent(component);\n\n    // If the component has children, wrap them too\n    if (\n      wrappedComponent.children &&\n      typeof wrappedComponent.children === \"object\"\n    ) {\n      const wrappedChildren = {};\n      for (const [selector, childComponent] of Object.entries(\n        wrappedComponent.children\n      )) {\n        wrappedChildren[selector] =\n          this._wrapComponentWithChildren(childComponent);\n      }\n      wrappedComponent.children = wrappedChildren;\n    }\n\n    return wrappedComponent;\n  }\n\n  /**\n   * Gets the current location information from the browser's window object.\n   * @private\n   * @returns {Omit<RouteLocation, 'params' | 'meta' | 'name' | 'matched'>}\n   */\n  _getCurrentLocation() {\n    if (typeof window === \"undefined\")\n      return { path: \"/\", query: {}, fullUrl: \"\" };\n    let path, queryString, fullUrl;\n    switch (this.options.mode) {\n      case \"hash\":\n        fullUrl = window.location.hash.slice(1) || \"/\";\n        [path, queryString] = fullUrl.split(\"?\");\n        break;\n      case \"query\":\n        const urlParams = new URLSearchParams(window.location.search);\n        path = urlParams.get(this.options.queryParam) || \"/\";\n        queryString = window.location.search.slice(1);\n        fullUrl = path;\n        break;\n      default: // 'history' mode\n        path = window.location.pathname || \"/\";\n        queryString = window.location.search.slice(1);\n        fullUrl = `${path}${queryString ? \"?\" + queryString : \"\"}`;\n    }\n    return {\n      path: path.startsWith(\"/\") ? path : `/${path}`,\n      query: this._parseQuery(queryString),\n      fullUrl,\n    };\n  }\n\n  /**\n   * Parses a query string into a key-value object.\n   * @private\n   */\n  _parseQuery(queryString) {\n    const query = {};\n    if (queryString) {\n      new URLSearchParams(queryString).forEach((value, key) => {\n        query[key] = value;\n      });\n    }\n    return query;\n  }\n\n  /**\n   * Matches a given path against the registered routes.\n   * @private\n   * @param {string} path - The path to match.\n   * @returns {{route: RouteDefinition, params: Object<string, string>} | null} The matched route and its params, or null.\n   */\n  _matchRoute(path) {\n    const pathSegments = path.split(\"/\").filter(Boolean);\n\n    for (const route of this.routes) {\n      // Handle the root path as a special case.\n      if (route.path === \"/\") {\n        if (pathSegments.length === 0) return { route, params: {} };\n        continue;\n      }\n\n      if (route.segments.length !== pathSegments.length) continue;\n\n      const params = {};\n      let isMatch = true;\n      for (let i = 0; i < route.segments.length; i++) {\n        const routeSegment = route.segments[i];\n        const pathSegment = pathSegments[i];\n        if (routeSegment.type === \"param\") {\n          params[routeSegment.name] = decodeURIComponent(pathSegment);\n        } else if (routeSegment.value !== pathSegment) {\n          isMatch = false;\n          break;\n        }\n      }\n      if (isMatch) return { route, params };\n    }\n    return null;\n  }\n\n  /** Registers a global pre-navigation guard. */\n  onBeforeEach(guard) {\n    this.options.onBeforeEach = guard;\n  }\n  /** Registers a global hook that runs after a new route component has been mounted *if* the route has an `afterEnter` hook. */\n  onAfterEnter(hook) {\n    this.emitter.on(\"router:afterEnter\", hook);\n  }\n  /** Registers a global hook that runs after a route component has been unmounted *if* the route has an `afterLeave` hook. */\n  onAfterLeave(hook) {\n    this.emitter.on(\"router:afterLeave\", hook);\n  }\n  /** Registers a global hook that runs after a navigation has been confirmed and all hooks have completed. */\n  onAfterEach(hook) {\n    this.emitter.on(\"router:afterEach\", hook);\n  }\n  /** Registers a global error handler for navigation. */\n  onError(handler) {\n    this.emitter.on(\"router:onError\", handler);\n  }\n\n  /**\n   * Registers a plugin with the router.\n   * @param {RouterPlugin} plugin - The plugin to register.\n   */\n  use(plugin, options = {}) {\n    if (typeof plugin.install !== \"function\") {\n      this.errorHandler.handle(\n        new Error(\"Plugin must have an install method\"),\n        \"Plugin registration failed\",\n        { plugin }\n      );\n    }\n\n    // Check if plugin is already registered\n    if (this.plugins.has(plugin.name)) {\n      this.errorHandler.warn(`Plugin \"${plugin.name}\" is already registered`, {\n        existingPlugin: this.plugins.get(plugin.name),\n      });\n      return;\n    }\n\n    this.plugins.set(plugin.name, plugin);\n    plugin.install(this, options);\n  }\n\n  /**\n   * Gets all registered plugins.\n   * @returns {RouterPlugin[]} Array of registered plugins.\n   */\n  getPlugins() {\n    return Array.from(this.plugins.values());\n  }\n\n  /**\n   * Gets a plugin by name.\n   * @param {string} name - The plugin name.\n   * @returns {RouterPlugin | undefined} The plugin or undefined.\n   */\n  getPlugin(name) {\n    return this.plugins.get(name);\n  }\n\n  /**\n   * Removes a plugin from the router.\n   * @param {string} name - The plugin name.\n   * @returns {boolean} True if the plugin was removed.\n   */\n  removePlugin(name) {\n    const plugin = this.plugins.get(name);\n    if (!plugin) return false;\n\n    // Call destroy if available\n    if (typeof plugin.destroy === \"function\") {\n      try {\n        plugin.destroy(this);\n      } catch (error) {\n        this.errorHandler.log(`Plugin ${name} destroy failed`, error);\n      }\n    }\n\n    return this.plugins.delete(name);\n  }\n\n  /**\n   * Sets a custom error handler. Used by error handling plugins.\n   * @param {Object} errorHandler - The error handler object with handle, warn, and log methods.\n   */\n  setErrorHandler(errorHandler) {\n    if (\n      errorHandler &&\n      typeof errorHandler.handle === \"function\" &&\n      typeof errorHandler.warn === \"function\" &&\n      typeof errorHandler.log === \"function\"\n    ) {\n      this.errorHandler = errorHandler;\n    } else {\n      console.warn(\n        \"[ElevaRouter] Invalid error handler provided. Must have handle, warn, and log methods.\"\n      );\n    }\n  }\n}\n\n/**\n * @typedef {Object} RouterOptions\n * @property {string} mount - A CSS selector for the main element where the app is mounted.\n * @property {RouteDefinition[]} routes - An array of route definitions.\n * @property {'hash' | 'query' | 'history'} [mode='hash'] - The routing mode.\n * @property {string} [queryParam='page'] - The query parameter to use in 'query' mode.\n * @property {string} [viewSelector='view'] - The selector for the view element within a layout.\n * @property {boolean} [autoStart=true] - Whether to start the router automatically.\n * @property {NavigationGuard} [onBeforeEach] - A global guard executed before every navigation.\n * @property {string | ComponentDefinition | (() => Promise<{default: ComponentDefinition}>)} [globalLayout] - A global layout for all routes. Can be overridden by a route's specific layout.\n */\n\n/**\n * @class 🚀 RouterPlugin\n * @classdesc A powerful, reactive, and flexible Router Plugin for Eleva.js applications.\n * This plugin provides comprehensive client-side routing functionality including:\n * - Multiple routing modes (hash, history, query)\n * - Navigation guards and lifecycle hooks\n * - Reactive state management\n * - Component resolution and lazy loading\n * - Layout and page component separation\n * - Plugin system for extensibility\n * - Advanced error handling\n *\n * @example\n * // Install the plugin\n * const app = new Eleva(\"myApp\");\n *\n * const HomePage = { template: () => `<h1>Home</h1>` };\n * const AboutPage = { template: () => `<h1>About Us</h1>` };\n * const UserPage = {\n *   template: (ctx) => `<h1>User: ${ctx.router.params.id}</h1>`\n * };\n *\n * app.use(RouterPlugin, {\n *   mount: '#app',\n *   mode: 'hash',\n *   routes: [\n *     { path: '/', component: HomePage },\n *     { path: '/about', component: AboutPage },\n *     { path: '/users/:id', component: UserPage }\n *   ]\n * });\n */\nexport const RouterPlugin = {\n  /**\n   * Unique identifier for the plugin\n   * @type {string}\n   */\n  name: \"router\",\n\n  /**\n   * Plugin version\n   * @type {string}\n   */\n  version: \"1.0.0-rc.1\",\n\n  /**\n   * Plugin description\n   * @type {string}\n   */\n  description: \"Client-side routing for Eleva applications\",\n\n  /**\n   * Installs the RouterPlugin into an Eleva instance.\n   *\n   * @param {Eleva} eleva - The Eleva instance\n   * @param {RouterOptions} options - Router configuration options\n   * @param {string} options.mount - A CSS selector for the main element where the app is mounted\n   * @param {RouteDefinition[]} options.routes - An array of route definitions\n   * @param {'hash' | 'query' | 'history'} [options.mode='hash'] - The routing mode\n   * @param {string} [options.queryParam='page'] - The query parameter to use in 'query' mode\n   * @param {string} [options.viewSelector='view'] - The selector for the view element within a layout\n   * @param {boolean} [options.autoStart=true] - Whether to start the router automatically\n   * @param {NavigationGuard} [options.onBeforeEach] - A global guard executed before every navigation\n   * @param {string | ComponentDefinition | (() => Promise<{default: ComponentDefinition}>)} [options.globalLayout] - A global layout for all routes\n   *\n   * @example\n   * // main.js\n   * import Eleva from './eleva.js';\n   * import { RouterPlugin } from './plugins/RouterPlugin.js';\n   *\n   * const app = new Eleva('myApp');\n   *\n   * const HomePage = { template: () => `<h1>Home</h1>` };\n   * const AboutPage = { template: () => `<h1>About Us</h1>` };\n   *\n   * app.use(RouterPlugin, {\n   *  mount: '#app',\n   *  routes: [\n   *    { path: '/', component: HomePage },\n   *    { path: '/about', component: AboutPage }\n   *  ]\n   * });\n   */\n  install(eleva, options = {}) {\n    if (!options.mount) {\n      throw new Error(\"[RouterPlugin] 'mount' option is required\");\n    }\n\n    if (!options.routes || !Array.isArray(options.routes)) {\n      throw new Error(\"[RouterPlugin] 'routes' option must be an array\");\n    }\n\n    /**\n     * Registers a component definition with the Eleva instance.\n     * This method handles both inline component objects and pre-registered component names.\n     *\n     * @param {any} def - The component definition to register\n     * @param {string} type - The type of component for naming (e.g., \"Route\", \"Layout\")\n     * @returns {string | null} The registered component name or null if no definition provided\n     */\n    const register = (def, type) => {\n      if (!def) return null;\n\n      if (typeof def === \"object\" && def !== null && !def.name) {\n        const name = `Eleva${type}Component_${Math.random()\n          .toString(36)\n          .slice(2, 11)}`;\n\n        try {\n          eleva.component(name, def);\n          return name;\n        } catch (error) {\n          throw new Error(\n            `[RouterPlugin] Failed to register ${type} component: ${error.message}`\n          );\n        }\n      }\n      return def;\n    };\n\n    if (options.globalLayout) {\n      options.globalLayout = register(options.globalLayout, \"GlobalLayout\");\n    }\n\n    (options.routes || []).forEach((route) => {\n      route.component = register(route.component, \"Route\");\n      if (route.layout) {\n        route.layout = register(route.layout, \"RouteLayout\");\n      }\n    });\n\n    const router = new Router(eleva, options);\n    eleva.router = router;\n\n    if (options.autoStart !== false) {\n      queueMicrotask(() => router.start());\n    }\n\n    // Add plugin metadata to the Eleva instance\n    if (!eleva.plugins) {\n      eleva.plugins = new Map();\n    }\n    eleva.plugins.set(this.name, {\n      name: this.name,\n      version: this.version,\n      description: this.description,\n      options,\n    });\n\n    // Add utility methods for manual router access\n    eleva.navigate = router.navigate.bind(router);\n    eleva.getCurrentRoute = () => router.currentRoute.value;\n    eleva.getRouteParams = () => router.currentParams.value;\n    eleva.getRouteQuery = () => router.currentQuery.value;\n\n    return router;\n  },\n\n  /**\n   * Uninstalls the plugin from the Eleva instance\n   *\n   * @param {Eleva} eleva - The Eleva instance\n   */\n  async uninstall(eleva) {\n    if (eleva.router) {\n      await eleva.router.destroy();\n      delete eleva.router;\n    }\n\n    // Remove plugin metadata\n    if (eleva.plugins) {\n      eleva.plugins.delete(this.name);\n    }\n\n    // Remove utility methods\n    delete eleva.navigate;\n    delete eleva.getCurrentRoute;\n    delete eleva.getRouteParams;\n    delete eleva.getRouteQuery;\n  },\n};\n"],"names":["CoreErrorHandler","handle","error","context","details","message","formattedError","Error","originalError","console","warn","log","Router","constructor","eleva","options","mode","queryParam","viewSelector","routes","_processRoutes","emitter","isStarted","_isNavigating","eventListeners","currentRoute","signal","previousRoute","currentParams","currentQuery","currentLayout","currentView","plugins","Map","errorHandler","_validateOptions","includes","processedRoutes","route","push","segments","_parsePathIntoSegments","path","normalizedPath","replace","split","filter","Boolean","map","segment","startsWith","paramName","substring","type","name","value","_findViewElement","container","selector","querySelector","start","window","document","mount","mountSelector","handler","_handleRouteChange","addEventListener","removeEventListener","destroy","plugin","values","forEach","cleanup","unmount","navigate","location","params","target","_buildPath","query","Object","keys","length","queryString","URLSearchParams","toString","_isSameRoute","navigationSuccessful","_proceedWithNavigation","state","historyMethod","newUrl","pathname","search","history","replaceState","hash","url","_buildQueryUrl","queueMicrotask","emit","urlParams","set","current","targetPath","targetQuery","_parseQuery","JSON","stringify","result","key","entries","encodedValue","encodeURIComponent","String","RegExp","from","toLocation","_getCurrentLocation","fullUrl","fullPath","toMatch","_matchRoute","notFoundRoute","find","pathMatch","to","meta","matched","canNavigate","_runGuards","layoutComponent","pageComponent","_resolveComponents","toLayout","layout","globalLayout","fromLayout","tryUnmount","instance","afterLeave","_render","afterEnter","guards","onBeforeEach","beforeLeave","beforeEnter","guard","_resolveStringComponent","def","componentDef","_components","get","componentName","availableComponents","Array","_resolveFunctionComponent","funcStr","isAsyncImport","default","function","_validateComponentDefinition","definition","template","_resolveComponent","undefined","effectiveLayout","Promise","all","component","mountEl","layoutInstance","_wrapComponentWithChildren","viewEl","viewInstance","_createRouteGetter","property","defaultValue","_wrapComponent","originalSetup","setup","self","ctx","router","bind","previous","href","wrappedComponent","children","wrappedChildren","childComponent","slice","pathSegments","isMatch","i","routeSegment","pathSegment","decodeURIComponent","onAfterEnter","hook","on","onAfterLeave","onAfterEach","onError","use","install","has","existingPlugin","getPlugins","getPlugin","removePlugin","delete","setErrorHandler","RouterPlugin","version","description","isArray","register","Math","random","autoStart","getCurrentRoute","getRouteParams","getRouteQuery","uninstall"],"mappings":";;;;;;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMA,gBAAgB,GAAG;EACvB;EACF;EACA;EACA;EACA;EACA;EACA;IACEC,MAAMA,CAACC,KAAK,EAAEC,OAAO,EAAEC,OAAO,GAAG,EAAE,EAAE;MACnC,MAAMC,OAAO,GAAG,CAAA,cAAA,EAAiBF,OAAO,KAAKD,KAAK,CAACG,OAAO,CAAA,CAAE;EAC5D,IAAA,MAAMC,cAAc,GAAG,IAAIC,KAAK,CAACF,OAAO,CAAC;;EAEzC;MACAC,cAAc,CAACE,aAAa,GAAGN,KAAK;MACpCI,cAAc,CAACH,OAAO,GAAGA,OAAO;MAChCG,cAAc,CAACF,OAAO,GAAGA,OAAO;EAEhCK,IAAAA,OAAO,CAACP,KAAK,CAACG,OAAO,EAAE;QAAEH,KAAK;QAAEC,OAAO;EAAEC,MAAAA;EAAQ,KAAC,CAAC;EACnD,IAAA,MAAME,cAAc;IACtB,CAAC;EAED;EACF;EACA;EACA;EACA;EACEI,EAAAA,IAAIA,CAACL,OAAO,EAAED,OAAO,GAAG,EAAE,EAAE;MAC1BK,OAAO,CAACC,IAAI,CAAC,CAAA,cAAA,EAAiBL,OAAO,CAAA,CAAE,EAAED,OAAO,CAAC;IACnD,CAAC;EAED;EACF;EACA;EACA;EACA;EACA;IACEO,GAAGA,CAACN,OAAO,EAAEH,KAAK,EAAEE,OAAO,GAAG,EAAE,EAAE;EAChCK,IAAAA,OAAO,CAACP,KAAK,CAAC,CAAA,cAAA,EAAiBG,OAAO,EAAE,EAAE;QAAEH,KAAK;EAAEE,MAAAA;EAAQ,KAAC,CAAC;EAC/D,EAAA;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMQ,MAAM,CAAC;EACX;EACF;EACA;EACA;EACA;EACEC,EAAAA,WAAWA,CAACC,KAAK,EAAEC,OAAO,GAAG,EAAE,EAAE;EAC/B;MACA,IAAI,CAACD,KAAK,GAAGA,KAAK;;EAElB;MACA,IAAI,CAACC,OAAO,GAAG;EACbC,MAAAA,IAAI,EAAE,MAAM;EACZC,MAAAA,UAAU,EAAE,MAAM;EAClBC,MAAAA,YAAY,EAAE,MAAM;QACpB,GAAGH;OACJ;;EAED;EACA,IAAA,IAAI,CAACI,MAAM,GAAG,IAAI,CAACC,cAAc,CAACL,OAAO,CAACI,MAAM,IAAI,EAAE,CAAC;;EAEvD;EACA,IAAA,IAAI,CAACE,OAAO,GAAG,IAAI,CAACP,KAAK,CAACO,OAAO;;EAEjC;MACA,IAAI,CAACC,SAAS,GAAG,KAAK;;EAEtB;MACA,IAAI,CAACC,aAAa,GAAG,KAAK;;EAE1B;MACA,IAAI,CAACC,cAAc,GAAG,EAAE;;EAExB;MACA,IAAI,CAACC,YAAY,GAAG,IAAI,IAAI,CAACX,KAAK,CAACY,MAAM,CAAC,IAAI,CAAC;;EAE/C;MACA,IAAI,CAACC,aAAa,GAAG,IAAI,IAAI,CAACb,KAAK,CAACY,MAAM,CAAC,IAAI,CAAC;;EAEhD;EACA,IAAA,IAAI,CAACE,aAAa,GAAG,IAAI,IAAI,CAACd,KAAK,CAACY,MAAM,CAAC,EAAE,CAAC;;EAE9C;EACA,IAAA,IAAI,CAACG,YAAY,GAAG,IAAI,IAAI,CAACf,KAAK,CAACY,MAAM,CAAC,EAAE,CAAC;;EAE7C;MACA,IAAI,CAACI,aAAa,GAAG,IAAI,IAAI,CAAChB,KAAK,CAACY,MAAM,CAAC,IAAI,CAAC;;EAEhD;MACA,IAAI,CAACK,WAAW,GAAG,IAAI,IAAI,CAACjB,KAAK,CAACY,MAAM,CAAC,IAAI,CAAC;;EAE9C;EACA,IAAA,IAAI,CAACM,OAAO,GAAG,IAAIC,GAAG,EAAE;;EAExB;MACA,IAAI,CAACC,YAAY,GAAGlC,gBAAgB;MAEpC,IAAI,CAACmC,gBAAgB,EAAE;EACzB,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACEA,EAAAA,gBAAgBA,GAAG;EACjB,IAAA,IAAI,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACrB,OAAO,CAACC,IAAI,CAAC,EAAE;EAC7D,MAAA,IAAI,CAACkB,YAAY,CAACjC,MAAM,CACtB,IAAIM,KAAK,CACP,CAAA,sBAAA,EAAyB,IAAI,CAACQ,OAAO,CAACC,IAAI,0CAC5C,CAAC,EACD,iCACF,CAAC;EACH,IAAA;EACF,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;IACEI,cAAcA,CAACD,MAAM,EAAE;MACrB,MAAMkB,eAAe,GAAG,EAAE;EAC1B,IAAA,KAAK,MAAMC,KAAK,IAAInB,MAAM,EAAE;QAC1B,IAAI;UACFkB,eAAe,CAACE,IAAI,CAAC;EACnB,UAAA,GAAGD,KAAK;EACRE,UAAAA,QAAQ,EAAE,IAAI,CAACC,sBAAsB,CAACH,KAAK,CAACI,IAAI;EAClD,SAAC,CAAC;QACJ,CAAC,CAAC,OAAOxC,KAAK,EAAE;EACd,QAAA,IAAI,CAACgC,YAAY,CAACxB,IAAI,CACpB,qCAAqC4B,KAAK,CAACI,IAAI,IAAI,WAAW,CAAA,GAAA,EAAMxC,KAAK,CAACG,OAAO,EAAE,EACnF;YAAEiC,KAAK;EAAEpC,UAAAA;EAAM,SACjB,CAAC;EACH,MAAA;EACF,IAAA;EACA,IAAA,OAAOmC,eAAe;EACxB,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;IACEI,sBAAsBA,CAACC,IAAI,EAAE;EAC3B,IAAA,IAAI,CAACA,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;EACrC,MAAA,IAAI,CAACR,YAAY,CAACjC,MAAM,CACtB,IAAIM,KAAK,CAAC,uCAAuC,CAAC,EAClD,qBAAqB,EACrB;EAAEmC,QAAAA;EAAK,OACT,CAAC;EACH,IAAA;EAEA,IAAA,MAAMC,cAAc,GAAGD,IAAI,CAACE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,GAAG;MAE1E,IAAID,cAAc,KAAK,GAAG,EAAE;EAC1B,MAAA,OAAO,EAAE;EACX,IAAA;EAEA,IAAA,OAAOA,cAAc,CAClBE,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAACC,OAAO,CAAC,CACfC,GAAG,CAAEC,OAAO,IAAK;EAChB,MAAA,IAAIA,OAAO,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;EAC3B,QAAA,MAAMC,SAAS,GAAGF,OAAO,CAACG,SAAS,CAAC,CAAC,CAAC;UACtC,IAAI,CAACD,SAAS,EAAE;EACd,UAAA,IAAI,CAACjB,YAAY,CAACjC,MAAM,CACtB,IAAIM,KAAK,CAAC,CAAA,2BAAA,EAA8B0C,OAAO,CAAA,CAAE,CAAC,EAClD,qBAAqB,EACrB;cAAEA,OAAO;EAAEP,YAAAA;EAAK,WAClB,CAAC;EACH,QAAA;UACA,OAAO;EAAEW,UAAAA,IAAI,EAAE,OAAO;EAAEC,UAAAA,IAAI,EAAEH;WAAW;EAC3C,MAAA;QACA,OAAO;EAAEE,QAAAA,IAAI,EAAE,QAAQ;EAAEE,QAAAA,KAAK,EAAEN;SAAS;EAC3C,IAAA,CAAC,CAAC;EACN,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;IACEO,gBAAgBA,CAACC,SAAS,EAAE;EAC1B,IAAA,MAAMC,QAAQ,GAAG,IAAI,CAAC3C,OAAO,CAACG,YAAY;EAC1C,IAAA,OACEuC,SAAS,CAACE,aAAa,CAAC,IAAID,QAAQ,CAAA,CAAE,CAAC,IACvCD,SAAS,CAACE,aAAa,CAAC,CAAA,CAAA,EAAID,QAAQ,CAAA,CAAE,CAAC,IACvCD,SAAS,CAACE,aAAa,CAAC,CAAA,MAAA,EAASD,QAAQ,CAAA,CAAA,CAAG,CAAC,IAC7CD,SAAS,CAACE,aAAa,CAACD,QAAQ,CAAC,IACjCD,SAAS;EAEb,EAAA;;EAEA;EACF;EACA;EACA;IACE,MAAMG,KAAKA,GAAG;MACZ,IAAI,IAAI,CAACtC,SAAS,EAAE;EAClB,MAAA,IAAI,CAACY,YAAY,CAACxB,IAAI,CAAC,2BAA2B,CAAC;EACnD,MAAA;EACF,IAAA;EACA,IAAA,IAAI,OAAOmD,MAAM,KAAK,WAAW,EAAE;EACjC,MAAA,IAAI,CAAC3B,YAAY,CAACxB,IAAI,CACpB,uEACF,CAAC;EACD,MAAA;EACF,IAAA;EACA,IAAA,IACE,OAAOoD,QAAQ,KAAK,WAAW,IAC/B,CAACA,QAAQ,CAACH,aAAa,CAAC,IAAI,CAAC5C,OAAO,CAACgD,KAAK,CAAC,EAC3C;EACA,MAAA,IAAI,CAAC7B,YAAY,CAACxB,IAAI,CACpB,CAAA,eAAA,EAAkB,IAAI,CAACK,OAAO,CAACgD,KAAK,CAAA,sDAAA,CAAwD,EAC5F;EAAEC,QAAAA,aAAa,EAAE,IAAI,CAACjD,OAAO,CAACgD;EAAM,OACtC,CAAC;EACD,MAAA;EACF,IAAA;MACA,MAAME,OAAO,GAAGA,MAAM,IAAI,CAACC,kBAAkB,EAAE;EAC/C,IAAA,IAAI,IAAI,CAACnD,OAAO,CAACC,IAAI,KAAK,MAAM,EAAE;EAChC6C,MAAAA,MAAM,CAACM,gBAAgB,CAAC,YAAY,EAAEF,OAAO,CAAC;EAC9C,MAAA,IAAI,CAACzC,cAAc,CAACe,IAAI,CAAC,MACvBsB,MAAM,CAACO,mBAAmB,CAAC,YAAY,EAAEH,OAAO,CAClD,CAAC;EACH,IAAA,CAAC,MAAM;EACLJ,MAAAA,MAAM,CAACM,gBAAgB,CAAC,UAAU,EAAEF,OAAO,CAAC;EAC5C,MAAA,IAAI,CAACzC,cAAc,CAACe,IAAI,CAAC,MACvBsB,MAAM,CAACO,mBAAmB,CAAC,UAAU,EAAEH,OAAO,CAChD,CAAC;EACH,IAAA;MACA,IAAI,CAAC3C,SAAS,GAAG,IAAI;EACrB,IAAA,MAAM,IAAI,CAAC4C,kBAAkB,EAAE;EACjC,EAAA;;EAEA;EACF;EACA;EACA;IACE,MAAMG,OAAOA,GAAG;EACd,IAAA,IAAI,CAAC,IAAI,CAAC/C,SAAS,EAAE;;EAErB;MACA,KAAK,MAAMgD,MAAM,IAAI,IAAI,CAACtC,OAAO,CAACuC,MAAM,EAAE,EAAE;EAC1C,MAAA,IAAI,OAAOD,MAAM,CAACD,OAAO,KAAK,UAAU,EAAE;UACxC,IAAI;EACF,UAAA,MAAMC,MAAM,CAACD,OAAO,CAAC,IAAI,CAAC;UAC5B,CAAC,CAAC,OAAOnE,KAAK,EAAE;EACd,UAAA,IAAI,CAACgC,YAAY,CAACvB,GAAG,CAAC,CAAA,OAAA,EAAU2D,MAAM,CAAChB,IAAI,CAAA,eAAA,CAAiB,EAAEpD,KAAK,CAAC;EACtE,QAAA;EACF,MAAA;EACF,IAAA;MAEA,IAAI,CAACsB,cAAc,CAACgD,OAAO,CAAEC,OAAO,IAAKA,OAAO,EAAE,CAAC;MACnD,IAAI,CAACjD,cAAc,GAAG,EAAE;EACxB,IAAA,IAAI,IAAI,CAACM,aAAa,CAACyB,KAAK,EAAE;QAC5B,MAAM,IAAI,CAACzB,aAAa,CAACyB,KAAK,CAACmB,OAAO,EAAE;EAC1C,IAAA;MACA,IAAI,CAACpD,SAAS,GAAG,KAAK;EACxB,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;IACE,MAAMqD,QAAQA,CAACC,QAAQ,EAAEC,MAAM,GAAG,EAAE,EAAE;MACpC,IAAI;EACF,MAAA,MAAMC,MAAM,GACV,OAAOF,QAAQ,KAAK,QAAQ,GAAG;EAAElC,QAAAA,IAAI,EAAEkC,QAAQ;EAAEC,QAAAA;EAAO,OAAC,GAAGD,QAAQ;EACtE,MAAA,IAAIlC,IAAI,GAAG,IAAI,CAACqC,UAAU,CAACD,MAAM,CAACpC,IAAI,EAAEoC,MAAM,CAACD,MAAM,IAAI,EAAE,CAAC;EAC5D,MAAA,MAAMG,KAAK,GAAGF,MAAM,CAACE,KAAK,IAAI,EAAE;QAEhC,IAAIC,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC,CAACG,MAAM,GAAG,CAAC,EAAE;UACjC,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAACL,KAAK,CAAC,CAACM,QAAQ,EAAE;EACzD,QAAA,IAAIF,WAAW,EAAE1C,IAAI,IAAI,CAAA,CAAA,EAAI0C,WAAW,CAAA,CAAE;EAC5C,MAAA;EAEA,MAAA,IAAI,IAAI,CAACG,YAAY,CAAC7C,IAAI,EAAEoC,MAAM,CAACD,MAAM,EAAEG,KAAK,CAAC,EAAE;EACjD,QAAA;EACF,MAAA;QAEA,MAAMQ,oBAAoB,GAAG,MAAM,IAAI,CAACC,sBAAsB,CAAC/C,IAAI,CAAC;EAEpE,MAAA,IAAI8C,oBAAoB,EAAE;UACxB,IAAI,CAACjE,aAAa,GAAG,IAAI;EACzB,QAAA,MAAMmE,KAAK,GAAGZ,MAAM,CAACY,KAAK,IAAI,EAAE;EAChC,QAAA,MAAM9C,OAAO,GAAGkC,MAAM,CAAClC,OAAO,IAAI,KAAK;EACvC,QAAA,MAAM+C,aAAa,GAAG/C,OAAO,GAAG,cAAc,GAAG,WAAW;EAE5D,QAAA,IAAI,IAAI,CAAC7B,OAAO,CAACC,IAAI,KAAK,MAAM,EAAE;EAChC,UAAA,IAAI4B,OAAO,EAAE;EACX,YAAA,MAAMgD,MAAM,GAAG,CAAA,EAAG/B,MAAM,CAACe,QAAQ,CAACiB,QAAQ,CAAA,EAAGhC,MAAM,CAACe,QAAQ,CAACkB,MAAM,CAAA,CAAA,EAAIpD,IAAI,CAAA,CAAE;cAC7EmB,MAAM,CAACkC,OAAO,CAACC,YAAY,CAACN,KAAK,EAAE,EAAE,EAAEE,MAAM,CAAC;EAChD,UAAA,CAAC,MAAM;EACL/B,YAAAA,MAAM,CAACe,QAAQ,CAACqB,IAAI,GAAGvD,IAAI;EAC7B,UAAA;EACF,QAAA,CAAC,MAAM;EACL,UAAA,MAAMwD,GAAG,GACP,IAAI,CAACnF,OAAO,CAACC,IAAI,KAAK,OAAO,GAAG,IAAI,CAACmF,cAAc,CAACzD,IAAI,CAAC,GAAGA,IAAI;YAClEqD,OAAO,CAACJ,aAAa,CAAC,CAACD,KAAK,EAAE,EAAE,EAAEQ,GAAG,CAAC;EACxC,QAAA;EACAE,QAAAA,cAAc,CAAC,MAAM;YACnB,IAAI,CAAC7E,aAAa,GAAG,KAAK;EAC5B,QAAA,CAAC,CAAC;EACJ,MAAA;MACF,CAAC,CAAC,OAAOrB,KAAK,EAAE;QACd,IAAI,CAACgC,YAAY,CAACvB,GAAG,CAAC,mBAAmB,EAAET,KAAK,CAAC;QACjD,MAAM,IAAI,CAACmB,OAAO,CAACgF,IAAI,CAAC,gBAAgB,EAAEnG,KAAK,CAAC;EAClD,IAAA;EACF,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;IACEiG,cAAcA,CAACzD,IAAI,EAAE;MACnB,MAAM4D,SAAS,GAAG,IAAIjB,eAAe,CAACxB,MAAM,CAACe,QAAQ,CAACkB,MAAM,CAAC;EAC7DQ,IAAAA,SAAS,CAACC,GAAG,CAAC,IAAI,CAACxF,OAAO,CAACE,UAAU,EAAEyB,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1D,IAAA,OAAO,CAAA,EAAGgB,MAAM,CAACe,QAAQ,CAACiB,QAAQ,CAAA,CAAA,EAAIS,SAAS,CAAChB,QAAQ,EAAE,CAAA,CAAE;EAC9D,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,YAAYA,CAAC7C,IAAI,EAAEmC,MAAM,EAAEG,KAAK,EAAE;EAChC,IAAA,MAAMwB,OAAO,GAAG,IAAI,CAAC/E,YAAY,CAAC8B,KAAK;EACvC,IAAA,IAAI,CAACiD,OAAO,EAAE,OAAO,KAAK;MAC1B,MAAM,CAACC,UAAU,EAAErB,WAAW,CAAC,GAAG1C,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;MACjD,MAAM6D,WAAW,GAAG1B,KAAK,IAAI,IAAI,CAAC2B,WAAW,CAACvB,WAAW,IAAI,EAAE,CAAC;EAChE,IAAA,OACEoB,OAAO,CAAC9D,IAAI,KAAK+D,UAAU,IAC3BG,IAAI,CAACC,SAAS,CAACL,OAAO,CAAC3B,MAAM,CAAC,KAAK+B,IAAI,CAACC,SAAS,CAAChC,MAAM,IAAI,EAAE,CAAC,IAC/D+B,IAAI,CAACC,SAAS,CAACL,OAAO,CAACxB,KAAK,CAAC,KAAK4B,IAAI,CAACC,SAAS,CAACH,WAAW,CAAC;EAEjE,EAAA;;EAEA;EACF;EACA;EACA;EACE3B,EAAAA,UAAUA,CAACrC,IAAI,EAAEmC,MAAM,EAAE;MACvB,IAAIiC,MAAM,GAAGpE,IAAI;EACjB,IAAA,KAAK,MAAM,CAACqE,GAAG,EAAExD,KAAK,CAAC,IAAI0B,MAAM,CAAC+B,OAAO,CAACnC,MAAM,CAAC,EAAE;EACjD;QACA,MAAMoC,YAAY,GAAGC,kBAAkB,CAACC,MAAM,CAAC5D,KAAK,CAAC,CAAC;EACtDuD,MAAAA,MAAM,GAAGA,MAAM,CAAClE,OAAO,CAAC,IAAIwE,MAAM,CAAC,CAAA,CAAA,EAAIL,GAAG,KAAK,EAAE,GAAG,CAAC,EAAEE,YAAY,CAAC;EACtE,IAAA;EACA,IAAA,OAAOH,MAAM;EACf,EAAA;;EAEA;EACF;EACA;EACA;IACE,MAAM5C,kBAAkBA,GAAG;MACzB,IAAI,IAAI,CAAC3C,aAAa,EAAE;EACxB,IAAA,MAAM8F,IAAI,GAAG,IAAI,CAAC5F,YAAY,CAAC8B,KAAK;EACpC,IAAA,MAAM+D,UAAU,GAAG,IAAI,CAACC,mBAAmB,EAAE;MAE7C,MAAM/B,oBAAoB,GAAG,MAAM,IAAI,CAACC,sBAAsB,CAC5D6B,UAAU,CAACE,OACb,CAAC;;EAED;EACA,IAAA,IAAI,CAAChC,oBAAoB,IAAI6B,IAAI,EAAE;QACjC,IAAI,CAAC1C,QAAQ,CAAC;UAAEjC,IAAI,EAAE2E,IAAI,CAAC3E,IAAI;UAAEsC,KAAK,EAAEqC,IAAI,CAACrC,KAAK;EAAEpC,QAAAA,OAAO,EAAE;EAAK,OAAC,CAAC;EACtE,IAAA;EACF,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;IACE,MAAM6C,sBAAsBA,CAACgC,QAAQ,EAAE;EACrC,IAAA,MAAMJ,IAAI,GAAG,IAAI,CAAC5F,YAAY,CAAC8B,KAAK;EACpC,IAAA,MAAM,CAACb,IAAI,EAAE0C,WAAW,CAAC,GAAG,CAACqC,QAAQ,IAAI,GAAG,EAAE5E,KAAK,CAAC,GAAG,CAAC;EACxD,IAAA,MAAMyE,UAAU,GAAG;EACjB5E,MAAAA,IAAI,EAAEA,IAAI,CAACQ,UAAU,CAAC,GAAG,CAAC,GAAGR,IAAI,GAAG,CAAA,CAAA,EAAIA,IAAI,CAAA,CAAE;EAC9CsC,MAAAA,KAAK,EAAE,IAAI,CAAC2B,WAAW,CAACvB,WAAW,CAAC;EACpCoC,MAAAA,OAAO,EAAEC;OACV;MAED,IAAIC,OAAO,GAAG,IAAI,CAACC,WAAW,CAACL,UAAU,CAAC5E,IAAI,CAAC;MAE/C,IAAI,CAACgF,OAAO,EAAE;EACZ,MAAA,MAAME,aAAa,GAAG,IAAI,CAACzG,MAAM,CAAC0G,IAAI,CAAEvF,KAAK,IAAKA,KAAK,CAACI,IAAI,KAAK,GAAG,CAAC;EACrE,MAAA,IAAIkF,aAAa,EAAE;EACjBF,QAAAA,OAAO,GAAG;EACRpF,UAAAA,KAAK,EAAEsF,aAAa;EACpB/C,UAAAA,MAAM,EAAE;EAAEiD,YAAAA,SAAS,EAAER,UAAU,CAAC5E,IAAI,CAACU,SAAS,CAAC,CAAC;EAAE;WACnD;EACH,MAAA,CAAC,MAAM;UACL,MAAM,IAAI,CAAC/B,OAAO,CAACgF,IAAI,CACrB,gBAAgB,EAChB,IAAI9F,KAAK,CAAC,CAAA,iBAAA,EAAoB+G,UAAU,CAAC5E,IAAI,CAAA,CAAE,CAAC,EAChD4E,UAAU,EACVD,IACF,CAAC;EACD,QAAA,OAAO,KAAK;EACd,MAAA;EACF,IAAA;EAEA,IAAA,MAAMU,EAAE,GAAG;EACT,MAAA,GAAGT,UAAU;QACbzC,MAAM,EAAE6C,OAAO,CAAC7C,MAAM;QACtBmD,IAAI,EAAEN,OAAO,CAACpF,KAAK,CAAC0F,IAAI,IAAI,EAAE;EAC9B1E,MAAAA,IAAI,EAAEoE,OAAO,CAACpF,KAAK,CAACgB,IAAI;QACxB2E,OAAO,EAAEP,OAAO,CAACpF;OAClB;MAED,IAAI;EACF;EACA,MAAA,MAAM4F,WAAW,GAAG,MAAM,IAAI,CAACC,UAAU,CAACJ,EAAE,EAAEV,IAAI,EAAEK,OAAO,CAACpF,KAAK,CAAC;EAClE,MAAA,IAAI,CAAC4F,WAAW,EAAE,OAAO,KAAK;;EAE9B;QACA,MAAM;UAAEE,eAAe;EAAEC,QAAAA;SAAe,GAAG,MAAM,IAAI,CAACC,kBAAkB,CACtEZ,OAAO,CAACpF,KACV,CAAC;;EAED;EACA,MAAA,IAAI+E,IAAI,EAAE;EACR,QAAA,MAAMkB,QAAQ,GAAGb,OAAO,CAACpF,KAAK,CAACkG,MAAM,IAAI,IAAI,CAACzH,OAAO,CAAC0H,YAAY;EAClE,QAAA,MAAMC,UAAU,GAAGrB,IAAI,CAACY,OAAO,CAACO,MAAM,IAAI,IAAI,CAACzH,OAAO,CAAC0H,YAAY;EAEnE,QAAA,MAAME,UAAU,GAAG,MAAOC,QAAQ,IAAK;YACrC,IAAI,CAACA,QAAQ,EAAE;YAEf,IAAI;EACF,YAAA,MAAMA,QAAQ,CAAClE,OAAO,EAAE;YAC1B,CAAC,CAAC,OAAOxE,KAAK,EAAE;EACd,YAAA,IAAI,CAACgC,YAAY,CAACxB,IAAI,CAAC,gCAAgC,EAAE;gBACvDR,KAAK;EACL0I,cAAAA;EACF,aAAC,CAAC;EACJ,UAAA;UACF,CAAC;UAED,IAAIL,QAAQ,KAAKG,UAAU,EAAE;EAC3B,UAAA,MAAMC,UAAU,CAAC,IAAI,CAAC7G,aAAa,CAACyB,KAAK,CAAC;EAC1C,UAAA,IAAI,CAACzB,aAAa,CAACyB,KAAK,GAAG,IAAI;EACjC,QAAA,CAAC,MAAM;EACL,UAAA,MAAMoF,UAAU,CAAC,IAAI,CAAC5G,WAAW,CAACwB,KAAK,CAAC;EACxC,UAAA,IAAI,CAACxB,WAAW,CAACwB,KAAK,GAAG,IAAI;EAC/B,QAAA;;EAEA;EACA,QAAA,IAAI8D,IAAI,CAACY,OAAO,CAACY,UAAU,EAAE;YAC3B,MAAMxB,IAAI,CAACY,OAAO,CAACY,UAAU,CAACd,EAAE,EAAEV,IAAI,CAAC;YACvC,MAAM,IAAI,CAAChG,OAAO,CAACgF,IAAI,CAAC,mBAAmB,EAAE0B,EAAE,EAAEV,IAAI,CAAC;EACxD,QAAA;EACF,MAAA;;EAEA;EACA,MAAA,IAAI,CAAC1F,aAAa,CAAC4B,KAAK,GAAG8D,IAAI;EAC/B,MAAA,IAAI,CAAC5F,YAAY,CAAC8B,KAAK,GAAGwE,EAAE;QAC5B,IAAI,CAACnG,aAAa,CAAC2B,KAAK,GAAGwE,EAAE,CAAClD,MAAM,IAAI,EAAE;QAC1C,IAAI,CAAChD,YAAY,CAAC0B,KAAK,GAAGwE,EAAE,CAAC/C,KAAK,IAAI,EAAE;;EAExC;QACA,MAAM,IAAI,CAAC8D,OAAO,CAACV,eAAe,EAAEC,aAAa,EAAEN,EAAE,CAAC;;EAEtD;EACA,MAAA,IAAIL,OAAO,CAACpF,KAAK,CAACyG,UAAU,EAAE;UAC5B,MAAMrB,OAAO,CAACpF,KAAK,CAACyG,UAAU,CAAChB,EAAE,EAAEV,IAAI,CAAC;UACxC,MAAM,IAAI,CAAChG,OAAO,CAACgF,IAAI,CAAC,mBAAmB,EAAE0B,EAAE,EAAEV,IAAI,CAAC;EACxD,MAAA;QACA,MAAM,IAAI,CAAChG,OAAO,CAACgF,IAAI,CAAC,kBAAkB,EAAE0B,EAAE,EAAEV,IAAI,CAAC;EAErD,MAAA,OAAO,IAAI;MACb,CAAC,CAAC,OAAOnH,KAAK,EAAE;QACd,IAAI,CAACgC,YAAY,CAACvB,GAAG,CAAC,yBAAyB,EAAET,KAAK,EAAE;UAAE6H,EAAE;EAAEV,QAAAA;EAAK,OAAC,CAAC;EACrE,MAAA,MAAM,IAAI,CAAChG,OAAO,CAACgF,IAAI,CAAC,gBAAgB,EAAEnG,KAAK,EAAE6H,EAAE,EAAEV,IAAI,CAAC;EAC1D,MAAA,OAAO,KAAK;EACd,IAAA;EACF,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACE,EAAA,MAAMc,UAAUA,CAACJ,EAAE,EAAEV,IAAI,EAAE/E,KAAK,EAAE;MAChC,MAAM0G,MAAM,GAAG,CACb,IAAI,IAAI,CAACjI,OAAO,CAACkI,YAAY,GAAG,CAAC,IAAI,CAAClI,OAAO,CAACkI,YAAY,CAAC,GAAG,EAAE,CAAC,EACjE,IAAI5B,IAAI,IAAIA,IAAI,CAACY,OAAO,CAACiB,WAAW,GAAG,CAAC7B,IAAI,CAACY,OAAO,CAACiB,WAAW,CAAC,GAAG,EAAE,CAAC,EACvE,IAAI5G,KAAK,CAAC6G,WAAW,GAAG,CAAC7G,KAAK,CAAC6G,WAAW,CAAC,GAAG,EAAE,CAAC,CAClD;EACD,IAAA,KAAK,MAAMC,KAAK,IAAIJ,MAAM,EAAE;QAC1B,MAAMlC,MAAM,GAAG,MAAMsC,KAAK,CAACrB,EAAE,EAAEV,IAAI,CAAC;EACpC,MAAA,IAAIP,MAAM,KAAK,KAAK,EAAE,OAAO,KAAK;QAClC,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;EAC5D,QAAA,IAAI,CAACnC,QAAQ,CAACmC,MAAM,CAAC;EACrB,QAAA,OAAO,KAAK;EACd,MAAA;EACF,IAAA;EACA,IAAA,OAAO,IAAI;EACb,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;IACEuC,uBAAuBA,CAACC,GAAG,EAAE;MAC3B,MAAMC,YAAY,GAAG,IAAI,CAACzI,KAAK,CAAC0I,WAAW,CAACC,GAAG,CAACH,GAAG,CAAC;MACpD,IAAI,CAACC,YAAY,EAAE;EACjB,MAAA,IAAI,CAACrH,YAAY,CAACjC,MAAM,CACtB,IAAIM,KAAK,CAAC,CAAA,WAAA,EAAc+I,GAAG,CAAA,iBAAA,CAAmB,CAAC,EAC/C,6BAA6B,EAC7B;EACEI,QAAAA,aAAa,EAAEJ,GAAG;EAClBK,QAAAA,mBAAmB,EAAEC,KAAK,CAACvC,IAAI,CAAC,IAAI,CAACvG,KAAK,CAAC0I,WAAW,CAACtE,IAAI,EAAE;EAC/D,OACF,CAAC;EACH,IAAA;EACA,IAAA,OAAOqE,YAAY;EACrB,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;IACE,MAAMM,yBAAyBA,CAACP,GAAG,EAAE;MACnC,IAAI;EACF,MAAA,MAAMQ,OAAO,GAAGR,GAAG,CAAChE,QAAQ,EAAE;EAC9B,MAAA,MAAMyE,aAAa,GACjBD,OAAO,CAAC1H,QAAQ,CAAC,SAAS,CAAC,IAAI0H,OAAO,CAAC5G,UAAU,CAAC,OAAO,CAAC;EAE5D,MAAA,MAAM4D,MAAM,GAAG,MAAMwC,GAAG,EAAE;QAC1B,OAAOS,aAAa,GAAGjD,MAAM,CAACkD,OAAO,IAAIlD,MAAM,GAAGA,MAAM;MAC1D,CAAC,CAAC,OAAO5G,KAAK,EAAE;EACd,MAAA,IAAI,CAACgC,YAAY,CAACjC,MAAM,CACtB,IAAIM,KAAK,CAAC,CAAA,gCAAA,EAAmCL,KAAK,CAACG,OAAO,CAAA,CAAE,CAAC,EAC7D,6BAA6B,EAC7B;EAAE4J,QAAAA,QAAQ,EAAEX,GAAG,CAAChE,QAAQ,EAAE;EAAEpF,QAAAA;EAAM,OACpC,CAAC;EACH,IAAA;EACF,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;IACEgK,4BAA4BA,CAACZ,GAAG,EAAE;EAChC,IAAA,IAAI,CAACA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;EACnC,MAAA,IAAI,CAACpH,YAAY,CAACjC,MAAM,CACtB,IAAIM,KAAK,CAAC,CAAA,8BAAA,EAAiC,OAAO+I,GAAG,CAAA,CAAE,CAAC,EACxD,6BAA6B,EAC7B;EAAEa,QAAAA,UAAU,EAAEb;EAAI,OACpB,CAAC;EACH,IAAA;EAEA,IAAA,IACE,OAAOA,GAAG,CAACc,QAAQ,KAAK,UAAU,IAClC,OAAOd,GAAG,CAACc,QAAQ,KAAK,QAAQ,EAChC;EACA,MAAA,IAAI,CAAClI,YAAY,CAACjC,MAAM,CACtB,IAAIM,KAAK,CAAC,qCAAqC,CAAC,EAChD,6BAA6B,EAC7B;EAAE4J,QAAAA,UAAU,EAAEb;EAAI,OACpB,CAAC;EACH,IAAA;EAEA,IAAA,OAAOA,GAAG;EACZ,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;IACE,MAAMe,iBAAiBA,CAACf,GAAG,EAAE;EAC3B,IAAA,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKgB,SAAS,EAAE;EACrC,MAAA,OAAO,IAAI;EACb,IAAA;EAEA,IAAA,IAAI,OAAOhB,GAAG,KAAK,QAAQ,EAAE;EAC3B,MAAA,OAAO,IAAI,CAACD,uBAAuB,CAACC,GAAG,CAAC;EAC1C,IAAA;EAEA,IAAA,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;EAC7B,MAAA,OAAO,MAAM,IAAI,CAACO,yBAAyB,CAACP,GAAG,CAAC;EAClD,IAAA;EAEA,IAAA,IAAIA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;EAClC,MAAA,OAAO,IAAI,CAACY,4BAA4B,CAACZ,GAAG,CAAC;EAC/C,IAAA;EAEA,IAAA,IAAI,CAACpH,YAAY,CAACjC,MAAM,CACtB,IAAIM,KAAK,CAAC,CAAA,8BAAA,EAAiC,OAAO+I,GAAG,CAAA,CAAE,CAAC,EACxD,6BAA6B,EAC7B;EAAEa,MAAAA,UAAU,EAAEb;EAAI,KACpB,CAAC;EACH,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;IACE,MAAMhB,kBAAkBA,CAAChG,KAAK,EAAE;MAC9B,MAAMiI,eAAe,GAAGjI,KAAK,CAACkG,MAAM,IAAI,IAAI,CAACzH,OAAO,CAAC0H,YAAY;MAEjE,IAAI;EACF,MAAA,MAAM,CAACL,eAAe,EAAEC,aAAa,CAAC,GAAG,MAAMmC,OAAO,CAACC,GAAG,CAAC,CACzD,IAAI,CAACJ,iBAAiB,CAACE,eAAe,CAAC,EACvC,IAAI,CAACF,iBAAiB,CAAC/H,KAAK,CAACoI,SAAS,CAAC,CACxC,CAAC;QAEF,IAAI,CAACrC,aAAa,EAAE;EAClB,QAAA,IAAI,CAACnG,YAAY,CAACjC,MAAM,CACtB,IAAIM,KAAK,CACP,CAAA,+CAAA,EAAkD+B,KAAK,CAACI,IAAI,CAAA,CAC9D,CAAC,EACD,6BAA6B,EAC7B;YAAEJ,KAAK,EAAEA,KAAK,CAACI;EAAK,SACtB,CAAC;EACH,MAAA;QAEA,OAAO;UAAE0F,eAAe;EAAEC,QAAAA;SAAe;MAC3C,CAAC,CAAC,OAAOnI,KAAK,EAAE;EACd,MAAA,IAAI,CAACgC,YAAY,CAACvB,GAAG,CACnB,CAAA,qCAAA,EAAwC2B,KAAK,CAACI,IAAI,CAAA,CAAE,EACpDxC,KAAK,EACL;UAAEoC,KAAK,EAAEA,KAAK,CAACI;EAAK,OACtB,CAAC;EACD,MAAA,MAAMxC,KAAK;EACb,IAAA;EACF,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;EACE,EAAA,MAAM4I,OAAOA,CAACV,eAAe,EAAEC,aAAa,EAAE;MAC5C,MAAMsC,OAAO,GAAG7G,QAAQ,CAACH,aAAa,CAAC,IAAI,CAAC5C,OAAO,CAACgD,KAAK,CAAC;MAC1D,IAAI,CAAC4G,OAAO,EAAE;EACZ,MAAA,IAAI,CAACzI,YAAY,CAACjC,MAAM,CACtB,IAAIM,KAAK,CAAC,CAAA,eAAA,EAAkB,IAAI,CAACQ,OAAO,CAACgD,KAAK,CAAA,YAAA,CAAc,CAAC,EAC7D;EAAEC,QAAAA,aAAa,EAAE,IAAI,CAACjD,OAAO,CAACgD;EAAM,OACtC,CAAC;EACH,IAAA;EAEA,IAAA,IAAIqE,eAAe,EAAE;EACnB,MAAA,MAAMwC,cAAc,GAAG,MAAM,IAAI,CAAC9J,KAAK,CAACiD,KAAK,CAC3C4G,OAAO,EACP,IAAI,CAACE,0BAA0B,CAACzC,eAAe,CACjD,CAAC;EACD,MAAA,IAAI,CAACtG,aAAa,CAACyB,KAAK,GAAGqH,cAAc;QACzC,MAAME,MAAM,GAAG,IAAI,CAACtH,gBAAgB,CAACoH,cAAc,CAACnH,SAAS,CAAC;EAC9D,MAAA,MAAMsH,YAAY,GAAG,MAAM,IAAI,CAACjK,KAAK,CAACiD,KAAK,CACzC+G,MAAM,EACN,IAAI,CAACD,0BAA0B,CAACxC,aAAa,CAC/C,CAAC;EACD,MAAA,IAAI,CAACtG,WAAW,CAACwB,KAAK,GAAGwH,YAAY;EACvC,IAAA,CAAC,MAAM;EACL,MAAA,MAAMA,YAAY,GAAG,MAAM,IAAI,CAACjK,KAAK,CAACiD,KAAK,CACzC4G,OAAO,EACP,IAAI,CAACE,0BAA0B,CAACxC,aAAa,CAC/C,CAAC;EACD,MAAA,IAAI,CAACtG,WAAW,CAACwB,KAAK,GAAGwH,YAAY;EACrC,MAAA,IAAI,CAACjJ,aAAa,CAACyB,KAAK,GAAG,IAAI;EACjC,IAAA;EACF,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;EACEyH,EAAAA,kBAAkBA,CAACC,QAAQ,EAAEC,YAAY,EAAE;MACzC,OAAO,MAAM,IAAI,CAACzJ,YAAY,CAAC8B,KAAK,GAAG0H,QAAQ,CAAC,IAAIC,YAAY;EAClE,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;IACEC,cAAcA,CAACT,SAAS,EAAE;EACxB,IAAA,MAAMU,aAAa,GAAGV,SAAS,CAACW,KAAK;MACrC,MAAMC,IAAI,GAAG,IAAI;MAEjB,OAAO;EACL,MAAA,GAAGZ,SAAS;QACZ,MAAMW,KAAKA,CAACE,GAAG,EAAE;UACfA,GAAG,CAACC,MAAM,GAAG;YACX7G,QAAQ,EAAE2G,IAAI,CAAC3G,QAAQ,CAAC8G,IAAI,CAACH,IAAI,CAAC;YAClC9E,OAAO,EAAE8E,IAAI,CAAC7J,YAAY;YAC1BiK,QAAQ,EAAEJ,IAAI,CAAC3J,aAAa;EAE5B;YACA,IAAIkD,MAAMA,GAAG;cACX,OAAOyG,IAAI,CAACN,kBAAkB,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE;YAChD,CAAC;YACD,IAAIhG,KAAKA,GAAG;cACV,OAAOsG,IAAI,CAACN,kBAAkB,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE;YAC/C,CAAC;YACD,IAAItI,IAAIA,GAAG;cACT,OAAO4I,IAAI,CAACN,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;YAC/C,CAAC;YACD,IAAIxD,OAAOA,GAAG;EACZ,YAAA,OAAO8D,IAAI,CAACN,kBAAkB,CAAC,SAAS,EAAEnH,MAAM,CAACe,QAAQ,CAAC+G,IAAI,CAAC,EAAE;YACnE,CAAC;YACD,IAAI3D,IAAIA,GAAG;cACT,OAAOsD,IAAI,CAACN,kBAAkB,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;EAC9C,UAAA;WACD;UAED,OAAOI,aAAa,GAAG,MAAMA,aAAa,CAACG,GAAG,CAAC,GAAG,EAAE;EACtD,MAAA;OACD;EACH,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;IACEV,0BAA0BA,CAACH,SAAS,EAAE;EACpC,IAAA,MAAMkB,gBAAgB,GAAG,IAAI,CAACT,cAAc,CAACT,SAAS,CAAC;;EAEvD;MACA,IACEkB,gBAAgB,CAACC,QAAQ,IACzB,OAAOD,gBAAgB,CAACC,QAAQ,KAAK,QAAQ,EAC7C;QACA,MAAMC,eAAe,GAAG,EAAE;EAC1B,MAAA,KAAK,MAAM,CAACpI,QAAQ,EAAEqI,cAAc,CAAC,IAAI9G,MAAM,CAAC+B,OAAO,CACrD4E,gBAAgB,CAACC,QACnB,CAAC,EAAE;UACDC,eAAe,CAACpI,QAAQ,CAAC,GACvB,IAAI,CAACmH,0BAA0B,CAACkB,cAAc,CAAC;EACnD,MAAA;QACAH,gBAAgB,CAACC,QAAQ,GAAGC,eAAe;EAC7C,IAAA;EAEA,IAAA,OAAOF,gBAAgB;EACzB,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACErE,EAAAA,mBAAmBA,GAAG;EACpB,IAAA,IAAI,OAAO1D,MAAM,KAAK,WAAW,EAC/B,OAAO;EAAEnB,MAAAA,IAAI,EAAE,GAAG;QAAEsC,KAAK,EAAE,EAAE;EAAEwC,MAAAA,OAAO,EAAE;OAAI;EAC9C,IAAA,IAAI9E,IAAI,EAAE0C,WAAW,EAAEoC,OAAO;EAC9B,IAAA,QAAQ,IAAI,CAACzG,OAAO,CAACC,IAAI;EACvB,MAAA,KAAK,MAAM;EACTwG,QAAAA,OAAO,GAAG3D,MAAM,CAACe,QAAQ,CAACqB,IAAI,CAAC+F,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG;UAC9C,CAACtJ,IAAI,EAAE0C,WAAW,CAAC,GAAGoC,OAAO,CAAC3E,KAAK,CAAC,GAAG,CAAC;EACxC,QAAA;EACF,MAAA,KAAK,OAAO;UACV,MAAMyD,SAAS,GAAG,IAAIjB,eAAe,CAACxB,MAAM,CAACe,QAAQ,CAACkB,MAAM,CAAC;EAC7DpD,QAAAA,IAAI,GAAG4D,SAAS,CAACmD,GAAG,CAAC,IAAI,CAAC1I,OAAO,CAACE,UAAU,CAAC,IAAI,GAAG;UACpDmE,WAAW,GAAGvB,MAAM,CAACe,QAAQ,CAACkB,MAAM,CAACkG,KAAK,CAAC,CAAC,CAAC;EAC7CxE,QAAAA,OAAO,GAAG9E,IAAI;EACd,QAAA;EACF,MAAA;EAAS;EACPA,QAAAA,IAAI,GAAGmB,MAAM,CAACe,QAAQ,CAACiB,QAAQ,IAAI,GAAG;UACtCT,WAAW,GAAGvB,MAAM,CAACe,QAAQ,CAACkB,MAAM,CAACkG,KAAK,CAAC,CAAC,CAAC;UAC7CxE,OAAO,GAAG,CAAA,EAAG9E,IAAI,CAAA,EAAG0C,WAAW,GAAG,GAAG,GAAGA,WAAW,GAAG,EAAE,CAAA,CAAE;EAC9D;MACA,OAAO;EACL1C,MAAAA,IAAI,EAAEA,IAAI,CAACQ,UAAU,CAAC,GAAG,CAAC,GAAGR,IAAI,GAAG,CAAA,CAAA,EAAIA,IAAI,CAAA,CAAE;EAC9CsC,MAAAA,KAAK,EAAE,IAAI,CAAC2B,WAAW,CAACvB,WAAW,CAAC;EACpCoC,MAAAA;OACD;EACH,EAAA;;EAEA;EACF;EACA;EACA;IACEb,WAAWA,CAACvB,WAAW,EAAE;MACvB,MAAMJ,KAAK,GAAG,EAAE;EAChB,IAAA,IAAII,WAAW,EAAE;QACf,IAAIC,eAAe,CAACD,WAAW,CAAC,CAACZ,OAAO,CAAC,CAACjB,KAAK,EAAEwD,GAAG,KAAK;EACvD/B,QAAAA,KAAK,CAAC+B,GAAG,CAAC,GAAGxD,KAAK;EACpB,MAAA,CAAC,CAAC;EACJ,IAAA;EACA,IAAA,OAAOyB,KAAK;EACd,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;IACE2C,WAAWA,CAACjF,IAAI,EAAE;EAChB,IAAA,MAAMuJ,YAAY,GAAGvJ,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;EAEpD,IAAA,KAAK,MAAMT,KAAK,IAAI,IAAI,CAACnB,MAAM,EAAE;EAC/B;EACA,MAAA,IAAImB,KAAK,CAACI,IAAI,KAAK,GAAG,EAAE;EACtB,QAAA,IAAIuJ,YAAY,CAAC9G,MAAM,KAAK,CAAC,EAAE,OAAO;YAAE7C,KAAK;EAAEuC,UAAAA,MAAM,EAAE;WAAI;EAC3D,QAAA;EACF,MAAA;QAEA,IAAIvC,KAAK,CAACE,QAAQ,CAAC2C,MAAM,KAAK8G,YAAY,CAAC9G,MAAM,EAAE;QAEnD,MAAMN,MAAM,GAAG,EAAE;QACjB,IAAIqH,OAAO,GAAG,IAAI;EAClB,MAAA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG7J,KAAK,CAACE,QAAQ,CAAC2C,MAAM,EAAEgH,CAAC,EAAE,EAAE;EAC9C,QAAA,MAAMC,YAAY,GAAG9J,KAAK,CAACE,QAAQ,CAAC2J,CAAC,CAAC;EACtC,QAAA,MAAME,WAAW,GAAGJ,YAAY,CAACE,CAAC,CAAC;EACnC,QAAA,IAAIC,YAAY,CAAC/I,IAAI,KAAK,OAAO,EAAE;YACjCwB,MAAM,CAACuH,YAAY,CAAC9I,IAAI,CAAC,GAAGgJ,kBAAkB,CAACD,WAAW,CAAC;EAC7D,QAAA,CAAC,MAAM,IAAID,YAAY,CAAC7I,KAAK,KAAK8I,WAAW,EAAE;EAC7CH,UAAAA,OAAO,GAAG,KAAK;EACf,UAAA;EACF,QAAA;EACF,MAAA;QACA,IAAIA,OAAO,EAAE,OAAO;UAAE5J,KAAK;EAAEuC,QAAAA;SAAQ;EACvC,IAAA;EACA,IAAA,OAAO,IAAI;EACb,EAAA;;EAEA;IACAoE,YAAYA,CAACG,KAAK,EAAE;EAClB,IAAA,IAAI,CAACrI,OAAO,CAACkI,YAAY,GAAGG,KAAK;EACnC,EAAA;EACA;IACAmD,YAAYA,CAACC,IAAI,EAAE;MACjB,IAAI,CAACnL,OAAO,CAACoL,EAAE,CAAC,mBAAmB,EAAED,IAAI,CAAC;EAC5C,EAAA;EACA;IACAE,YAAYA,CAACF,IAAI,EAAE;MACjB,IAAI,CAACnL,OAAO,CAACoL,EAAE,CAAC,mBAAmB,EAAED,IAAI,CAAC;EAC5C,EAAA;EACA;IACAG,WAAWA,CAACH,IAAI,EAAE;MAChB,IAAI,CAACnL,OAAO,CAACoL,EAAE,CAAC,kBAAkB,EAAED,IAAI,CAAC;EAC3C,EAAA;EACA;IACAI,OAAOA,CAAC3I,OAAO,EAAE;MACf,IAAI,CAAC5C,OAAO,CAACoL,EAAE,CAAC,gBAAgB,EAAExI,OAAO,CAAC;EAC5C,EAAA;;EAEA;EACF;EACA;EACA;EACE4I,EAAAA,GAAGA,CAACvI,MAAM,EAAEvD,OAAO,GAAG,EAAE,EAAE;EACxB,IAAA,IAAI,OAAOuD,MAAM,CAACwI,OAAO,KAAK,UAAU,EAAE;EACxC,MAAA,IAAI,CAAC5K,YAAY,CAACjC,MAAM,CACtB,IAAIM,KAAK,CAAC,oCAAoC,CAAC,EAC/C,4BAA4B,EAC5B;EAAE+D,QAAAA;EAAO,OACX,CAAC;EACH,IAAA;;EAEA;MACA,IAAI,IAAI,CAACtC,OAAO,CAAC+K,GAAG,CAACzI,MAAM,CAAChB,IAAI,CAAC,EAAE;QACjC,IAAI,CAACpB,YAAY,CAACxB,IAAI,CAAC,WAAW4D,MAAM,CAAChB,IAAI,CAAA,uBAAA,CAAyB,EAAE;UACtE0J,cAAc,EAAE,IAAI,CAAChL,OAAO,CAACyH,GAAG,CAACnF,MAAM,CAAChB,IAAI;EAC9C,OAAC,CAAC;EACF,MAAA;EACF,IAAA;MAEA,IAAI,CAACtB,OAAO,CAACuE,GAAG,CAACjC,MAAM,CAAChB,IAAI,EAAEgB,MAAM,CAAC;EACrCA,IAAAA,MAAM,CAACwI,OAAO,CAAC,IAAI,EAAE/L,OAAO,CAAC;EAC/B,EAAA;;EAEA;EACF;EACA;EACA;EACEkM,EAAAA,UAAUA,GAAG;MACX,OAAOrD,KAAK,CAACvC,IAAI,CAAC,IAAI,CAACrF,OAAO,CAACuC,MAAM,EAAE,CAAC;EAC1C,EAAA;;EAEA;EACF;EACA;EACA;EACA;IACE2I,SAASA,CAAC5J,IAAI,EAAE;EACd,IAAA,OAAO,IAAI,CAACtB,OAAO,CAACyH,GAAG,CAACnG,IAAI,CAAC;EAC/B,EAAA;;EAEA;EACF;EACA;EACA;EACA;IACE6J,YAAYA,CAAC7J,IAAI,EAAE;MACjB,MAAMgB,MAAM,GAAG,IAAI,CAACtC,OAAO,CAACyH,GAAG,CAACnG,IAAI,CAAC;EACrC,IAAA,IAAI,CAACgB,MAAM,EAAE,OAAO,KAAK;;EAEzB;EACA,IAAA,IAAI,OAAOA,MAAM,CAACD,OAAO,KAAK,UAAU,EAAE;QACxC,IAAI;EACFC,QAAAA,MAAM,CAACD,OAAO,CAAC,IAAI,CAAC;QACtB,CAAC,CAAC,OAAOnE,KAAK,EAAE;UACd,IAAI,CAACgC,YAAY,CAACvB,GAAG,CAAC,UAAU2C,IAAI,CAAA,eAAA,CAAiB,EAAEpD,KAAK,CAAC;EAC/D,MAAA;EACF,IAAA;EAEA,IAAA,OAAO,IAAI,CAAC8B,OAAO,CAACoL,MAAM,CAAC9J,IAAI,CAAC;EAClC,EAAA;;EAEA;EACF;EACA;EACA;IACE+J,eAAeA,CAACnL,YAAY,EAAE;MAC5B,IACEA,YAAY,IACZ,OAAOA,YAAY,CAACjC,MAAM,KAAK,UAAU,IACzC,OAAOiC,YAAY,CAACxB,IAAI,KAAK,UAAU,IACvC,OAAOwB,YAAY,CAACvB,GAAG,KAAK,UAAU,EACtC;QACA,IAAI,CAACuB,YAAY,GAAGA,YAAY;EAClC,IAAA,CAAC,MAAM;EACLzB,MAAAA,OAAO,CAACC,IAAI,CACV,wFACF,CAAC;EACH,IAAA;EACF,EAAA;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACO,QAAM4M,YAAY,GAAG;EAC1B;EACF;EACA;EACA;EACEhK,EAAAA,IAAI,EAAE,QAAQ;EAEd;EACF;EACA;EACA;EACEiK,EAAAA,OAAO,EAAE,YAAY;EAErB;EACF;EACA;EACA;EACEC,EAAAA,WAAW,EAAE,4CAA4C;EAEzD;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEV,EAAAA,OAAOA,CAAChM,KAAK,EAAEC,OAAO,GAAG,EAAE,EAAE;EAC3B,IAAA,IAAI,CAACA,OAAO,CAACgD,KAAK,EAAE;EAClB,MAAA,MAAM,IAAIxD,KAAK,CAAC,2CAA2C,CAAC;EAC9D,IAAA;EAEA,IAAA,IAAI,CAACQ,OAAO,CAACI,MAAM,IAAI,CAACyI,KAAK,CAAC6D,OAAO,CAAC1M,OAAO,CAACI,MAAM,CAAC,EAAE;EACrD,MAAA,MAAM,IAAIZ,KAAK,CAAC,iDAAiD,CAAC;EACpE,IAAA;;EAEA;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACI,IAAA,MAAMmN,QAAQ,GAAGA,CAACpE,GAAG,EAAEjG,IAAI,KAAK;EAC9B,MAAA,IAAI,CAACiG,GAAG,EAAE,OAAO,IAAI;EAErB,MAAA,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,IAAI,CAACA,GAAG,CAAChG,IAAI,EAAE;UACxD,MAAMA,IAAI,GAAG,CAAA,KAAA,EAAQD,IAAI,aAAasK,IAAI,CAACC,MAAM,EAAE,CAChDtI,QAAQ,CAAC,EAAE,CAAC,CACZ0G,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA,CAAE;UAEjB,IAAI;EACFlL,UAAAA,KAAK,CAAC4J,SAAS,CAACpH,IAAI,EAAEgG,GAAG,CAAC;EAC1B,UAAA,OAAOhG,IAAI;UACb,CAAC,CAAC,OAAOpD,KAAK,EAAE;YACd,MAAM,IAAIK,KAAK,CACb,CAAA,kCAAA,EAAqC8C,IAAI,eAAenD,KAAK,CAACG,OAAO,CAAA,CACvE,CAAC;EACH,QAAA;EACF,MAAA;EACA,MAAA,OAAOiJ,GAAG;MACZ,CAAC;MAED,IAAIvI,OAAO,CAAC0H,YAAY,EAAE;QACxB1H,OAAO,CAAC0H,YAAY,GAAGiF,QAAQ,CAAC3M,OAAO,CAAC0H,YAAY,EAAE,cAAc,CAAC;EACvE,IAAA;MAEA,CAAC1H,OAAO,CAACI,MAAM,IAAI,EAAE,EAAEqD,OAAO,CAAElC,KAAK,IAAK;QACxCA,KAAK,CAACoI,SAAS,GAAGgD,QAAQ,CAACpL,KAAK,CAACoI,SAAS,EAAE,OAAO,CAAC;QACpD,IAAIpI,KAAK,CAACkG,MAAM,EAAE;UAChBlG,KAAK,CAACkG,MAAM,GAAGkF,QAAQ,CAACpL,KAAK,CAACkG,MAAM,EAAE,aAAa,CAAC;EACtD,MAAA;EACF,IAAA,CAAC,CAAC;MAEF,MAAMgD,MAAM,GAAG,IAAI5K,MAAM,CAACE,KAAK,EAAEC,OAAO,CAAC;MACzCD,KAAK,CAAC0K,MAAM,GAAGA,MAAM;EAErB,IAAA,IAAIzK,OAAO,CAAC8M,SAAS,KAAK,KAAK,EAAE;EAC/BzH,MAAAA,cAAc,CAAC,MAAMoF,MAAM,CAAC5H,KAAK,EAAE,CAAC;EACtC,IAAA;;EAEA;EACA,IAAA,IAAI,CAAC9C,KAAK,CAACkB,OAAO,EAAE;EAClBlB,MAAAA,KAAK,CAACkB,OAAO,GAAG,IAAIC,GAAG,EAAE;EAC3B,IAAA;MACAnB,KAAK,CAACkB,OAAO,CAACuE,GAAG,CAAC,IAAI,CAACjD,IAAI,EAAE;QAC3BA,IAAI,EAAE,IAAI,CAACA,IAAI;QACfiK,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBC,WAAW,EAAE,IAAI,CAACA,WAAW;EAC7BzM,MAAAA;EACF,KAAC,CAAC;;EAEF;MACAD,KAAK,CAAC6D,QAAQ,GAAG6G,MAAM,CAAC7G,QAAQ,CAAC8G,IAAI,CAACD,MAAM,CAAC;MAC7C1K,KAAK,CAACgN,eAAe,GAAG,MAAMtC,MAAM,CAAC/J,YAAY,CAAC8B,KAAK;MACvDzC,KAAK,CAACiN,cAAc,GAAG,MAAMvC,MAAM,CAAC5J,aAAa,CAAC2B,KAAK;MACvDzC,KAAK,CAACkN,aAAa,GAAG,MAAMxC,MAAM,CAAC3J,YAAY,CAAC0B,KAAK;EAErD,IAAA,OAAOiI,MAAM;IACf,CAAC;EAED;EACF;EACA;EACA;EACA;IACE,MAAMyC,SAASA,CAACnN,KAAK,EAAE;MACrB,IAAIA,KAAK,CAAC0K,MAAM,EAAE;EAChB,MAAA,MAAM1K,KAAK,CAAC0K,MAAM,CAACnH,OAAO,EAAE;QAC5B,OAAOvD,KAAK,CAAC0K,MAAM;EACrB,IAAA;;EAEA;MACA,IAAI1K,KAAK,CAACkB,OAAO,EAAE;QACjBlB,KAAK,CAACkB,OAAO,CAACoL,MAAM,CAAC,IAAI,CAAC9J,IAAI,CAAC;EACjC,IAAA;;EAEA;MACA,OAAOxC,KAAK,CAAC6D,QAAQ;MACrB,OAAO7D,KAAK,CAACgN,eAAe;MAC5B,OAAOhN,KAAK,CAACiN,cAAc;MAC3B,OAAOjN,KAAK,CAACkN,aAAa;EAC5B,EAAA;EACF;;;;;;;;"}