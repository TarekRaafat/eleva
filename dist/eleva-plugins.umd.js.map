{"version":3,"file":"eleva-plugins.umd.js","sources":["../src/plugins/Attr.js","../src/plugins/Router.js","../src/modules/TemplateEngine.js","../src/plugins/Props.js"],"sourcesContent":["\"use strict\";\n\n/**\n * A regular expression to match hyphenated lowercase letters.\n * @private\n * @type {RegExp}\n */\nconst CAMEL_RE = /-([a-z])/g;\n\n/**\n * @class ðŸŽ¯ AttrPlugin\n * @classdesc A plugin that provides advanced attribute handling for Eleva components.\n * This plugin extends the renderer with sophisticated attribute processing including:\n * - ARIA attribute handling with proper property mapping\n * - Data attribute management\n * - Boolean attribute processing\n * - Dynamic property detection and mapping\n * - Attribute cleanup and removal\n *\n * @example\n * // Install the plugin\n * const app = new Eleva(\"myApp\");\n * app.use(AttrPlugin);\n *\n * // Use advanced attributes in components\n * app.component(\"myComponent\", {\n *   template: (ctx) => `\n *     <button\n *       aria-expanded=\"${ctx.isExpanded.value}\"\n *       data-user-id=\"${ctx.userId.value}\"\n *       disabled=\"${ctx.isLoading.value}\"\n *       class=\"btn ${ctx.variant.value}\"\n *     >\n *       ${ctx.text.value}\n *     </button>\n *   `\n * });\n */\nexport const AttrPlugin = {\n  /**\n   * Unique identifier for the plugin\n   * @type {string}\n   */\n  name: \"attr\",\n\n  /**\n   * Plugin version\n   * @type {string}\n   */\n  version: \"1.0.0-rc.1\",\n\n  /**\n   * Plugin description\n   * @type {string}\n   */\n  description: \"Advanced attribute handling for Eleva components\",\n\n  /**\n   * Installs the plugin into the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   * @param {Object} options - Plugin configuration options\n   * @param {boolean} [options.enableAria=true] - Enable ARIA attribute handling\n   * @param {boolean} [options.enableData=true] - Enable data attribute handling\n   * @param {boolean} [options.enableBoolean=true] - Enable boolean attribute handling\n   * @param {boolean} [options.enableDynamic=true] - Enable dynamic property detection\n   */\n  install(eleva, options = {}) {\n    const {\n      enableAria = true,\n      enableData = true,\n      enableBoolean = true,\n      enableDynamic = true,\n    } = options;\n\n    /**\n     * Updates the attributes of an element to match a new element's attributes.\n     * This method provides sophisticated attribute processing including:\n     * - ARIA attribute handling with proper property mapping\n     * - Data attribute management\n     * - Boolean attribute processing\n     * - Dynamic property detection and mapping\n     * - Attribute cleanup and removal\n     *\n     * @param {HTMLElement} oldEl - The original element to update\n     * @param {HTMLElement} newEl - The new element to update\n     * @returns {void}\n     */\n    const updateAttributes = (oldEl, newEl) => {\n      const oldAttrs = oldEl.attributes;\n      const newAttrs = newEl.attributes;\n\n      // Process new attributes\n      for (let i = 0; i < newAttrs.length; i++) {\n        const { name, value } = newAttrs[i];\n\n        // Skip event attributes (handled by event system)\n        if (name.startsWith(\"@\")) continue;\n\n        // Skip if attribute hasn't changed\n        if (oldEl.getAttribute(name) === value) continue;\n\n        // Handle ARIA attributes\n        if (enableAria && name.startsWith(\"aria-\")) {\n          const prop =\n            \"aria\" + name.slice(5).replace(CAMEL_RE, (_, l) => l.toUpperCase());\n          oldEl[prop] = value;\n          oldEl.setAttribute(name, value);\n        }\n        // Handle data attributes\n        else if (enableData && name.startsWith(\"data-\")) {\n          oldEl.dataset[name.slice(5)] = value;\n          oldEl.setAttribute(name, value);\n        }\n        // Handle other attributes\n        else {\n          let prop = name.replace(CAMEL_RE, (_, l) => l.toUpperCase());\n\n          // Dynamic property detection\n          if (\n            enableDynamic &&\n            !(prop in oldEl) &&\n            !Object.getOwnPropertyDescriptor(Object.getPrototypeOf(oldEl), prop)\n          ) {\n            const elementProps = Object.getOwnPropertyNames(\n              Object.getPrototypeOf(oldEl)\n            );\n            const matchingProp = elementProps.find(\n              (p) =>\n                p.toLowerCase() === name.toLowerCase() ||\n                p.toLowerCase().includes(name.toLowerCase()) ||\n                name.toLowerCase().includes(p.toLowerCase())\n            );\n\n            if (matchingProp) {\n              prop = matchingProp;\n            }\n          }\n\n          const descriptor = Object.getOwnPropertyDescriptor(\n            Object.getPrototypeOf(oldEl),\n            prop\n          );\n          const hasProperty = prop in oldEl || descriptor;\n\n          if (hasProperty) {\n            // Boolean attribute handling\n            if (enableBoolean) {\n              const isBoolean =\n                typeof oldEl[prop] === \"boolean\" ||\n                (descriptor?.get &&\n                  typeof descriptor.get.call(oldEl) === \"boolean\");\n\n              if (isBoolean) {\n                const boolValue =\n                  value !== \"false\" &&\n                  (value === \"\" || value === prop || value === \"true\");\n                oldEl[prop] = boolValue;\n\n                if (boolValue) {\n                  oldEl.setAttribute(name, \"\");\n                } else {\n                  oldEl.removeAttribute(name);\n                }\n              } else {\n                oldEl[prop] = value;\n                oldEl.setAttribute(name, value);\n              }\n            } else {\n              oldEl[prop] = value;\n              oldEl.setAttribute(name, value);\n            }\n          } else {\n            oldEl.setAttribute(name, value);\n          }\n        }\n      }\n\n      // Remove old attributes that are no longer present\n      for (let i = oldAttrs.length - 1; i >= 0; i--) {\n        const name = oldAttrs[i].name;\n        if (!newEl.hasAttribute(name)) {\n          oldEl.removeAttribute(name);\n        }\n      }\n    };\n\n    // Extend the renderer with the advanced attribute handler\n    if (eleva.renderer) {\n      eleva.renderer.updateAttributes = updateAttributes;\n\n      // Store the original _patchNode method\n      const originalPatchNode = eleva.renderer._patchNode;\n      eleva.renderer._originalPatchNode = originalPatchNode;\n\n      // Override the _patchNode method to use our attribute handler\n      eleva.renderer._patchNode = function (oldNode, newNode) {\n        if (oldNode?._eleva_instance) return;\n\n        if (!this._isSameNode(oldNode, newNode)) {\n          oldNode.replaceWith(newNode.cloneNode(true));\n          return;\n        }\n\n        if (oldNode.nodeType === Node.ELEMENT_NODE) {\n          updateAttributes(oldNode, newNode);\n          this._diff(oldNode, newNode);\n        } else if (\n          oldNode.nodeType === Node.TEXT_NODE &&\n          oldNode.nodeValue !== newNode.nodeValue\n        ) {\n          oldNode.nodeValue = newNode.nodeValue;\n        }\n      };\n    }\n\n    // Add plugin metadata to the Eleva instance\n    if (!eleva.plugins) {\n      eleva.plugins = new Map();\n    }\n    eleva.plugins.set(this.name, {\n      name: this.name,\n      version: this.version,\n      description: this.description,\n      options,\n    });\n\n    // Add utility methods for manual attribute updates\n    eleva.updateElementAttributes = updateAttributes;\n  },\n\n  /**\n   * Uninstalls the plugin from the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   */\n  uninstall(eleva) {\n    // Restore original _patchNode method if it exists\n    if (eleva.renderer && eleva.renderer._originalPatchNode) {\n      eleva.renderer._patchNode = eleva.renderer._originalPatchNode;\n      delete eleva.renderer._originalPatchNode;\n    }\n\n    // Remove plugin metadata\n    if (eleva.plugins) {\n      eleva.plugins.delete(this.name);\n    }\n\n    // Remove utility methods\n    delete eleva.updateElementAttributes;\n  },\n};\n","\"use strict\";\n\n/**\n * @typedef {import('eleva').Eleva} Eleva\n * @typedef {import('eleva').Signal} Signal\n * @typedef {import('eleva').ComponentDefinition} ComponentDefinition\n */\n\n/**\n * Simple error handler for the core router.\n * Can be overridden by error handling plugins.\n * Provides consistent error formatting and logging for router operations.\n * @private\n */\nconst CoreErrorHandler = {\n  /**\n   * Handles router errors with basic formatting.\n   * @param {Error} error - The error to handle.\n   * @param {string} context - The context where the error occurred.\n   * @param {Object} details - Additional error details.\n   * @throws {Error} The formatted error.\n   */\n  handle(error, context, details = {}) {\n    const message = `[ElevaRouter] ${context}: ${error.message}`;\n    const formattedError = new Error(message);\n\n    // Preserve original error details\n    formattedError.originalError = error;\n    formattedError.context = context;\n    formattedError.details = details;\n\n    console.error(message, { error, context, details });\n    throw formattedError;\n  },\n\n  /**\n   * Logs a warning without throwing an error.\n   * @param {string} message - The warning message.\n   * @param {Object} details - Additional warning details.\n   */\n  warn(message, details = {}) {\n    console.warn(`[ElevaRouter] ${message}`, details);\n  },\n\n  /**\n   * Logs an error without throwing.\n   * @param {string} message - The error message.\n   * @param {Error} error - The original error.\n   * @param {Object} details - Additional error details.\n   */\n  log(message, error, details = {}) {\n    console.error(`[ElevaRouter] ${message}`, { error, details });\n  },\n};\n\n/**\n * @typedef {Object} RouteLocation\n * @property {string} path - The path of the route (e.g., '/users/123').\n * @property {Object<string, string>} query - An object representing the query parameters.\n * @property {string} fullUrl - The complete URL including hash, path, and query string.\n * @property {Object<string, string>} params - An object containing dynamic route parameters.\n * @property {Object<string, any>} meta - The meta object associated with the matched route.\n * @property {string} [name] - The optional name of the matched route.\n * @property {RouteDefinition} matched - The raw route definition object that was matched.\n */\n\n/**\n * @typedef {(to: RouteLocation, from: RouteLocation | null) => boolean | string | {path: string} | void | Promise<boolean | string | {path: string} | void>} NavigationGuard\n * A function that acts as a guard for navigation. It runs *before* the navigation is confirmed.\n * It can return:\n * - `true` or `undefined`: to allow navigation.\n * - `false`: to abort the navigation.\n * - a `string` (path) or a `location object`: to redirect to a new route.\n */\n\n/**\n * @typedef {(...args: any[]) => void | Promise<void>} NavigationHook\n * A function that acts as a lifecycle hook, typically for side effects. It does not affect navigation flow.\n */\n\n/**\n * @typedef {Object} RouterPlugin\n * @property {string} name - The plugin name.\n * @property {string} [version] - The plugin version.\n * @property {Function} install - The install function that receives the router instance.\n * @property {Function} [destroy] - Optional cleanup function called when the router is destroyed.\n */\n\n/**\n * @typedef {Object} RouteDefinition\n * @property {string} path - The URL path pattern (e.g., '/', '/about', '/users/:id', '*').\n * @property {string | ComponentDefinition | (() => Promise<{default: ComponentDefinition}>)} component - The component to render. Can be a registered name, a definition object, or an async import function.\n * @property {string | ComponentDefinition | (() => Promise<{default: ComponentDefinition}>)} [layout] - An optional layout component to wrap the route's component.\n * @property {string} [name] - An optional name for the route.\n * @property {Object<string, any>} [meta] - Optional metadata for the route (e.g., for titles, auth flags).\n * @property {NavigationGuard} [beforeEnter] - A route-specific guard executed before entering the route.\n * @property {NavigationHook} [afterEnter] - A hook executed *after* the route has been entered and the new component is mounted.\n * @property {NavigationGuard} [beforeLeave] - A guard executed *before* leaving the current route.\n * @property {NavigationHook} [afterLeave] - A hook executed *after* leaving the current route and its component has been unmounted.\n */\n\n/**\n * @class Router\n * @classdesc A powerful, reactive, and flexible Router Plugin for Eleva.js.\n * This class manages all routing logic, including state, navigation, and rendering.\n * @private\n */\nclass Router {\n  /**\n   * Creates an instance of the Router.\n   * @param {Eleva} eleva - The Eleva framework instance.\n   * @param {RouterOptions} options - The configuration options for the router.\n   */\n  constructor(eleva, options = {}) {\n    /** @type {Eleva} The Eleva framework instance. */\n    this.eleva = eleva;\n\n    /** @type {RouterOptions} The merged router options. */\n    this.options = {\n      mode: \"hash\",\n      queryParam: \"view\",\n      viewSelector: \"root\",\n      ...options,\n    };\n\n    /** @private @type {RouteDefinition[]} The processed list of route definitions. */\n    this.routes = this._processRoutes(options.routes || []);\n\n    /** @private @type {import('eleva').Emitter} The shared Eleva event emitter for global hooks. */\n    this.emitter = this.eleva.emitter;\n\n    /** @private @type {boolean} A flag indicating if the router has been started. */\n    this.isStarted = false;\n\n    /** @private @type {boolean} A flag to prevent navigation loops from history events. */\n    this._isNavigating = false;\n\n    /** @private @type {Array<() => void>} A collection of cleanup functions for event listeners. */\n    this.eventListeners = [];\n\n    /** @type {Signal<RouteLocation | null>} A reactive signal holding the current route's information. */\n    this.currentRoute = new this.eleva.signal(null);\n\n    /** @type {Signal<RouteLocation | null>} A reactive signal holding the previous route's information. */\n    this.previousRoute = new this.eleva.signal(null);\n\n    /** @type {Signal<Object<string, string>>} A reactive signal holding the current route's parameters. */\n    this.currentParams = new this.eleva.signal({});\n\n    /** @type {Signal<Object<string, string>>} A reactive signal holding the current route's query parameters. */\n    this.currentQuery = new this.eleva.signal({});\n\n    /** @type {Signal<import('eleva').MountResult | null>} A reactive signal for the currently mounted layout instance. */\n    this.currentLayout = new this.eleva.signal(null);\n\n    /** @type {Signal<import('eleva').MountResult | null>} A reactive signal for the currently mounted view (page) instance. */\n    this.currentView = new this.eleva.signal(null);\n\n    /** @private @type {Map<string, RouterPlugin>} Map of registered plugins by name. */\n    this.plugins = new Map();\n\n    /** @type {Object} The error handler instance. Can be overridden by plugins. */\n    this.errorHandler = CoreErrorHandler;\n\n    this._validateOptions();\n  }\n\n  /**\n   * Validates the provided router options.\n   * @private\n   * @throws {Error} If the routing mode is invalid.\n   */\n  _validateOptions() {\n    if (![\"hash\", \"query\", \"history\"].includes(this.options.mode)) {\n      this.errorHandler.handle(\n        new Error(\n          `Invalid routing mode: ${this.options.mode}. Must be \"hash\", \"query\", or \"history\".`\n        ),\n        \"Configuration validation failed\"\n      );\n    }\n  }\n\n  /**\n   * Pre-processes route definitions to parse their path segments for efficient matching.\n   * @private\n   * @param {RouteDefinition[]} routes - The raw route definitions.\n   * @returns {RouteDefinition[]} The processed routes.\n   */\n  _processRoutes(routes) {\n    const processedRoutes = [];\n    for (const route of routes) {\n      try {\n        processedRoutes.push({\n          ...route,\n          segments: this._parsePathIntoSegments(route.path),\n        });\n      } catch (error) {\n        this.errorHandler.warn(\n          `Invalid path in route definition \"${route.path || \"undefined\"}\": ${error.message}`,\n          { route, error }\n        );\n      }\n    }\n    return processedRoutes;\n  }\n\n  /**\n   * Parses a route path string into an array of static and parameter segments.\n   * @private\n   * @param {string} path - The path pattern to parse.\n   * @returns {Array<{type: 'static' | 'param', value?: string, name?: string}>} An array of segment objects.\n   * @throws {Error} If the route path is not a valid string.\n   */\n  _parsePathIntoSegments(path) {\n    if (!path || typeof path !== \"string\") {\n      this.errorHandler.handle(\n        new Error(\"Route path must be a non-empty string\"),\n        \"Path parsing failed\",\n        { path }\n      );\n    }\n\n    const normalizedPath = path.replace(/\\/+/g, \"/\").replace(/\\/$/, \"\") || \"/\";\n\n    if (normalizedPath === \"/\") {\n      return [];\n    }\n\n    return normalizedPath\n      .split(\"/\")\n      .filter(Boolean)\n      .map((segment) => {\n        if (segment.startsWith(\":\")) {\n          const paramName = segment.substring(1);\n          if (!paramName) {\n            this.errorHandler.handle(\n              new Error(`Invalid parameter segment: ${segment}`),\n              \"Path parsing failed\",\n              { segment, path }\n            );\n          }\n          return { type: \"param\", name: paramName };\n        }\n        return { type: \"static\", value: segment };\n      });\n  }\n\n  /**\n   * Finds the view element within a container using multiple selector strategies.\n   * @private\n   * @param {HTMLElement} container - The parent element to search within.\n   * @returns {HTMLElement} The found view element or the container itself as a fallback.\n   */\n  _findViewElement(container) {\n    const selector = this.options.viewSelector;\n    return (\n      container.querySelector(`#${selector}`) ||\n      container.querySelector(`.${selector}`) ||\n      container.querySelector(`[data-${selector}]`) ||\n      container.querySelector(selector) ||\n      container\n    );\n  }\n\n  /**\n   * Starts the router, initializes event listeners, and performs the initial navigation.\n   * @returns {Promise<void>}\n   */\n  async start() {\n    if (this.isStarted) {\n      this.errorHandler.warn(\"Router is already started\");\n      return;\n    }\n    if (typeof window === \"undefined\") {\n      this.errorHandler.warn(\n        \"Router start skipped: `window` object not available (SSR environment)\"\n      );\n      return;\n    }\n    if (\n      typeof document !== \"undefined\" &&\n      !document.querySelector(this.options.mount)\n    ) {\n      this.errorHandler.warn(\n        `Mount element \"${this.options.mount}\" was not found in the DOM. The router will not start.`,\n        { mountSelector: this.options.mount }\n      );\n      return;\n    }\n    const handler = () => this._handleRouteChange();\n    if (this.options.mode === \"hash\") {\n      window.addEventListener(\"hashchange\", handler);\n      this.eventListeners.push(() =>\n        window.removeEventListener(\"hashchange\", handler)\n      );\n    } else {\n      window.addEventListener(\"popstate\", handler);\n      this.eventListeners.push(() =>\n        window.removeEventListener(\"popstate\", handler)\n      );\n    }\n    this.isStarted = true;\n    await this._handleRouteChange();\n  }\n\n  /**\n   * Stops the router and cleans up all event listeners and mounted components.\n   * @returns {Promise<void>}\n   */\n  async destroy() {\n    if (!this.isStarted) return;\n\n    // Clean up plugins\n    for (const plugin of this.plugins.values()) {\n      if (typeof plugin.destroy === \"function\") {\n        try {\n          await plugin.destroy(this);\n        } catch (error) {\n          this.errorHandler.log(`Plugin ${plugin.name} destroy failed`, error);\n        }\n      }\n    }\n\n    this.eventListeners.forEach((cleanup) => cleanup());\n    this.eventListeners = [];\n    if (this.currentLayout.value) {\n      await this.currentLayout.value.unmount();\n    }\n    this.isStarted = false;\n  }\n\n  /**\n   * Programmatically navigates to a new route.\n   * @param {string | {path: string, query?: object, params?: object, replace?: boolean, state?: object}} location - The target location as a string or object.\n   * @param {object} [params] - Optional route parameters (for string-based location).\n   * @returns {Promise<void>}\n   */\n  async navigate(location, params = {}) {\n    try {\n      const target =\n        typeof location === \"string\" ? { path: location, params } : location;\n      let path = this._buildPath(target.path, target.params || {});\n      const query = target.query || {};\n\n      if (Object.keys(query).length > 0) {\n        const queryString = new URLSearchParams(query).toString();\n        if (queryString) path += `?${queryString}`;\n      }\n\n      if (this._isSameRoute(path, target.params, query)) {\n        return;\n      }\n\n      const navigationSuccessful = await this._proceedWithNavigation(path);\n\n      if (navigationSuccessful) {\n        this._isNavigating = true;\n        const state = target.state || {};\n        const replace = target.replace || false;\n        const historyMethod = replace ? \"replaceState\" : \"pushState\";\n\n        if (this.options.mode === \"hash\") {\n          if (replace) {\n            const newUrl = `${window.location.pathname}${window.location.search}#${path}`;\n            window.history.replaceState(state, \"\", newUrl);\n          } else {\n            window.location.hash = path;\n          }\n        } else {\n          const url =\n            this.options.mode === \"query\" ? this._buildQueryUrl(path) : path;\n          history[historyMethod](state, \"\", url);\n        }\n        queueMicrotask(() => {\n          this._isNavigating = false;\n        });\n      }\n    } catch (error) {\n      this.errorHandler.log(\"Navigation failed\", error);\n      await this.emitter.emit(\"router:onError\", error);\n    }\n  }\n\n  /**\n   * Builds a URL for query mode.\n   * @private\n   * @param {string} path - The path to set as the query parameter.\n   * @returns {string} The full URL with the updated query string.\n   */\n  _buildQueryUrl(path) {\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.set(this.options.queryParam, path.split(\"?\")[0]);\n    return `${window.location.pathname}?${urlParams.toString()}`;\n  }\n\n  /**\n   * Checks if the target route is identical to the current route.\n   * @private\n   * @param {string} path - The target path with query string.\n   * @param {object} params - The target params.\n   * @param {object} query - The target query.\n   * @returns {boolean} - True if the routes are the same.\n   */\n  _isSameRoute(path, params, query) {\n    const current = this.currentRoute.value;\n    if (!current) return false;\n    const [targetPath, queryString] = path.split(\"?\");\n    const targetQuery = query || this._parseQuery(queryString || \"\");\n    return (\n      current.path === targetPath &&\n      JSON.stringify(current.params) === JSON.stringify(params || {}) &&\n      JSON.stringify(current.query) === JSON.stringify(targetQuery)\n    );\n  }\n\n  /**\n   * Injects dynamic parameters into a path string.\n   * @private\n   */\n  _buildPath(path, params) {\n    let result = path;\n    for (const [key, value] of Object.entries(params)) {\n      // Fix: Handle special characters and ensure proper encoding\n      const encodedValue = encodeURIComponent(String(value));\n      result = result.replace(new RegExp(`:${key}\\\\b`, \"g\"), encodedValue);\n    }\n    return result;\n  }\n\n  /**\n   * The handler for browser-initiated route changes (e.g., back/forward buttons).\n   * @private\n   */\n  async _handleRouteChange() {\n    if (this._isNavigating) return;\n    const from = this.currentRoute.value;\n    const toLocation = this._getCurrentLocation();\n\n    const navigationSuccessful = await this._proceedWithNavigation(\n      toLocation.fullUrl\n    );\n\n    // If navigation was blocked by a guard, revert the URL change\n    if (!navigationSuccessful && from) {\n      this.navigate({ path: from.path, query: from.query, replace: true });\n    }\n  }\n\n  /**\n   * Manages the core navigation lifecycle. Runs guards before committing changes.\n   * @private\n   * @param {string} fullPath - The full path (e.g., '/users/123?foo=bar') to navigate to.\n   * @returns {Promise<boolean>} - `true` if navigation succeeded, `false` if aborted.\n   */\n  async _proceedWithNavigation(fullPath) {\n    const from = this.currentRoute.value;\n    const [path, queryString] = (fullPath || \"/\").split(\"?\");\n    const toLocation = {\n      path: path.startsWith(\"/\") ? path : `/${path}`,\n      query: this._parseQuery(queryString),\n      fullUrl: fullPath,\n    };\n\n    let toMatch = this._matchRoute(toLocation.path);\n\n    if (!toMatch) {\n      const notFoundRoute = this.routes.find((route) => route.path === \"*\");\n      if (notFoundRoute) {\n        toMatch = {\n          route: notFoundRoute,\n          params: { pathMatch: toLocation.path.substring(1) },\n        };\n      } else {\n        await this.emitter.emit(\n          \"router:onError\",\n          new Error(`Route not found: ${toLocation.path}`),\n          toLocation,\n          from\n        );\n        return false;\n      }\n    }\n\n    const to = {\n      ...toLocation,\n      params: toMatch.params,\n      meta: toMatch.route.meta || {},\n      name: toMatch.route.name,\n      matched: toMatch.route,\n    };\n\n    try {\n      // 1. Run all *pre-navigation* guards.\n      const canNavigate = await this._runGuards(to, from, toMatch.route);\n      if (!canNavigate) return false;\n\n      // 2. Resolve async components *before* touching the DOM.\n      const { layoutComponent, pageComponent } = await this._resolveComponents(\n        toMatch.route\n      );\n\n      // 3. Unmount the previous view/layout.\n      if (from) {\n        const toLayout = toMatch.route.layout || this.options.globalLayout;\n        const fromLayout = from.matched.layout || this.options.globalLayout;\n\n        const tryUnmount = async (instance) => {\n          if (!instance) return;\n\n          try {\n            await instance.unmount();\n          } catch (error) {\n            this.errorHandler.warn(\"Error during component unmount\", {\n              error,\n              instance,\n            });\n          }\n        };\n\n        if (toLayout !== fromLayout) {\n          await tryUnmount(this.currentLayout.value);\n          this.currentLayout.value = null;\n        } else {\n          await tryUnmount(this.currentView.value);\n          this.currentView.value = null;\n        }\n\n        // 4. Call `afterLeave` hook *after* the old component has been unmounted.\n        if (from.matched.afterLeave) {\n          await from.matched.afterLeave(to, from);\n          await this.emitter.emit(\"router:afterLeave\", to, from);\n        }\n      }\n\n      // 5. Update reactive state.\n      this.previousRoute.value = from;\n      this.currentRoute.value = to;\n      this.currentParams.value = to.params || {};\n      this.currentQuery.value = to.query || {};\n\n      // 6. Render the new components.\n      await this._render(layoutComponent, pageComponent, to);\n\n      // 7. Run post-navigation hooks.\n      if (toMatch.route.afterEnter) {\n        await toMatch.route.afterEnter(to, from);\n        await this.emitter.emit(\"router:afterEnter\", to, from);\n      }\n      await this.emitter.emit(\"router:afterEach\", to, from);\n\n      return true;\n    } catch (error) {\n      this.errorHandler.log(\"Error during navigation\", error, { to, from });\n      await this.emitter.emit(\"router:onError\", error, to, from);\n      return false;\n    }\n  }\n\n  /**\n   * Executes all applicable navigation guards for a transition in order.\n   * @private\n   * @returns {Promise<boolean>} - `false` if navigation should be aborted.\n   */\n  async _runGuards(to, from, route) {\n    const guards = [\n      ...(this.options.onBeforeEach ? [this.options.onBeforeEach] : []),\n      ...(from && from.matched.beforeLeave ? [from.matched.beforeLeave] : []),\n      ...(route.beforeEnter ? [route.beforeEnter] : []),\n    ];\n    for (const guard of guards) {\n      const result = await guard(to, from);\n      if (result === false) return false;\n      if (typeof result === \"string\" || typeof result === \"object\") {\n        this.navigate(result);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Resolves a string component definition to a component object.\n   * @private\n   * @param {string} def - The component name to resolve.\n   * @returns {ComponentDefinition} The resolved component.\n   * @throws {Error} If the component is not registered.\n   */\n  _resolveStringComponent(def) {\n    const componentDef = this.eleva._components.get(def);\n    if (!componentDef) {\n      this.errorHandler.handle(\n        new Error(`Component \"${def}\" not registered.`),\n        \"Component resolution failed\",\n        {\n          componentName: def,\n          availableComponents: Array.from(this.eleva._components.keys()),\n        }\n      );\n    }\n    return componentDef;\n  }\n\n  /**\n   * Resolves a function component definition to a component object.\n   * @private\n   * @param {Function} def - The function to resolve.\n   * @returns {Promise<ComponentDefinition>} The resolved component.\n   * @throws {Error} If the function fails to load the component.\n   */\n  async _resolveFunctionComponent(def) {\n    try {\n      const funcStr = def.toString();\n      const isAsyncImport =\n        funcStr.includes(\"import(\") || funcStr.startsWith(\"() =>\");\n\n      const result = await def();\n      return isAsyncImport ? result.default || result : result;\n    } catch (error) {\n      this.errorHandler.handle(\n        new Error(`Failed to load async component: ${error.message}`),\n        \"Component resolution failed\",\n        { function: def.toString(), error }\n      );\n    }\n  }\n\n  /**\n   * Validates a component definition object.\n   * @private\n   * @param {any} def - The component definition to validate.\n   * @returns {ComponentDefinition} The validated component.\n   * @throws {Error} If the component definition is invalid.\n   */\n  _validateComponentDefinition(def) {\n    if (!def || typeof def !== \"object\") {\n      this.errorHandler.handle(\n        new Error(`Invalid component definition: ${typeof def}`),\n        \"Component validation failed\",\n        { definition: def }\n      );\n    }\n\n    if (\n      typeof def.template !== \"function\" &&\n      typeof def.template !== \"string\"\n    ) {\n      this.errorHandler.handle(\n        new Error(\"Component missing template property\"),\n        \"Component validation failed\",\n        { definition: def }\n      );\n    }\n\n    return def;\n  }\n\n  /**\n   * Resolves a component definition to a component object.\n   * @private\n   * @param {any} def - The component definition to resolve.\n   * @returns {Promise<ComponentDefinition | null>} The resolved component or null.\n   */\n  async _resolveComponent(def) {\n    if (def === null || def === undefined) {\n      return null;\n    }\n\n    if (typeof def === \"string\") {\n      return this._resolveStringComponent(def);\n    }\n\n    if (typeof def === \"function\") {\n      return await this._resolveFunctionComponent(def);\n    }\n\n    if (def && typeof def === \"object\") {\n      return this._validateComponentDefinition(def);\n    }\n\n    this.errorHandler.handle(\n      new Error(`Invalid component definition: ${typeof def}`),\n      \"Component resolution failed\",\n      { definition: def }\n    );\n  }\n\n  /**\n   * Asynchronously resolves the layout and page components for a route.\n   * @private\n   * @param {RouteDefinition} route - The route to resolve components for.\n   * @returns {Promise<{layoutComponent: ComponentDefinition | null, pageComponent: ComponentDefinition}>}\n   */\n  async _resolveComponents(route) {\n    const effectiveLayout = route.layout || this.options.globalLayout;\n\n    try {\n      const [layoutComponent, pageComponent] = await Promise.all([\n        this._resolveComponent(effectiveLayout),\n        this._resolveComponent(route.component),\n      ]);\n\n      if (!pageComponent) {\n        this.errorHandler.handle(\n          new Error(\n            `Page component is null or undefined for route: ${route.path}`\n          ),\n          \"Component resolution failed\",\n          { route: route.path }\n        );\n      }\n\n      return { layoutComponent, pageComponent };\n    } catch (error) {\n      this.errorHandler.log(\n        `Error resolving components for route ${route.path}`,\n        error,\n        { route: route.path }\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Renders the components for the current route into the DOM.\n   * @private\n   * @param {ComponentDefinition | null} layoutComponent - The pre-loaded layout component.\n   * @param {ComponentDefinition} pageComponent - The pre-loaded page component.\n   */\n  async _render(layoutComponent, pageComponent) {\n    const mountEl = document.querySelector(this.options.mount);\n    if (!mountEl) {\n      this.errorHandler.handle(\n        new Error(`Mount element \"${this.options.mount}\" not found.`),\n        { mountSelector: this.options.mount }\n      );\n    }\n\n    if (layoutComponent) {\n      const layoutInstance = await this.eleva.mount(\n        mountEl,\n        this._wrapComponentWithChildren(layoutComponent)\n      );\n      this.currentLayout.value = layoutInstance;\n      const viewEl = this._findViewElement(layoutInstance.container);\n      const viewInstance = await this.eleva.mount(\n        viewEl,\n        this._wrapComponentWithChildren(pageComponent)\n      );\n      this.currentView.value = viewInstance;\n    } else {\n      const viewInstance = await this.eleva.mount(\n        mountEl,\n        this._wrapComponentWithChildren(pageComponent)\n      );\n      this.currentView.value = viewInstance;\n      this.currentLayout.value = null;\n    }\n  }\n\n  /**\n   * Creates a getter function for router context properties.\n   * @private\n   * @param {string} property - The property name to access.\n   * @param {any} defaultValue - The default value if property is undefined.\n   * @returns {Function} A getter function.\n   */\n  _createRouteGetter(property, defaultValue) {\n    return () => this.currentRoute.value?.[property] ?? defaultValue;\n  }\n\n  /**\n   * Wraps a component definition to inject router-specific context into its setup function.\n   * @private\n   * @param {ComponentDefinition} component - The component to wrap.\n   * @returns {ComponentDefinition} The wrapped component definition.\n   */\n  _wrapComponent(component) {\n    const originalSetup = component.setup;\n    const self = this;\n\n    return {\n      ...component,\n      async setup(ctx) {\n        ctx.router = {\n          navigate: self.navigate.bind(self),\n          current: self.currentRoute,\n          previous: self.previousRoute,\n\n          // Route property getters\n          get params() {\n            return self._createRouteGetter(\"params\", {})();\n          },\n          get query() {\n            return self._createRouteGetter(\"query\", {})();\n          },\n          get path() {\n            return self._createRouteGetter(\"path\", \"/\")();\n          },\n          get fullUrl() {\n            return self._createRouteGetter(\"fullUrl\", window.location.href)();\n          },\n          get meta() {\n            return self._createRouteGetter(\"meta\", {})();\n          },\n        };\n\n        return originalSetup ? await originalSetup(ctx) : {};\n      },\n    };\n  }\n\n  /**\n   * Recursively wraps all child components to ensure they have access to router context.\n   * @private\n   * @param {ComponentDefinition} component - The component to wrap.\n   * @returns {ComponentDefinition} The wrapped component definition.\n   */\n  _wrapComponentWithChildren(component) {\n    const wrappedComponent = this._wrapComponent(component);\n\n    // If the component has children, wrap them too\n    if (\n      wrappedComponent.children &&\n      typeof wrappedComponent.children === \"object\"\n    ) {\n      const wrappedChildren = {};\n      for (const [selector, childComponent] of Object.entries(\n        wrappedComponent.children\n      )) {\n        wrappedChildren[selector] =\n          this._wrapComponentWithChildren(childComponent);\n      }\n      wrappedComponent.children = wrappedChildren;\n    }\n\n    return wrappedComponent;\n  }\n\n  /**\n   * Gets the current location information from the browser's window object.\n   * @private\n   * @returns {Omit<RouteLocation, 'params' | 'meta' | 'name' | 'matched'>}\n   */\n  _getCurrentLocation() {\n    if (typeof window === \"undefined\")\n      return { path: \"/\", query: {}, fullUrl: \"\" };\n    let path, queryString, fullUrl;\n    switch (this.options.mode) {\n      case \"hash\":\n        fullUrl = window.location.hash.slice(1) || \"/\";\n        [path, queryString] = fullUrl.split(\"?\");\n        break;\n      case \"query\":\n        const urlParams = new URLSearchParams(window.location.search);\n        path = urlParams.get(this.options.queryParam) || \"/\";\n        queryString = window.location.search.slice(1);\n        fullUrl = path;\n        break;\n      default: // 'history' mode\n        path = window.location.pathname || \"/\";\n        queryString = window.location.search.slice(1);\n        fullUrl = `${path}${queryString ? \"?\" + queryString : \"\"}`;\n    }\n    return {\n      path: path.startsWith(\"/\") ? path : `/${path}`,\n      query: this._parseQuery(queryString),\n      fullUrl,\n    };\n  }\n\n  /**\n   * Parses a query string into a key-value object.\n   * @private\n   */\n  _parseQuery(queryString) {\n    const query = {};\n    if (queryString) {\n      new URLSearchParams(queryString).forEach((value, key) => {\n        query[key] = value;\n      });\n    }\n    return query;\n  }\n\n  /**\n   * Matches a given path against the registered routes.\n   * @private\n   * @param {string} path - The path to match.\n   * @returns {{route: RouteDefinition, params: Object<string, string>} | null} The matched route and its params, or null.\n   */\n  _matchRoute(path) {\n    const pathSegments = path.split(\"/\").filter(Boolean);\n\n    for (const route of this.routes) {\n      // Handle the root path as a special case.\n      if (route.path === \"/\") {\n        if (pathSegments.length === 0) return { route, params: {} };\n        continue;\n      }\n\n      if (route.segments.length !== pathSegments.length) continue;\n\n      const params = {};\n      let isMatch = true;\n      for (let i = 0; i < route.segments.length; i++) {\n        const routeSegment = route.segments[i];\n        const pathSegment = pathSegments[i];\n        if (routeSegment.type === \"param\") {\n          params[routeSegment.name] = decodeURIComponent(pathSegment);\n        } else if (routeSegment.value !== pathSegment) {\n          isMatch = false;\n          break;\n        }\n      }\n      if (isMatch) return { route, params };\n    }\n    return null;\n  }\n\n  /** Registers a global pre-navigation guard. */\n  onBeforeEach(guard) {\n    this.options.onBeforeEach = guard;\n  }\n  /** Registers a global hook that runs after a new route component has been mounted *if* the route has an `afterEnter` hook. */\n  onAfterEnter(hook) {\n    this.emitter.on(\"router:afterEnter\", hook);\n  }\n  /** Registers a global hook that runs after a route component has been unmounted *if* the route has an `afterLeave` hook. */\n  onAfterLeave(hook) {\n    this.emitter.on(\"router:afterLeave\", hook);\n  }\n  /** Registers a global hook that runs after a navigation has been confirmed and all hooks have completed. */\n  onAfterEach(hook) {\n    this.emitter.on(\"router:afterEach\", hook);\n  }\n  /** Registers a global error handler for navigation. */\n  onError(handler) {\n    this.emitter.on(\"router:onError\", handler);\n  }\n\n  /**\n   * Registers a plugin with the router.\n   * @param {RouterPlugin} plugin - The plugin to register.\n   */\n  use(plugin, options = {}) {\n    if (typeof plugin.install !== \"function\") {\n      this.errorHandler.handle(\n        new Error(\"Plugin must have an install method\"),\n        \"Plugin registration failed\",\n        { plugin }\n      );\n    }\n\n    // Check if plugin is already registered\n    if (this.plugins.has(plugin.name)) {\n      this.errorHandler.warn(`Plugin \"${plugin.name}\" is already registered`, {\n        existingPlugin: this.plugins.get(plugin.name),\n      });\n      return;\n    }\n\n    this.plugins.set(plugin.name, plugin);\n    plugin.install(this, options);\n  }\n\n  /**\n   * Gets all registered plugins.\n   * @returns {RouterPlugin[]} Array of registered plugins.\n   */\n  getPlugins() {\n    return Array.from(this.plugins.values());\n  }\n\n  /**\n   * Gets a plugin by name.\n   * @param {string} name - The plugin name.\n   * @returns {RouterPlugin | undefined} The plugin or undefined.\n   */\n  getPlugin(name) {\n    return this.plugins.get(name);\n  }\n\n  /**\n   * Removes a plugin from the router.\n   * @param {string} name - The plugin name.\n   * @returns {boolean} True if the plugin was removed.\n   */\n  removePlugin(name) {\n    const plugin = this.plugins.get(name);\n    if (!plugin) return false;\n\n    // Call destroy if available\n    if (typeof plugin.destroy === \"function\") {\n      try {\n        plugin.destroy(this);\n      } catch (error) {\n        this.errorHandler.log(`Plugin ${name} destroy failed`, error);\n      }\n    }\n\n    return this.plugins.delete(name);\n  }\n\n  /**\n   * Sets a custom error handler. Used by error handling plugins.\n   * @param {Object} errorHandler - The error handler object with handle, warn, and log methods.\n   */\n  setErrorHandler(errorHandler) {\n    if (\n      errorHandler &&\n      typeof errorHandler.handle === \"function\" &&\n      typeof errorHandler.warn === \"function\" &&\n      typeof errorHandler.log === \"function\"\n    ) {\n      this.errorHandler = errorHandler;\n    } else {\n      console.warn(\n        \"[ElevaRouter] Invalid error handler provided. Must have handle, warn, and log methods.\"\n      );\n    }\n  }\n}\n\n/**\n * @typedef {Object} RouterOptions\n * @property {string} mount - A CSS selector for the main element where the app is mounted.\n * @property {RouteDefinition[]} routes - An array of route definitions.\n * @property {'hash' | 'query' | 'history'} [mode='hash'] - The routing mode.\n * @property {string} [queryParam='page'] - The query parameter to use in 'query' mode.\n * @property {string} [viewSelector='view'] - The selector for the view element within a layout.\n * @property {boolean} [autoStart=true] - Whether to start the router automatically.\n * @property {NavigationGuard} [onBeforeEach] - A global guard executed before every navigation.\n * @property {string | ComponentDefinition | (() => Promise<{default: ComponentDefinition}>)} [globalLayout] - A global layout for all routes. Can be overridden by a route's specific layout.\n */\n\n/**\n * @class ðŸš€ RouterPlugin\n * @classdesc A powerful, reactive, and flexible Router Plugin for Eleva.js applications.\n * This plugin provides comprehensive client-side routing functionality including:\n * - Multiple routing modes (hash, history, query)\n * - Navigation guards and lifecycle hooks\n * - Reactive state management\n * - Component resolution and lazy loading\n * - Layout and page component separation\n * - Plugin system for extensibility\n * - Advanced error handling\n *\n * @example\n * // Install the plugin\n * const app = new Eleva(\"myApp\");\n *\n * const HomePage = { template: () => `<h1>Home</h1>` };\n * const AboutPage = { template: () => `<h1>About Us</h1>` };\n * const UserPage = {\n *   template: (ctx) => `<h1>User: ${ctx.router.params.id}</h1>`\n * };\n *\n * app.use(RouterPlugin, {\n *   mount: '#app',\n *   mode: 'hash',\n *   routes: [\n *     { path: '/', component: HomePage },\n *     { path: '/about', component: AboutPage },\n *     { path: '/users/:id', component: UserPage }\n *   ]\n * });\n */\nexport const RouterPlugin = {\n  /**\n   * Unique identifier for the plugin\n   * @type {string}\n   */\n  name: \"router\",\n\n  /**\n   * Plugin version\n   * @type {string}\n   */\n  version: \"1.0.0-rc.1\",\n\n  /**\n   * Plugin description\n   * @type {string}\n   */\n  description: \"Client-side routing for Eleva applications\",\n\n  /**\n   * Installs the RouterPlugin into an Eleva instance.\n   *\n   * @param {Eleva} eleva - The Eleva instance\n   * @param {RouterOptions} options - Router configuration options\n   * @param {string} options.mount - A CSS selector for the main element where the app is mounted\n   * @param {RouteDefinition[]} options.routes - An array of route definitions\n   * @param {'hash' | 'query' | 'history'} [options.mode='hash'] - The routing mode\n   * @param {string} [options.queryParam='page'] - The query parameter to use in 'query' mode\n   * @param {string} [options.viewSelector='view'] - The selector for the view element within a layout\n   * @param {boolean} [options.autoStart=true] - Whether to start the router automatically\n   * @param {NavigationGuard} [options.onBeforeEach] - A global guard executed before every navigation\n   * @param {string | ComponentDefinition | (() => Promise<{default: ComponentDefinition}>)} [options.globalLayout] - A global layout for all routes\n   *\n   * @example\n   * // main.js\n   * import Eleva from './eleva.js';\n   * import { RouterPlugin } from './plugins/RouterPlugin.js';\n   *\n   * const app = new Eleva('myApp');\n   *\n   * const HomePage = { template: () => `<h1>Home</h1>` };\n   * const AboutPage = { template: () => `<h1>About Us</h1>` };\n   *\n   * app.use(RouterPlugin, {\n   *  mount: '#app',\n   *  routes: [\n   *    { path: '/', component: HomePage },\n   *    { path: '/about', component: AboutPage }\n   *  ]\n   * });\n   */\n  install(eleva, options = {}) {\n    if (!options.mount) {\n      throw new Error(\"[RouterPlugin] 'mount' option is required\");\n    }\n\n    if (!options.routes || !Array.isArray(options.routes)) {\n      throw new Error(\"[RouterPlugin] 'routes' option must be an array\");\n    }\n\n    /**\n     * Registers a component definition with the Eleva instance.\n     * This method handles both inline component objects and pre-registered component names.\n     *\n     * @param {any} def - The component definition to register\n     * @param {string} type - The type of component for naming (e.g., \"Route\", \"Layout\")\n     * @returns {string | null} The registered component name or null if no definition provided\n     */\n    const register = (def, type) => {\n      if (!def) return null;\n\n      if (typeof def === \"object\" && def !== null && !def.name) {\n        const name = `Eleva${type}Component_${Math.random()\n          .toString(36)\n          .slice(2, 11)}`;\n\n        try {\n          eleva.component(name, def);\n          return name;\n        } catch (error) {\n          throw new Error(\n            `[RouterPlugin] Failed to register ${type} component: ${error.message}`\n          );\n        }\n      }\n      return def;\n    };\n\n    if (options.globalLayout) {\n      options.globalLayout = register(options.globalLayout, \"GlobalLayout\");\n    }\n\n    (options.routes || []).forEach((route) => {\n      route.component = register(route.component, \"Route\");\n      if (route.layout) {\n        route.layout = register(route.layout, \"RouteLayout\");\n      }\n    });\n\n    const router = new Router(eleva, options);\n    eleva.router = router;\n\n    if (options.autoStart !== false) {\n      queueMicrotask(() => router.start());\n    }\n\n    // Add plugin metadata to the Eleva instance\n    if (!eleva.plugins) {\n      eleva.plugins = new Map();\n    }\n    eleva.plugins.set(this.name, {\n      name: this.name,\n      version: this.version,\n      description: this.description,\n      options,\n    });\n\n    // Add utility methods for manual router access\n    eleva.navigate = router.navigate.bind(router);\n    eleva.getCurrentRoute = () => router.currentRoute.value;\n    eleva.getRouteParams = () => router.currentParams.value;\n    eleva.getRouteQuery = () => router.currentQuery.value;\n\n    return router;\n  },\n\n  /**\n   * Uninstalls the plugin from the Eleva instance\n   *\n   * @param {Eleva} eleva - The Eleva instance\n   */\n  async uninstall(eleva) {\n    if (eleva.router) {\n      await eleva.router.destroy();\n      delete eleva.router;\n    }\n\n    // Remove plugin metadata\n    if (eleva.plugins) {\n      eleva.plugins.delete(this.name);\n    }\n\n    // Remove utility methods\n    delete eleva.navigate;\n    delete eleva.getCurrentRoute;\n    delete eleva.getRouteParams;\n    delete eleva.getRouteQuery;\n  },\n};\n","\"use strict\";\n\n/**\n * @class ðŸ”’ TemplateEngine\n * @classdesc A secure template engine that handles interpolation and dynamic attribute parsing.\n * Provides a safe way to evaluate expressions in templates while preventing XSS attacks.\n * All methods are static and can be called directly on the class.\n *\n * @example\n * const template = \"Hello, {{name}}!\";\n * const data = { name: \"World\" };\n * const result = TemplateEngine.parse(template, data); // Returns: \"Hello, World!\"\n */\nexport class TemplateEngine {\n  /**\n   * @private {RegExp} Regular expression for matching template expressions in the format {{ expression }}\n   * @type {RegExp}\n   */\n  static expressionPattern = /\\{\\{\\s*(.*?)\\s*\\}\\}/g;\n\n  /**\n   * Parses a template string, replacing expressions with their evaluated values.\n   * Expressions are evaluated in the provided data context.\n   *\n   * @public\n   * @static\n   * @param {string} template - The template string to parse.\n   * @param {Record<string, unknown>} data - The data context for evaluating expressions.\n   * @returns {string} The parsed template with expressions replaced by their values.\n   * @example\n   * const result = TemplateEngine.parse(\"{{user.name}} is {{user.age}} years old\", {\n   *   user: { name: \"John\", age: 30 }\n   * }); // Returns: \"John is 30 years old\"\n   */\n  static parse(template, data) {\n    if (typeof template !== \"string\") return template;\n    return template.replace(this.expressionPattern, (_, expression) =>\n      this.evaluate(expression, data)\n    );\n  }\n\n  /**\n   * Evaluates an expression in the context of the provided data object.\n   * Note: This does not provide a true sandbox and evaluated expressions may access global scope.\n   * The use of the `with` statement is necessary for expression evaluation but has security implications.\n   * Expressions should be carefully validated before evaluation.\n   *\n   * @public\n   * @static\n   * @param {string} expression - The expression to evaluate.\n   * @param {Record<string, unknown>} data - The data context for evaluation.\n   * @returns {unknown} The result of the evaluation, or an empty string if evaluation fails.\n   * @example\n   * const result = TemplateEngine.evaluate(\"user.name\", { user: { name: \"John\" } }); // Returns: \"John\"\n   * const age = TemplateEngine.evaluate(\"user.age\", { user: { age: 30 } }); // Returns: 30\n   */\n  static evaluate(expression, data) {\n    if (typeof expression !== \"string\") return expression;\n    try {\n      return new Function(\"data\", `with(data) { return ${expression}; }`)(data);\n    } catch {\n      return \"\";\n    }\n  }\n}\n","\"use strict\";\n\nimport { TemplateEngine } from \"../modules/TemplateEngine.js\";\n\n/**\n * @class ðŸŽ¯ PropsPlugin\n * @classdesc A plugin that extends Eleva's props data handling to support any type of data structure\n * with automatic type detection, parsing, and reactive prop updates. This plugin enables seamless\n * passing of complex data types from parent to child components without manual parsing.\n * \n * Core Features:\n * - Automatic type detection and parsing (strings, numbers, booleans, objects, arrays, dates, etc.)\n * - Support for complex data structures including nested objects and arrays\n * - Reactive props that automatically update when parent data changes\n * - Comprehensive error handling with custom error callbacks\n * - Simple configuration with minimal setup required\n *\n * @example\n * // Install the plugin\n * const app = new Eleva(\"myApp\");\n * app.use(PropsPlugin, {\n *   enableAutoParsing: true,\n *   enableReactivity: true,\n *   onError: (error, value) => {\n *     console.error('Props parsing error:', error, value);\n *   }\n * });\n *\n * // Use complex props in components\n * app.component(\"UserCard\", {\n *   template: (ctx) => `\n *     <div class=\"user-info-container\"\n *          :user='${JSON.stringify(ctx.user.value)}'\n *          :permissions='${JSON.stringify(ctx.permissions.value)}'\n *          :settings='${JSON.stringify(ctx.settings.value)}'>\n *     </div>\n *   `,\n *   children: {\n *     '.user-info-container': 'UserInfo'\n *   }\n * });\n * \n * app.component(\"UserInfo\", {\n *   setup({ props }) {\n *     return {\n *       user: props.user,        // Automatically parsed object\n *       permissions: props.permissions,  // Automatically parsed array\n *       settings: props.settings  // Automatically parsed object\n *     };\n *   }\n * });\n */\nexport const PropsPlugin = {\n  /**\n   * Unique identifier for the plugin\n   * @type {string}\n   */\n  name: \"props\",\n\n  /**\n   * Plugin version\n   * @type {string}\n   */\n  version: \"1.0.0-rc.2\",\n\n  /**\n   * Plugin description\n   * @type {string}\n   */\n  description: \"Advanced props data handling for complex data structures with automatic type detection and reactivity\",\n\n  /**\n   * Installs the plugin into the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   * @param {Object} options - Plugin configuration options\n   * @param {boolean} [options.enableAutoParsing=true] - Enable automatic type detection and parsing\n   * @param {boolean} [options.enableReactivity=true] - Enable reactive prop updates using Eleva's signal system\n   * @param {Function} [options.onError=null] - Error handler function called when parsing fails\n   * \n   * @example\n   * // Basic installation\n   * app.use(PropsPlugin);\n   * \n   * // Installation with custom options\n   * app.use(PropsPlugin, {\n   *   enableAutoParsing: true,\n   *   enableReactivity: false,\n   *   onError: (error, value) => {\n   *     console.error('Props parsing error:', error, value);\n   *   }\n   * });\n   */\n  install(eleva, options = {}) {\n    const {\n      enableAutoParsing = true,\n      enableReactivity = true,\n      onError = null\n    } = options;\n\n    /**\n     * Detects the type of a given value\n     * @private\n     * @param {any} value - The value to detect type for\n     * @returns {string} The detected type ('string', 'number', 'boolean', 'object', 'array', 'date', 'map', 'set', 'function', 'null', 'undefined', 'unknown')\n     * \n     * @example\n     * detectType(\"hello\")     // â†’ \"string\"\n     * detectType(42)          // â†’ \"number\"\n     * detectType(true)        // â†’ \"boolean\"\n     * detectType([1, 2, 3])   // â†’ \"array\"\n     * detectType({})          // â†’ \"object\"\n     * detectType(new Date())  // â†’ \"date\"\n     * detectType(null)        // â†’ \"null\"\n     */\n    const detectType = (value) => {\n      if (value === null) return 'null';\n      if (value === undefined) return 'undefined';\n      if (typeof value === 'boolean') return 'boolean';\n      if (typeof value === 'number') return 'number';\n      if (typeof value === 'string') return 'string';\n      if (typeof value === 'function') return 'function';\n      if (value instanceof Date) return 'date';\n      if (value instanceof Map) return 'map';\n      if (value instanceof Set) return 'set';\n      if (Array.isArray(value)) return 'array';\n      if (typeof value === 'object') return 'object';\n      return 'unknown';\n    };\n\n    /**\n     * Parses a prop value with automatic type detection\n     * @private\n     * @param {any} value - The value to parse\n     * @returns {any} The parsed value with appropriate type\n     * \n     * @description\n     * This function automatically detects and parses different data types from string values:\n     * - Special strings: \"true\" â†’ true, \"false\" â†’ false, \"null\" â†’ null, \"undefined\" â†’ undefined\n     * - JSON objects/arrays: '{\"key\": \"value\"}' â†’ {key: \"value\"}, '[1, 2, 3]' â†’ [1, 2, 3]\n     * - Boolean-like strings: \"1\" â†’ true, \"0\" â†’ false, \"\" â†’ true\n     * - Numeric strings: \"42\" â†’ 42, \"3.14\" â†’ 3.14\n     * - Date strings: \"2023-01-01T00:00:00.000Z\" â†’ Date object\n     * - Other strings: returned as-is\n     * \n     * @example\n     * parsePropValue(\"true\")           // â†’ true\n     * parsePropValue(\"42\")             // â†’ 42\n     * parsePropValue('{\"key\": \"val\"}') // â†’ {key: \"val\"}\n     * parsePropValue('[1, 2, 3]')      // â†’ [1, 2, 3]\n     * parsePropValue(\"hello\")          // â†’ \"hello\"\n     */\n    const parsePropValue = (value) => {\n      try {\n        // Handle non-string values - return as-is\n        if (typeof value !== 'string') {\n          return value;\n        }\n\n        // Handle special string patterns first\n        if (value === 'true') return true;\n        if (value === 'false') return false;\n        if (value === 'null') return null;\n        if (value === 'undefined') return undefined;\n\n        // Try to parse as JSON (for objects and arrays)\n        // This handles complex data structures like objects and arrays\n        if (value.startsWith('{') || value.startsWith('[')) {\n          try {\n            return JSON.parse(value);\n          } catch (e) {\n            // Not valid JSON, throw error to trigger error handler\n            throw new Error(`Invalid JSON: ${value}`);\n          }\n        }\n\n        // Handle boolean-like strings (including \"1\" and \"0\")\n        // These are common in HTML attributes and should be treated as booleans\n        if (value === '1') return true;\n        if (value === '0') return false;\n        if (value === '') return true; // Empty string is truthy in HTML attributes\n\n        // Handle numeric strings (after boolean check to avoid conflicts)\n        // This ensures \"0\" is treated as boolean false, not number 0\n        if (!isNaN(value) && value !== '' && !isNaN(parseFloat(value))) {\n          return Number(value);\n        }\n\n        // Handle date strings (ISO format)\n        // Recognizes standard ISO date format and converts to Date object\n        if (value.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/)) {\n          const date = new Date(value);\n          if (!isNaN(date.getTime())) {\n            return date;\n          }\n        }\n\n        // Return as string if no other parsing applies\n        // This is the fallback for regular text strings\n        return value;\n\n      } catch (error) {\n        // Call error handler if provided\n        if (onError) {\n          onError(error, value);\n        }\n        // Fallback to original value to prevent breaking the application\n        return value;\n      }\n    };\n\n    /**\n     * Enhanced props extraction with automatic type detection\n     * @private\n     * @param {HTMLElement} element - The DOM element to extract props from\n     * @returns {Object} Object containing parsed props with appropriate types\n     * \n     * @description\n     * Extracts props from DOM element attributes that start with \":\" and automatically\n     * parses them to their appropriate types. Removes the attributes from the element\n     * after extraction.\n     * \n     * @example\n     * // HTML: <div :name=\"John\" :age=\"30\" :active=\"true\" :data='{\"key\": \"value\"}'></div>\n     * const props = extractProps(element);\n     * // Result: { name: \"John\", age: 30, active: true, data: {key: \"value\"} }\n     */\n    const extractProps = (element) => {\n      const props = {};\n      const attrs = element.attributes;\n\n      // Iterate through attributes in reverse order to handle removal correctly\n      for (let i = attrs.length - 1; i >= 0; i--) {\n        const attr = attrs[i];\n        // Only process attributes that start with \":\" (prop attributes)\n        if (attr.name.startsWith(\":\")) {\n          const propName = attr.name.slice(1); // Remove the \":\" prefix\n          // Parse the value if auto-parsing is enabled, otherwise use as-is\n          const parsedValue = enableAutoParsing ? parsePropValue(attr.value) : attr.value;\n          props[propName] = parsedValue;\n          // Remove the attribute from the DOM element after extraction\n          element.removeAttribute(attr.name);\n        }\n      }\n\n      return props;\n    };\n\n    /**\n     * Creates reactive props using Eleva's signal system\n     * @private\n     * @param {Object} props - The props object to make reactive\n     * @returns {Object} Object containing reactive props (Eleva signals)\n     * \n     * @description\n     * Converts regular prop values into Eleva signals for reactive updates.\n     * If a value is already a signal, it's passed through unchanged.\n     * \n     * @example\n     * const props = { name: \"John\", age: 30, active: true };\n     * const reactiveProps = createReactiveProps(props);\n     * // Result: { \n     * //   name: Signal(\"John\"), \n     * //   age: Signal(30), \n     * //   active: Signal(true) \n     * // }\n     */\n    const createReactiveProps = (props) => {\n      const reactiveProps = {};\n\n      // Convert each prop value to a reactive signal\n      Object.entries(props).forEach(([key, value]) => {\n        // Check if value is already a signal (has 'value' and 'watch' properties)\n        if (value && typeof value === 'object' && 'value' in value && 'watch' in value) {\n          // Value is already a signal, use it as-is\n          reactiveProps[key] = value;\n        } else {\n          // Create new signal for the prop value to make it reactive\n          reactiveProps[key] = new eleva.signal(value);\n        }\n      });\n\n      return reactiveProps;\n    };\n\n    // Override Eleva's internal _extractProps method with our enhanced version\n    eleva._extractProps = extractProps;\n\n    // Override Eleva's mount method to apply enhanced prop handling\n    const originalMount = eleva.mount;\n    eleva.mount = async (container, compName, props = {}) => {\n      // Create reactive props if reactivity is enabled\n      const enhancedProps = enableReactivity ? createReactiveProps(props) : props;\n\n      // Call the original mount method with enhanced props\n      return await originalMount.call(eleva, container, compName, enhancedProps);\n    };\n\n    // Override Eleva's _mountComponents method to enable signal reference passing\n    const originalMountComponents = eleva._mountComponents;\n\n    // Cache to store parent contexts by container element\n    const parentContextCache = new WeakMap();\n    // Store child instances that need signal linking\n    const pendingSignalLinks = new Set();\n\n    eleva._mountComponents = async (container, children, childInstances) => {\n      for (const [selector, component] of Object.entries(children)) {\n        if (!selector) continue;\n        for (const el of container.querySelectorAll(selector)) {\n          if (!(el instanceof HTMLElement)) continue;\n\n          // Extract props from DOM attributes\n          const extractedProps = eleva._extractProps(el);\n\n          // Get parent context to check for signal references\n          let enhancedProps = extractedProps;\n\n\n          // Try to find parent context by looking up the DOM tree\n          let parentContext = parentContextCache.get(container);\n          if (!parentContext) {\n            let currentElement = container;\n            while (currentElement && !parentContext) {\n              if (currentElement._eleva_instance && currentElement._eleva_instance.data) {\n                parentContext = currentElement._eleva_instance.data;\n                // Cache the parent context for future use\n                parentContextCache.set(container, parentContext);\n                break;\n              }\n              currentElement = currentElement.parentElement;\n            }\n          }\n\n          if (enableReactivity && parentContext) {\n            const signalProps = {};\n\n\n            // Check each extracted prop to see if there's a matching signal in parent context\n            Object.keys(extractedProps).forEach(propName => {\n              if (parentContext[propName] &&\n                parentContext[propName] instanceof eleva.signal) {\n                // Found a signal in parent context with the same name as the prop\n                // Pass the signal reference instead of creating a new one\n                signalProps[propName] = parentContext[propName];\n              }\n            });\n\n            // Merge signal props with regular props (signal props take precedence)\n            enhancedProps = {\n              ...extractedProps,\n              ...signalProps\n            };\n          }\n\n          // Create reactive props for non-signal props only\n          let finalProps = enhancedProps;\n          if (enableReactivity) {\n            // Only create reactive props for values that aren't already signals\n            const nonSignalProps = {};\n            Object.entries(enhancedProps).forEach(([key, value]) => {\n              if (!(value && typeof value === 'object' && 'value' in value && 'watch' in value)) {\n                // This is not a signal, create a reactive prop for it\n                nonSignalProps[key] = value;\n              }\n            });\n\n            // Create reactive props only for non-signal values\n            const reactiveNonSignalProps = createReactiveProps(nonSignalProps);\n\n            // Merge signal props with reactive non-signal props\n            finalProps = {\n              ...reactiveNonSignalProps,\n              ...enhancedProps // Signal props take precedence\n            };\n          }\n\n          /** @type {MountResult} */\n          const instance = await eleva.mount(el, component, finalProps);\n          if (instance && !childInstances.includes(instance)) {\n            childInstances.push(instance);\n\n            // If we have extracted props but no parent context yet, mark for later signal linking\n            if (enableReactivity && Object.keys(extractedProps).length > 0 && !parentContext) {\n              pendingSignalLinks.add({\n                instance,\n                extractedProps,\n                container,\n                component\n              });\n            }\n          }\n        }\n      }\n\n      // After mounting all children, try to link signals for pending instances\n      if (enableReactivity && pendingSignalLinks.size > 0) {\n        for (const pending of pendingSignalLinks) {\n          const { instance, extractedProps, container, component } = pending;\n\n          // Try to find parent context again\n          let parentContext = parentContextCache.get(container);\n          if (!parentContext) {\n            let currentElement = container;\n            while (currentElement && !parentContext) {\n              if (currentElement._eleva_instance && currentElement._eleva_instance.data) {\n                parentContext = currentElement._eleva_instance.data;\n                parentContextCache.set(container, parentContext);\n                break;\n              }\n              currentElement = currentElement.parentElement;\n            }\n          }\n\n          if (parentContext) {\n            const signalProps = {};\n\n            // Check each extracted prop to see if there's a matching signal in parent context\n            Object.keys(extractedProps).forEach(propName => {\n              if (parentContext[propName] && parentContext[propName] instanceof eleva.signal) {\n                signalProps[propName] = parentContext[propName];\n              }\n            });\n\n            // Update the child instance's data with signal references\n            if (Object.keys(signalProps).length > 0) {\n              Object.assign(instance.data, signalProps);\n\n              // Set up signal watchers for the newly linked signals\n              Object.keys(signalProps).forEach(propName => {\n                const signal = signalProps[propName];\n                if (signal && typeof signal.watch === 'function') {\n                  signal.watch((newValue) => {\n                    // Trigger a re-render of the child component when the signal changes\n                    const childComponent = eleva._components.get(component) || component;\n                    if (childComponent && childComponent.template) {\n                      const templateResult = typeof childComponent.template === 'function'\n                        ? childComponent.template(instance.data)\n                        : childComponent.template;\n                      const newHtml = TemplateEngine.parse(templateResult, instance.data);\n                      eleva.renderer.patchDOM(instance.container, newHtml);\n                    }\n                  });\n                }\n              });\n\n              // Initial re-render to show the correct signal values\n              const childComponent = eleva._components.get(component) || component;\n              if (childComponent && childComponent.template) {\n                const templateResult = typeof childComponent.template === 'function'\n                  ? childComponent.template(instance.data)\n                  : childComponent.template;\n                const newHtml = TemplateEngine.parse(templateResult, instance.data);\n                eleva.renderer.patchDOM(instance.container, newHtml);\n              }\n            }\n\n            // Remove from pending list\n            pendingSignalLinks.delete(pending);\n          }\n        }\n      }\n    };\n\n    /**\n     * Expose utility methods on the Eleva instance\n     * @namespace eleva.props\n     */\n    eleva.props = {\n      /**\n       * Parse a single value with automatic type detection\n       * @param {any} value - The value to parse\n       * @returns {any} The parsed value with appropriate type\n       * \n       * @example\n       * app.props.parse(\"42\")             // â†’ 42\n       * app.props.parse(\"true\")           // â†’ true\n       * app.props.parse('{\"key\": \"val\"}') // â†’ {key: \"val\"}\n       */\n      parse: (value) => {\n        // Return value as-is if auto parsing is disabled\n        if (!enableAutoParsing) {\n          return value;\n        }\n        // Use our enhanced parsing function\n        return parsePropValue(value);\n      },\n\n      /**\n       * Detect the type of a value\n       * @param {any} value - The value to detect type for\n       * @returns {string} The detected type\n       * \n       * @example\n       * app.props.detectType(\"hello\")     // â†’ \"string\"\n       * app.props.detectType(42)          // â†’ \"number\"\n       * app.props.detectType([1, 2, 3])   // â†’ \"array\"\n       */\n      detectType\n    };\n\n    // Store original methods for uninstall\n    eleva._originalExtractProps = eleva._extractProps;\n    eleva._originalMount = originalMount;\n    eleva._originalMountComponents = originalMountComponents;\n  },\n\n  /**\n   * Uninstalls the plugin from the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   * \n   * @description\n   * Restores the original Eleva methods and removes all plugin-specific\n   * functionality. This method should be called when the plugin is no\n   * longer needed.\n   * \n   * @example\n   * // Uninstall the plugin\n   * PropsPlugin.uninstall(app);\n   */\n  uninstall(eleva) {\n    // Restore original _extractProps method\n    if (eleva._originalExtractProps) {\n      eleva._extractProps = eleva._originalExtractProps;\n      delete eleva._originalExtractProps;\n    }\n\n    // Restore original mount method\n    if (eleva._originalMount) {\n      eleva.mount = eleva._originalMount;\n      delete eleva._originalMount;\n    }\n\n    // Restore original _mountComponents method\n    if (eleva._originalMountComponents) {\n      eleva._mountComponents = eleva._originalMountComponents;\n      delete eleva._originalMountComponents;\n    }\n\n    // Remove plugin utility methods\n    if (eleva.props) {\n      delete eleva.props;\n    }\n  }\n};"],"names":["CAMEL_RE","AttrPlugin","name","version","description","install","eleva","options","enableAria","enableData","enableBoolean","enableDynamic","updateAttributes","oldEl","newEl","oldAttrs","attributes","newAttrs","i","length","value","startsWith","getAttribute","prop","slice","replace","_","l","toUpperCase","setAttribute","dataset","Object","getOwnPropertyDescriptor","getPrototypeOf","elementProps","getOwnPropertyNames","matchingProp","find","p","toLowerCase","includes","descriptor","hasProperty","isBoolean","get","call","boolValue","removeAttribute","hasAttribute","renderer","originalPatchNode","_patchNode","_originalPatchNode","oldNode","newNode","_eleva_instance","_isSameNode","replaceWith","cloneNode","nodeType","Node","ELEMENT_NODE","_diff","TEXT_NODE","nodeValue","plugins","Map","set","updateElementAttributes","uninstall","delete","CoreErrorHandler","handle","error","context","details","message","formattedError","Error","originalError","console","warn","log","Router","constructor","mode","queryParam","viewSelector","routes","_processRoutes","emitter","isStarted","_isNavigating","eventListeners","currentRoute","signal","previousRoute","currentParams","currentQuery","currentLayout","currentView","errorHandler","_validateOptions","processedRoutes","route","push","segments","_parsePathIntoSegments","path","normalizedPath","split","filter","Boolean","map","segment","paramName","substring","type","_findViewElement","container","selector","querySelector","start","window","document","mount","mountSelector","handler","_handleRouteChange","addEventListener","removeEventListener","destroy","plugin","values","forEach","cleanup","unmount","navigate","location","params","target","_buildPath","query","keys","queryString","URLSearchParams","toString","_isSameRoute","navigationSuccessful","_proceedWithNavigation","state","historyMethod","newUrl","pathname","search","history","replaceState","hash","url","_buildQueryUrl","queueMicrotask","emit","urlParams","current","targetPath","targetQuery","_parseQuery","JSON","stringify","result","key","entries","encodedValue","encodeURIComponent","String","RegExp","from","toLocation","_getCurrentLocation","fullUrl","fullPath","toMatch","_matchRoute","notFoundRoute","pathMatch","to","meta","matched","canNavigate","_runGuards","layoutComponent","pageComponent","_resolveComponents","toLayout","layout","globalLayout","fromLayout","tryUnmount","instance","afterLeave","_render","afterEnter","guards","onBeforeEach","beforeLeave","beforeEnter","guard","_resolveStringComponent","def","componentDef","_components","componentName","availableComponents","Array","_resolveFunctionComponent","funcStr","isAsyncImport","default","function","_validateComponentDefinition","definition","template","_resolveComponent","undefined","effectiveLayout","Promise","all","component","mountEl","layoutInstance","_wrapComponentWithChildren","viewEl","viewInstance","_createRouteGetter","property","defaultValue","_wrapComponent","originalSetup","setup","self","ctx","router","bind","previous","href","wrappedComponent","children","wrappedChildren","childComponent","pathSegments","isMatch","routeSegment","pathSegment","decodeURIComponent","onAfterEnter","hook","on","onAfterLeave","onAfterEach","onError","use","has","existingPlugin","getPlugins","getPlugin","removePlugin","setErrorHandler","RouterPlugin","isArray","register","Math","random","autoStart","getCurrentRoute","getRouteParams","getRouteQuery","TemplateEngine","expressionPattern","parse","data","expression","evaluate","Function","PropsPlugin","enableAutoParsing","enableReactivity","detectType","Date","Set","parsePropValue","e","isNaN","parseFloat","Number","match","date","getTime","extractProps","element","props","attrs","attr","propName","parsedValue","createReactiveProps","reactiveProps","_extractProps","originalMount","compName","enhancedProps","originalMountComponents","_mountComponents","parentContextCache","WeakMap","pendingSignalLinks","childInstances","el","querySelectorAll","HTMLElement","extractedProps","parentContext","currentElement","parentElement","signalProps","finalProps","nonSignalProps","reactiveNonSignalProps","add","size","pending","assign","watch","newValue","templateResult","newHtml","patchDOM","_originalExtractProps","_originalMount","_originalMountComponents"],"mappings":"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,CAACR,OAAO,CAACK,MAAM,CAACpE,IAAI,CAAC;EAClC,EAAA;;EAEA;EACF;EACA;EACA;IACEwQ,eAAeA,CAACrK,YAAY,EAAE;MAC5B,IACEA,YAAY,IACZ,OAAOA,YAAY,CAAC7B,MAAM,KAAK,UAAU,IACzC,OAAO6B,YAAY,CAACpB,IAAI,KAAK,UAAU,IACvC,OAAOoB,YAAY,CAACnB,GAAG,KAAK,UAAU,EACtC;QACA,IAAI,CAACmB,YAAY,GAAGA,YAAY;EAClC,IAAA,CAAC,MAAM;EACLrB,MAAAA,OAAO,CAACC,IAAI,CACV,wFACF,CAAC;EACH,IAAA;EACF,EAAA;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACO,QAAM0L,YAAY,GAAG;EAC1B;EACF;EACA;EACA;EACEzQ,EAAAA,IAAI,EAAE,QAAQ;EAEd;EACF;EACA;EACA;EACEC,EAAAA,OAAO,EAAE,YAAY;EAErB;EACF;EACA;EACA;EACEC,EAAAA,WAAW,EAAE,4CAA4C;EAEzD;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,OAAOA,CAACC,KAAK,EAAEC,OAAO,GAAG,EAAE,EAAE;EAC3B,IAAA,IAAI,CAACA,OAAO,CAACsH,KAAK,EAAE;EAClB,MAAA,MAAM,IAAI/C,KAAK,CAAC,2CAA2C,CAAC;EAC9D,IAAA;EAEA,IAAA,IAAI,CAACvE,OAAO,CAACiF,MAAM,IAAI,CAAC6H,KAAK,CAACuD,OAAO,CAACrQ,OAAO,CAACiF,MAAM,CAAC,EAAE;EACrD,MAAA,MAAM,IAAIV,KAAK,CAAC,iDAAiD,CAAC;EACpE,IAAA;;EAEA;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACI,IAAA,MAAM+L,QAAQ,GAAGA,CAAC7D,GAAG,EAAE3F,IAAI,KAAK;EAC9B,MAAA,IAAI,CAAC2F,GAAG,EAAE,OAAO,IAAI;EAErB,MAAA,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,IAAI,CAACA,GAAG,CAAC9M,IAAI,EAAE;UACxD,MAAMA,IAAI,GAAG,CAAA,KAAA,EAAQmH,IAAI,aAAayJ,IAAI,CAACC,MAAM,EAAE,CAChD7H,QAAQ,CAAC,EAAE,CAAC,CACZ1H,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA,CAAE;UAEjB,IAAI;EACFlB,UAAAA,KAAK,CAAC6N,SAAS,CAACjO,IAAI,EAAE8M,GAAG,CAAC;EAC1B,UAAA,OAAO9M,IAAI;UACb,CAAC,CAAC,OAAOuE,KAAK,EAAE;YACd,MAAM,IAAIK,KAAK,CACb,CAAA,kCAAA,EAAqCuC,IAAI,eAAe5C,KAAK,CAACG,OAAO,CAAA,CACvE,CAAC;EACH,QAAA;EACF,MAAA;EACA,MAAA,OAAOoI,GAAG;MACZ,CAAC;MAED,IAAIzM,OAAO,CAAC4L,YAAY,EAAE;QACxB5L,OAAO,CAAC4L,YAAY,GAAG0E,QAAQ,CAACtQ,OAAO,CAAC4L,YAAY,EAAE,cAAc,CAAC;EACvE,IAAA;MAEA,CAAC5L,OAAO,CAACiF,MAAM,IAAI,EAAE,EAAE8C,OAAO,CAAE9B,KAAK,IAAK;QACxCA,KAAK,CAAC2H,SAAS,GAAG0C,QAAQ,CAACrK,KAAK,CAAC2H,SAAS,EAAE,OAAO,CAAC;QACpD,IAAI3H,KAAK,CAAC0F,MAAM,EAAE;UAChB1F,KAAK,CAAC0F,MAAM,GAAG2E,QAAQ,CAACrK,KAAK,CAAC0F,MAAM,EAAE,aAAa,CAAC;EACtD,MAAA;EACF,IAAA,CAAC,CAAC;MAEF,MAAM+C,MAAM,GAAG,IAAI9J,MAAM,CAAC7E,KAAK,EAAEC,OAAO,CAAC;MACzCD,KAAK,CAAC2O,MAAM,GAAGA,MAAM;EAErB,IAAA,IAAI1O,OAAO,CAACyQ,SAAS,KAAK,KAAK,EAAE;EAC/BhH,MAAAA,cAAc,CAAC,MAAMiF,MAAM,CAACvH,KAAK,EAAE,CAAC;EACtC,IAAA;;EAEA;EACA,IAAA,IAAI,CAACpH,KAAK,CAAC2D,OAAO,EAAE;EAClB3D,MAAAA,KAAK,CAAC2D,OAAO,GAAG,IAAIC,GAAG,EAAE;EAC3B,IAAA;MACA5D,KAAK,CAAC2D,OAAO,CAACE,GAAG,CAAC,IAAI,CAACjE,IAAI,EAAE;QAC3BA,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBC,WAAW,EAAE,IAAI,CAACA,WAAW;EAC7BG,MAAAA;EACF,KAAC,CAAC;;EAEF;MACAD,KAAK,CAACmI,QAAQ,GAAGwG,MAAM,CAACxG,QAAQ,CAACyG,IAAI,CAACD,MAAM,CAAC;MAC7C3O,KAAK,CAAC2Q,eAAe,GAAG,MAAMhC,MAAM,CAACnJ,YAAY,CAAC1E,KAAK;MACvDd,KAAK,CAAC4Q,cAAc,GAAG,MAAMjC,MAAM,CAAChJ,aAAa,CAAC7E,KAAK;MACvDd,KAAK,CAAC6Q,aAAa,GAAG,MAAMlC,MAAM,CAAC/I,YAAY,CAAC9E,KAAK;EAErD,IAAA,OAAO6N,MAAM;IACf,CAAC;EAED;EACF;EACA;EACA;EACA;IACE,MAAM5K,SAASA,CAAC/D,KAAK,EAAE;MACrB,IAAIA,KAAK,CAAC2O,MAAM,EAAE;EAChB,MAAA,MAAM3O,KAAK,CAAC2O,MAAM,CAAC9G,OAAO,EAAE;QAC5B,OAAO7H,KAAK,CAAC2O,MAAM;EACrB,IAAA;;EAEA;MACA,IAAI3O,KAAK,CAAC2D,OAAO,EAAE;QACjB3D,KAAK,CAAC2D,OAAO,CAACK,MAAM,CAAC,IAAI,CAACpE,IAAI,CAAC;EACjC,IAAA;;EAEA;MACA,OAAOI,KAAK,CAACmI,QAAQ;MACrB,OAAOnI,KAAK,CAAC2Q,eAAe;MAC5B,OAAO3Q,KAAK,CAAC4Q,cAAc;MAC3B,OAAO5Q,KAAK,CAAC6Q,aAAa;EAC5B,EAAA;EACF;;EC9rCA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAMC,cAAc,CAAC;EAC1B;EACF;EACA;EACA;IACE,OAAOC,iBAAiB,GAAG,sBAAsB;;EAEjD;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,EAAA,OAAOC,KAAKA,CAACzD,QAAQ,EAAE0D,IAAI,EAAE;EAC3B,IAAA,IAAI,OAAO1D,QAAQ,KAAK,QAAQ,EAAE,OAAOA,QAAQ;MACjD,OAAOA,QAAQ,CAACpM,OAAO,CAAC,IAAI,CAAC4P,iBAAiB,EAAE,CAAC3P,CAAC,EAAE8P,UAAU,KAC5D,IAAI,CAACC,QAAQ,CAACD,UAAU,EAAED,IAAI,CAChC,CAAC;EACH,EAAA;;EAEA;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,EAAA,OAAOE,QAAQA,CAACD,UAAU,EAAED,IAAI,EAAE;EAChC,IAAA,IAAI,OAAOC,UAAU,KAAK,QAAQ,EAAE,OAAOA,UAAU;MACrD,IAAI;QACF,OAAO,IAAIE,QAAQ,CAAC,MAAM,EAAE,CAAA,oBAAA,EAAuBF,UAAU,CAAA,GAAA,CAAK,CAAC,CAACD,IAAI,CAAC;EAC3E,IAAA,CAAC,CAAC,MAAM;EACN,MAAA,OAAO,EAAE;EACX,IAAA;EACF,EAAA;EACF;;EC5DA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACO,QAAMI,WAAW,GAAG;EACzB;EACF;EACA;EACA;EACEzR,EAAAA,IAAI,EAAE,OAAO;EAEb;EACF;EACA;EACA;EACEC,EAAAA,OAAO,EAAE,YAAY;EAErB;EACF;EACA;EACA;EACEC,EAAAA,WAAW,EAAE,uGAAuG;EAEpH;EACF;EACA;EACA;EACA;EACA;EACA;EA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"}