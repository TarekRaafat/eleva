{"version":3,"file":"eleva-plugins.cjs.js","sources":["../src/plugins/Attr.js","../src/plugins/Router.js","../src/modules/TemplateEngine.js","../src/plugins/Props.js","../src/plugins/Store.js"],"sourcesContent":["\"use strict\";\n\n/**\n * A regular expression to match hyphenated lowercase letters.\n * @private\n * @type {RegExp}\n */\nconst CAMEL_RE = /-([a-z])/g;\n\n/**\n * @class 🎯 AttrPlugin\n * @classdesc A plugin that provides advanced attribute handling for Eleva components.\n * This plugin extends the renderer with sophisticated attribute processing including:\n * - ARIA attribute handling with proper property mapping\n * - Data attribute management\n * - Boolean attribute processing\n * - Dynamic property detection and mapping\n * - Attribute cleanup and removal\n *\n * @example\n * // Install the plugin\n * const app = new Eleva(\"myApp\");\n * app.use(AttrPlugin);\n *\n * // Use advanced attributes in components\n * app.component(\"myComponent\", {\n *   template: (ctx) => `\n *     <button\n *       aria-expanded=\"${ctx.isExpanded.value}\"\n *       data-user-id=\"${ctx.userId.value}\"\n *       disabled=\"${ctx.isLoading.value}\"\n *       class=\"btn ${ctx.variant.value}\"\n *     >\n *       ${ctx.text.value}\n *     </button>\n *   `\n * });\n */\nexport const AttrPlugin = {\n  /**\n   * Unique identifier for the plugin\n   * @type {string}\n   */\n  name: \"attr\",\n\n  /**\n   * Plugin version\n   * @type {string}\n   */\n  version: \"1.0.0-rc.1\",\n\n  /**\n   * Plugin description\n   * @type {string}\n   */\n  description: \"Advanced attribute handling for Eleva components\",\n\n  /**\n   * Installs the plugin into the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   * @param {Object} options - Plugin configuration options\n   * @param {boolean} [options.enableAria=true] - Enable ARIA attribute handling\n   * @param {boolean} [options.enableData=true] - Enable data attribute handling\n   * @param {boolean} [options.enableBoolean=true] - Enable boolean attribute handling\n   * @param {boolean} [options.enableDynamic=true] - Enable dynamic property detection\n   */\n  install(eleva, options = {}) {\n    const {\n      enableAria = true,\n      enableData = true,\n      enableBoolean = true,\n      enableDynamic = true,\n    } = options;\n\n    /**\n     * Updates the attributes of an element to match a new element's attributes.\n     * This method provides sophisticated attribute processing including:\n     * - ARIA attribute handling with proper property mapping\n     * - Data attribute management\n     * - Boolean attribute processing\n     * - Dynamic property detection and mapping\n     * - Attribute cleanup and removal\n     *\n     * @param {HTMLElement} oldEl - The original element to update\n     * @param {HTMLElement} newEl - The new element to update\n     * @returns {void}\n     */\n    const updateAttributes = (oldEl, newEl) => {\n      const oldAttrs = oldEl.attributes;\n      const newAttrs = newEl.attributes;\n\n      // Process new attributes\n      for (let i = 0; i < newAttrs.length; i++) {\n        const { name, value } = newAttrs[i];\n\n        // Skip event attributes (handled by event system)\n        if (name.startsWith(\"@\")) continue;\n\n        // Skip if attribute hasn't changed\n        if (oldEl.getAttribute(name) === value) continue;\n\n        // Handle ARIA attributes\n        if (enableAria && name.startsWith(\"aria-\")) {\n          const prop =\n            \"aria\" + name.slice(5).replace(CAMEL_RE, (_, l) => l.toUpperCase());\n          oldEl[prop] = value;\n          oldEl.setAttribute(name, value);\n        }\n        // Handle data attributes\n        else if (enableData && name.startsWith(\"data-\")) {\n          oldEl.dataset[name.slice(5)] = value;\n          oldEl.setAttribute(name, value);\n        }\n        // Handle other attributes\n        else {\n          let prop = name.replace(CAMEL_RE, (_, l) => l.toUpperCase());\n\n          // Dynamic property detection\n          if (\n            enableDynamic &&\n            !(prop in oldEl) &&\n            !Object.getOwnPropertyDescriptor(Object.getPrototypeOf(oldEl), prop)\n          ) {\n            const elementProps = Object.getOwnPropertyNames(\n              Object.getPrototypeOf(oldEl)\n            );\n            const matchingProp = elementProps.find(\n              (p) =>\n                p.toLowerCase() === name.toLowerCase() ||\n                p.toLowerCase().includes(name.toLowerCase()) ||\n                name.toLowerCase().includes(p.toLowerCase())\n            );\n\n            if (matchingProp) {\n              prop = matchingProp;\n            }\n          }\n\n          const descriptor = Object.getOwnPropertyDescriptor(\n            Object.getPrototypeOf(oldEl),\n            prop\n          );\n          const hasProperty = prop in oldEl || descriptor;\n\n          if (hasProperty) {\n            // Boolean attribute handling\n            if (enableBoolean) {\n              const isBoolean =\n                typeof oldEl[prop] === \"boolean\" ||\n                (descriptor?.get &&\n                  typeof descriptor.get.call(oldEl) === \"boolean\");\n\n              if (isBoolean) {\n                const boolValue =\n                  value !== \"false\" &&\n                  (value === \"\" || value === prop || value === \"true\");\n                oldEl[prop] = boolValue;\n\n                if (boolValue) {\n                  oldEl.setAttribute(name, \"\");\n                } else {\n                  oldEl.removeAttribute(name);\n                }\n              } else {\n                oldEl[prop] = value;\n                oldEl.setAttribute(name, value);\n              }\n            } else {\n              oldEl[prop] = value;\n              oldEl.setAttribute(name, value);\n            }\n          } else {\n            oldEl.setAttribute(name, value);\n          }\n        }\n      }\n\n      // Remove old attributes that are no longer present\n      for (let i = oldAttrs.length - 1; i >= 0; i--) {\n        const name = oldAttrs[i].name;\n        if (!newEl.hasAttribute(name)) {\n          oldEl.removeAttribute(name);\n        }\n      }\n    };\n\n    // Extend the renderer with the advanced attribute handler\n    if (eleva.renderer) {\n      eleva.renderer.updateAttributes = updateAttributes;\n\n      // Store the original _patchNode method\n      const originalPatchNode = eleva.renderer._patchNode;\n      eleva.renderer._originalPatchNode = originalPatchNode;\n\n      // Override the _patchNode method to use our attribute handler\n      eleva.renderer._patchNode = function (oldNode, newNode) {\n        if (oldNode?._eleva_instance) return;\n\n        if (!this._isSameNode(oldNode, newNode)) {\n          oldNode.replaceWith(newNode.cloneNode(true));\n          return;\n        }\n\n        if (oldNode.nodeType === Node.ELEMENT_NODE) {\n          updateAttributes(oldNode, newNode);\n          this._diff(oldNode, newNode);\n        } else if (\n          oldNode.nodeType === Node.TEXT_NODE &&\n          oldNode.nodeValue !== newNode.nodeValue\n        ) {\n          oldNode.nodeValue = newNode.nodeValue;\n        }\n      };\n    }\n\n    // Add plugin metadata to the Eleva instance\n    if (!eleva.plugins) {\n      eleva.plugins = new Map();\n    }\n    eleva.plugins.set(this.name, {\n      name: this.name,\n      version: this.version,\n      description: this.description,\n      options,\n    });\n\n    // Add utility methods for manual attribute updates\n    eleva.updateElementAttributes = updateAttributes;\n  },\n\n  /**\n   * Uninstalls the plugin from the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   */\n  uninstall(eleva) {\n    // Restore original _patchNode method if it exists\n    if (eleva.renderer && eleva.renderer._originalPatchNode) {\n      eleva.renderer._patchNode = eleva.renderer._originalPatchNode;\n      delete eleva.renderer._originalPatchNode;\n    }\n\n    // Remove plugin metadata\n    if (eleva.plugins) {\n      eleva.plugins.delete(this.name);\n    }\n\n    // Remove utility methods\n    delete eleva.updateElementAttributes;\n  },\n};\n","\"use strict\";\n\n/**\n * @typedef {import('eleva').Eleva} Eleva\n * @typedef {import('eleva').Signal} Signal\n * @typedef {import('eleva').ComponentDefinition} ComponentDefinition\n */\n\n/**\n * Simple error handler for the core router.\n * Can be overridden by error handling plugins.\n * Provides consistent error formatting and logging for router operations.\n * @private\n */\nconst CoreErrorHandler = {\n  /**\n   * Handles router errors with basic formatting.\n   * @param {Error} error - The error to handle.\n   * @param {string} context - The context where the error occurred.\n   * @param {Object} details - Additional error details.\n   * @throws {Error} The formatted error.\n   */\n  handle(error, context, details = {}) {\n    const message = `[ElevaRouter] ${context}: ${error.message}`;\n    const formattedError = new Error(message);\n\n    // Preserve original error details\n    formattedError.originalError = error;\n    formattedError.context = context;\n    formattedError.details = details;\n\n    console.error(message, { error, context, details });\n    throw formattedError;\n  },\n\n  /**\n   * Logs a warning without throwing an error.\n   * @param {string} message - The warning message.\n   * @param {Object} details - Additional warning details.\n   */\n  warn(message, details = {}) {\n    console.warn(`[ElevaRouter] ${message}`, details);\n  },\n\n  /**\n   * Logs an error without throwing.\n   * @param {string} message - The error message.\n   * @param {Error} error - The original error.\n   * @param {Object} details - Additional error details.\n   */\n  log(message, error, details = {}) {\n    console.error(`[ElevaRouter] ${message}`, { error, details });\n  },\n};\n\n/**\n * @typedef {Object} RouteLocation\n * @property {string} path - The path of the route (e.g., '/users/123').\n * @property {Object<string, string>} query - An object representing the query parameters.\n * @property {string} fullUrl - The complete URL including hash, path, and query string.\n * @property {Object<string, string>} params - An object containing dynamic route parameters.\n * @property {Object<string, any>} meta - The meta object associated with the matched route.\n * @property {string} [name] - The optional name of the matched route.\n * @property {RouteDefinition} matched - The raw route definition object that was matched.\n */\n\n/**\n * @typedef {(to: RouteLocation, from: RouteLocation | null) => boolean | string | {path: string} | void | Promise<boolean | string | {path: string} | void>} NavigationGuard\n * A function that acts as a guard for navigation. It runs *before* the navigation is confirmed.\n * It can return:\n * - `true` or `undefined`: to allow navigation.\n * - `false`: to abort the navigation.\n * - a `string` (path) or a `location object`: to redirect to a new route.\n */\n\n/**\n * @typedef {(...args: any[]) => void | Promise<void>} NavigationHook\n * A function that acts as a lifecycle hook, typically for side effects. It does not affect navigation flow.\n */\n\n/**\n * @typedef {Object} RouterPlugin\n * @property {string} name - The plugin name.\n * @property {string} [version] - The plugin version.\n * @property {Function} install - The install function that receives the router instance.\n * @property {Function} [destroy] - Optional cleanup function called when the router is destroyed.\n */\n\n/**\n * @typedef {Object} RouteDefinition\n * @property {string} path - The URL path pattern (e.g., '/', '/about', '/users/:id', '*').\n * @property {string | ComponentDefinition | (() => Promise<{default: ComponentDefinition}>)} component - The component to render. Can be a registered name, a definition object, or an async import function.\n * @property {string | ComponentDefinition | (() => Promise<{default: ComponentDefinition}>)} [layout] - An optional layout component to wrap the route's component.\n * @property {string} [name] - An optional name for the route.\n * @property {Object<string, any>} [meta] - Optional metadata for the route (e.g., for titles, auth flags).\n * @property {NavigationGuard} [beforeEnter] - A route-specific guard executed before entering the route.\n * @property {NavigationHook} [afterEnter] - A hook executed *after* the route has been entered and the new component is mounted.\n * @property {NavigationGuard} [beforeLeave] - A guard executed *before* leaving the current route.\n * @property {NavigationHook} [afterLeave] - A hook executed *after* leaving the current route and its component has been unmounted.\n */\n\n/**\n * @class Router\n * @classdesc A powerful, reactive, and flexible Router Plugin for Eleva.js.\n * This class manages all routing logic, including state, navigation, and rendering.\n * @private\n */\nclass Router {\n  /**\n   * Creates an instance of the Router.\n   * @param {Eleva} eleva - The Eleva framework instance.\n   * @param {RouterOptions} options - The configuration options for the router.\n   */\n  constructor(eleva, options = {}) {\n    /** @type {Eleva} The Eleva framework instance. */\n    this.eleva = eleva;\n\n    /** @type {RouterOptions} The merged router options. */\n    this.options = {\n      mode: \"hash\",\n      queryParam: \"view\",\n      viewSelector: \"root\",\n      ...options,\n    };\n\n    /** @private @type {RouteDefinition[]} The processed list of route definitions. */\n    this.routes = this._processRoutes(options.routes || []);\n\n    /** @private @type {import('eleva').Emitter} The shared Eleva event emitter for global hooks. */\n    this.emitter = this.eleva.emitter;\n\n    /** @private @type {boolean} A flag indicating if the router has been started. */\n    this.isStarted = false;\n\n    /** @private @type {boolean} A flag to prevent navigation loops from history events. */\n    this._isNavigating = false;\n\n    /** @private @type {Array<() => void>} A collection of cleanup functions for event listeners. */\n    this.eventListeners = [];\n\n    /** @type {Signal<RouteLocation | null>} A reactive signal holding the current route's information. */\n    this.currentRoute = new this.eleva.signal(null);\n\n    /** @type {Signal<RouteLocation | null>} A reactive signal holding the previous route's information. */\n    this.previousRoute = new this.eleva.signal(null);\n\n    /** @type {Signal<Object<string, string>>} A reactive signal holding the current route's parameters. */\n    this.currentParams = new this.eleva.signal({});\n\n    /** @type {Signal<Object<string, string>>} A reactive signal holding the current route's query parameters. */\n    this.currentQuery = new this.eleva.signal({});\n\n    /** @type {Signal<import('eleva').MountResult | null>} A reactive signal for the currently mounted layout instance. */\n    this.currentLayout = new this.eleva.signal(null);\n\n    /** @type {Signal<import('eleva').MountResult | null>} A reactive signal for the currently mounted view (page) instance. */\n    this.currentView = new this.eleva.signal(null);\n\n    /** @private @type {Map<string, RouterPlugin>} Map of registered plugins by name. */\n    this.plugins = new Map();\n\n    /** @type {Object} The error handler instance. Can be overridden by plugins. */\n    this.errorHandler = CoreErrorHandler;\n\n    this._validateOptions();\n  }\n\n  /**\n   * Validates the provided router options.\n   * @private\n   * @throws {Error} If the routing mode is invalid.\n   */\n  _validateOptions() {\n    if (![\"hash\", \"query\", \"history\"].includes(this.options.mode)) {\n      this.errorHandler.handle(\n        new Error(\n          `Invalid routing mode: ${this.options.mode}. Must be \"hash\", \"query\", or \"history\".`\n        ),\n        \"Configuration validation failed\"\n      );\n    }\n  }\n\n  /**\n   * Pre-processes route definitions to parse their path segments for efficient matching.\n   * @private\n   * @param {RouteDefinition[]} routes - The raw route definitions.\n   * @returns {RouteDefinition[]} The processed routes.\n   */\n  _processRoutes(routes) {\n    const processedRoutes = [];\n    for (const route of routes) {\n      try {\n        processedRoutes.push({\n          ...route,\n          segments: this._parsePathIntoSegments(route.path),\n        });\n      } catch (error) {\n        this.errorHandler.warn(\n          `Invalid path in route definition \"${route.path || \"undefined\"}\": ${error.message}`,\n          { route, error }\n        );\n      }\n    }\n    return processedRoutes;\n  }\n\n  /**\n   * Parses a route path string into an array of static and parameter segments.\n   * @private\n   * @param {string} path - The path pattern to parse.\n   * @returns {Array<{type: 'static' | 'param', value?: string, name?: string}>} An array of segment objects.\n   * @throws {Error} If the route path is not a valid string.\n   */\n  _parsePathIntoSegments(path) {\n    if (!path || typeof path !== \"string\") {\n      this.errorHandler.handle(\n        new Error(\"Route path must be a non-empty string\"),\n        \"Path parsing failed\",\n        { path }\n      );\n    }\n\n    const normalizedPath = path.replace(/\\/+/g, \"/\").replace(/\\/$/, \"\") || \"/\";\n\n    if (normalizedPath === \"/\") {\n      return [];\n    }\n\n    return normalizedPath\n      .split(\"/\")\n      .filter(Boolean)\n      .map((segment) => {\n        if (segment.startsWith(\":\")) {\n          const paramName = segment.substring(1);\n          if (!paramName) {\n            this.errorHandler.handle(\n              new Error(`Invalid parameter segment: ${segment}`),\n              \"Path parsing failed\",\n              { segment, path }\n            );\n          }\n          return { type: \"param\", name: paramName };\n        }\n        return { type: \"static\", value: segment };\n      });\n  }\n\n  /**\n   * Finds the view element within a container using multiple selector strategies.\n   * @private\n   * @param {HTMLElement} container - The parent element to search within.\n   * @returns {HTMLElement} The found view element or the container itself as a fallback.\n   */\n  _findViewElement(container) {\n    const selector = this.options.viewSelector;\n    return (\n      container.querySelector(`#${selector}`) ||\n      container.querySelector(`.${selector}`) ||\n      container.querySelector(`[data-${selector}]`) ||\n      container.querySelector(selector) ||\n      container\n    );\n  }\n\n  /**\n   * Starts the router, initializes event listeners, and performs the initial navigation.\n   * @returns {Promise<void>}\n   */\n  async start() {\n    if (this.isStarted) {\n      this.errorHandler.warn(\"Router is already started\");\n      return;\n    }\n    if (typeof window === \"undefined\") {\n      this.errorHandler.warn(\n        \"Router start skipped: `window` object not available (SSR environment)\"\n      );\n      return;\n    }\n    if (\n      typeof document !== \"undefined\" &&\n      !document.querySelector(this.options.mount)\n    ) {\n      this.errorHandler.warn(\n        `Mount element \"${this.options.mount}\" was not found in the DOM. The router will not start.`,\n        { mountSelector: this.options.mount }\n      );\n      return;\n    }\n    const handler = () => this._handleRouteChange();\n    if (this.options.mode === \"hash\") {\n      window.addEventListener(\"hashchange\", handler);\n      this.eventListeners.push(() =>\n        window.removeEventListener(\"hashchange\", handler)\n      );\n    } else {\n      window.addEventListener(\"popstate\", handler);\n      this.eventListeners.push(() =>\n        window.removeEventListener(\"popstate\", handler)\n      );\n    }\n    this.isStarted = true;\n    await this._handleRouteChange();\n  }\n\n  /**\n   * Stops the router and cleans up all event listeners and mounted components.\n   * @returns {Promise<void>}\n   */\n  async destroy() {\n    if (!this.isStarted) return;\n\n    // Clean up plugins\n    for (const plugin of this.plugins.values()) {\n      if (typeof plugin.destroy === \"function\") {\n        try {\n          await plugin.destroy(this);\n        } catch (error) {\n          this.errorHandler.log(`Plugin ${plugin.name} destroy failed`, error);\n        }\n      }\n    }\n\n    this.eventListeners.forEach((cleanup) => cleanup());\n    this.eventListeners = [];\n    if (this.currentLayout.value) {\n      await this.currentLayout.value.unmount();\n    }\n    this.isStarted = false;\n  }\n\n  /**\n   * Programmatically navigates to a new route.\n   * @param {string | {path: string, query?: object, params?: object, replace?: boolean, state?: object}} location - The target location as a string or object.\n   * @param {object} [params] - Optional route parameters (for string-based location).\n   * @returns {Promise<void>}\n   */\n  async navigate(location, params = {}) {\n    try {\n      const target =\n        typeof location === \"string\" ? { path: location, params } : location;\n      let path = this._buildPath(target.path, target.params || {});\n      const query = target.query || {};\n\n      if (Object.keys(query).length > 0) {\n        const queryString = new URLSearchParams(query).toString();\n        if (queryString) path += `?${queryString}`;\n      }\n\n      if (this._isSameRoute(path, target.params, query)) {\n        return;\n      }\n\n      const navigationSuccessful = await this._proceedWithNavigation(path);\n\n      if (navigationSuccessful) {\n        this._isNavigating = true;\n        const state = target.state || {};\n        const replace = target.replace || false;\n        const historyMethod = replace ? \"replaceState\" : \"pushState\";\n\n        if (this.options.mode === \"hash\") {\n          if (replace) {\n            const newUrl = `${window.location.pathname}${window.location.search}#${path}`;\n            window.history.replaceState(state, \"\", newUrl);\n          } else {\n            window.location.hash = path;\n          }\n        } else {\n          const url =\n            this.options.mode === \"query\" ? this._buildQueryUrl(path) : path;\n          history[historyMethod](state, \"\", url);\n        }\n        queueMicrotask(() => {\n          this._isNavigating = false;\n        });\n      }\n    } catch (error) {\n      this.errorHandler.log(\"Navigation failed\", error);\n      await this.emitter.emit(\"router:onError\", error);\n    }\n  }\n\n  /**\n   * Builds a URL for query mode.\n   * @private\n   * @param {string} path - The path to set as the query parameter.\n   * @returns {string} The full URL with the updated query string.\n   */\n  _buildQueryUrl(path) {\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.set(this.options.queryParam, path.split(\"?\")[0]);\n    return `${window.location.pathname}?${urlParams.toString()}`;\n  }\n\n  /**\n   * Checks if the target route is identical to the current route.\n   * @private\n   * @param {string} path - The target path with query string.\n   * @param {object} params - The target params.\n   * @param {object} query - The target query.\n   * @returns {boolean} - True if the routes are the same.\n   */\n  _isSameRoute(path, params, query) {\n    const current = this.currentRoute.value;\n    if (!current) return false;\n    const [targetPath, queryString] = path.split(\"?\");\n    const targetQuery = query || this._parseQuery(queryString || \"\");\n    return (\n      current.path === targetPath &&\n      JSON.stringify(current.params) === JSON.stringify(params || {}) &&\n      JSON.stringify(current.query) === JSON.stringify(targetQuery)\n    );\n  }\n\n  /**\n   * Injects dynamic parameters into a path string.\n   * @private\n   */\n  _buildPath(path, params) {\n    let result = path;\n    for (const [key, value] of Object.entries(params)) {\n      // Fix: Handle special characters and ensure proper encoding\n      const encodedValue = encodeURIComponent(String(value));\n      result = result.replace(new RegExp(`:${key}\\\\b`, \"g\"), encodedValue);\n    }\n    return result;\n  }\n\n  /**\n   * The handler for browser-initiated route changes (e.g., back/forward buttons).\n   * @private\n   */\n  async _handleRouteChange() {\n    if (this._isNavigating) return;\n    const from = this.currentRoute.value;\n    const toLocation = this._getCurrentLocation();\n\n    const navigationSuccessful = await this._proceedWithNavigation(\n      toLocation.fullUrl\n    );\n\n    // If navigation was blocked by a guard, revert the URL change\n    if (!navigationSuccessful && from) {\n      this.navigate({ path: from.path, query: from.query, replace: true });\n    }\n  }\n\n  /**\n   * Manages the core navigation lifecycle. Runs guards before committing changes.\n   * @private\n   * @param {string} fullPath - The full path (e.g., '/users/123?foo=bar') to navigate to.\n   * @returns {Promise<boolean>} - `true` if navigation succeeded, `false` if aborted.\n   */\n  async _proceedWithNavigation(fullPath) {\n    const from = this.currentRoute.value;\n    const [path, queryString] = (fullPath || \"/\").split(\"?\");\n    const toLocation = {\n      path: path.startsWith(\"/\") ? path : `/${path}`,\n      query: this._parseQuery(queryString),\n      fullUrl: fullPath,\n    };\n\n    let toMatch = this._matchRoute(toLocation.path);\n\n    if (!toMatch) {\n      const notFoundRoute = this.routes.find((route) => route.path === \"*\");\n      if (notFoundRoute) {\n        toMatch = {\n          route: notFoundRoute,\n          params: { pathMatch: toLocation.path.substring(1) },\n        };\n      } else {\n        await this.emitter.emit(\n          \"router:onError\",\n          new Error(`Route not found: ${toLocation.path}`),\n          toLocation,\n          from\n        );\n        return false;\n      }\n    }\n\n    const to = {\n      ...toLocation,\n      params: toMatch.params,\n      meta: toMatch.route.meta || {},\n      name: toMatch.route.name,\n      matched: toMatch.route,\n    };\n\n    try {\n      // 1. Run all *pre-navigation* guards.\n      const canNavigate = await this._runGuards(to, from, toMatch.route);\n      if (!canNavigate) return false;\n\n      // 2. Resolve async components *before* touching the DOM.\n      const { layoutComponent, pageComponent } = await this._resolveComponents(\n        toMatch.route\n      );\n\n      // 3. Unmount the previous view/layout.\n      if (from) {\n        const toLayout = toMatch.route.layout || this.options.globalLayout;\n        const fromLayout = from.matched.layout || this.options.globalLayout;\n\n        const tryUnmount = async (instance) => {\n          if (!instance) return;\n\n          try {\n            await instance.unmount();\n          } catch (error) {\n            this.errorHandler.warn(\"Error during component unmount\", {\n              error,\n              instance,\n            });\n          }\n        };\n\n        if (toLayout !== fromLayout) {\n          await tryUnmount(this.currentLayout.value);\n          this.currentLayout.value = null;\n        } else {\n          await tryUnmount(this.currentView.value);\n          this.currentView.value = null;\n        }\n\n        // 4. Call `afterLeave` hook *after* the old component has been unmounted.\n        if (from.matched.afterLeave) {\n          await from.matched.afterLeave(to, from);\n          await this.emitter.emit(\"router:afterLeave\", to, from);\n        }\n      }\n\n      // 5. Update reactive state.\n      this.previousRoute.value = from;\n      this.currentRoute.value = to;\n      this.currentParams.value = to.params || {};\n      this.currentQuery.value = to.query || {};\n\n      // 6. Render the new components.\n      await this._render(layoutComponent, pageComponent, to);\n\n      // 7. Run post-navigation hooks.\n      if (toMatch.route.afterEnter) {\n        await toMatch.route.afterEnter(to, from);\n        await this.emitter.emit(\"router:afterEnter\", to, from);\n      }\n      await this.emitter.emit(\"router:afterEach\", to, from);\n\n      return true;\n    } catch (error) {\n      this.errorHandler.log(\"Error during navigation\", error, { to, from });\n      await this.emitter.emit(\"router:onError\", error, to, from);\n      return false;\n    }\n  }\n\n  /**\n   * Executes all applicable navigation guards for a transition in order.\n   * @private\n   * @returns {Promise<boolean>} - `false` if navigation should be aborted.\n   */\n  async _runGuards(to, from, route) {\n    const guards = [\n      ...(this.options.onBeforeEach ? [this.options.onBeforeEach] : []),\n      ...(from && from.matched.beforeLeave ? [from.matched.beforeLeave] : []),\n      ...(route.beforeEnter ? [route.beforeEnter] : []),\n    ];\n    for (const guard of guards) {\n      const result = await guard(to, from);\n      if (result === false) return false;\n      if (typeof result === \"string\" || typeof result === \"object\") {\n        this.navigate(result);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Resolves a string component definition to a component object.\n   * @private\n   * @param {string} def - The component name to resolve.\n   * @returns {ComponentDefinition} The resolved component.\n   * @throws {Error} If the component is not registered.\n   */\n  _resolveStringComponent(def) {\n    const componentDef = this.eleva._components.get(def);\n    if (!componentDef) {\n      this.errorHandler.handle(\n        new Error(`Component \"${def}\" not registered.`),\n        \"Component resolution failed\",\n        {\n          componentName: def,\n          availableComponents: Array.from(this.eleva._components.keys()),\n        }\n      );\n    }\n    return componentDef;\n  }\n\n  /**\n   * Resolves a function component definition to a component object.\n   * @private\n   * @param {Function} def - The function to resolve.\n   * @returns {Promise<ComponentDefinition>} The resolved component.\n   * @throws {Error} If the function fails to load the component.\n   */\n  async _resolveFunctionComponent(def) {\n    try {\n      const funcStr = def.toString();\n      const isAsyncImport =\n        funcStr.includes(\"import(\") || funcStr.startsWith(\"() =>\");\n\n      const result = await def();\n      return isAsyncImport ? result.default || result : result;\n    } catch (error) {\n      this.errorHandler.handle(\n        new Error(`Failed to load async component: ${error.message}`),\n        \"Component resolution failed\",\n        { function: def.toString(), error }\n      );\n    }\n  }\n\n  /**\n   * Validates a component definition object.\n   * @private\n   * @param {any} def - The component definition to validate.\n   * @returns {ComponentDefinition} The validated component.\n   * @throws {Error} If the component definition is invalid.\n   */\n  _validateComponentDefinition(def) {\n    if (!def || typeof def !== \"object\") {\n      this.errorHandler.handle(\n        new Error(`Invalid component definition: ${typeof def}`),\n        \"Component validation failed\",\n        { definition: def }\n      );\n    }\n\n    if (\n      typeof def.template !== \"function\" &&\n      typeof def.template !== \"string\"\n    ) {\n      this.errorHandler.handle(\n        new Error(\"Component missing template property\"),\n        \"Component validation failed\",\n        { definition: def }\n      );\n    }\n\n    return def;\n  }\n\n  /**\n   * Resolves a component definition to a component object.\n   * @private\n   * @param {any} def - The component definition to resolve.\n   * @returns {Promise<ComponentDefinition | null>} The resolved component or null.\n   */\n  async _resolveComponent(def) {\n    if (def === null || def === undefined) {\n      return null;\n    }\n\n    if (typeof def === \"string\") {\n      return this._resolveStringComponent(def);\n    }\n\n    if (typeof def === \"function\") {\n      return await this._resolveFunctionComponent(def);\n    }\n\n    if (def && typeof def === \"object\") {\n      return this._validateComponentDefinition(def);\n    }\n\n    this.errorHandler.handle(\n      new Error(`Invalid component definition: ${typeof def}`),\n      \"Component resolution failed\",\n      { definition: def }\n    );\n  }\n\n  /**\n   * Asynchronously resolves the layout and page components for a route.\n   * @private\n   * @param {RouteDefinition} route - The route to resolve components for.\n   * @returns {Promise<{layoutComponent: ComponentDefinition | null, pageComponent: ComponentDefinition}>}\n   */\n  async _resolveComponents(route) {\n    const effectiveLayout = route.layout || this.options.globalLayout;\n\n    try {\n      const [layoutComponent, pageComponent] = await Promise.all([\n        this._resolveComponent(effectiveLayout),\n        this._resolveComponent(route.component),\n      ]);\n\n      if (!pageComponent) {\n        this.errorHandler.handle(\n          new Error(\n            `Page component is null or undefined for route: ${route.path}`\n          ),\n          \"Component resolution failed\",\n          { route: route.path }\n        );\n      }\n\n      return { layoutComponent, pageComponent };\n    } catch (error) {\n      this.errorHandler.log(\n        `Error resolving components for route ${route.path}`,\n        error,\n        { route: route.path }\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Renders the components for the current route into the DOM.\n   * @private\n   * @param {ComponentDefinition | null} layoutComponent - The pre-loaded layout component.\n   * @param {ComponentDefinition} pageComponent - The pre-loaded page component.\n   */\n  async _render(layoutComponent, pageComponent) {\n    const mountEl = document.querySelector(this.options.mount);\n    if (!mountEl) {\n      this.errorHandler.handle(\n        new Error(`Mount element \"${this.options.mount}\" not found.`),\n        { mountSelector: this.options.mount }\n      );\n    }\n\n    if (layoutComponent) {\n      const layoutInstance = await this.eleva.mount(\n        mountEl,\n        this._wrapComponentWithChildren(layoutComponent)\n      );\n      this.currentLayout.value = layoutInstance;\n      const viewEl = this._findViewElement(layoutInstance.container);\n      const viewInstance = await this.eleva.mount(\n        viewEl,\n        this._wrapComponentWithChildren(pageComponent)\n      );\n      this.currentView.value = viewInstance;\n    } else {\n      const viewInstance = await this.eleva.mount(\n        mountEl,\n        this._wrapComponentWithChildren(pageComponent)\n      );\n      this.currentView.value = viewInstance;\n      this.currentLayout.value = null;\n    }\n  }\n\n  /**\n   * Creates a getter function for router context properties.\n   * @private\n   * @param {string} property - The property name to access.\n   * @param {any} defaultValue - The default value if property is undefined.\n   * @returns {Function} A getter function.\n   */\n  _createRouteGetter(property, defaultValue) {\n    return () => this.currentRoute.value?.[property] ?? defaultValue;\n  }\n\n  /**\n   * Wraps a component definition to inject router-specific context into its setup function.\n   * @private\n   * @param {ComponentDefinition} component - The component to wrap.\n   * @returns {ComponentDefinition} The wrapped component definition.\n   */\n  _wrapComponent(component) {\n    const originalSetup = component.setup;\n    const self = this;\n\n    return {\n      ...component,\n      async setup(ctx) {\n        ctx.router = {\n          navigate: self.navigate.bind(self),\n          current: self.currentRoute,\n          previous: self.previousRoute,\n\n          // Route property getters\n          get params() {\n            return self._createRouteGetter(\"params\", {})();\n          },\n          get query() {\n            return self._createRouteGetter(\"query\", {})();\n          },\n          get path() {\n            return self._createRouteGetter(\"path\", \"/\")();\n          },\n          get fullUrl() {\n            return self._createRouteGetter(\"fullUrl\", window.location.href)();\n          },\n          get meta() {\n            return self._createRouteGetter(\"meta\", {})();\n          },\n        };\n\n        return originalSetup ? await originalSetup(ctx) : {};\n      },\n    };\n  }\n\n  /**\n   * Recursively wraps all child components to ensure they have access to router context.\n   * @private\n   * @param {ComponentDefinition} component - The component to wrap.\n   * @returns {ComponentDefinition} The wrapped component definition.\n   */\n  _wrapComponentWithChildren(component) {\n    const wrappedComponent = this._wrapComponent(component);\n\n    // If the component has children, wrap them too\n    if (\n      wrappedComponent.children &&\n      typeof wrappedComponent.children === \"object\"\n    ) {\n      const wrappedChildren = {};\n      for (const [selector, childComponent] of Object.entries(\n        wrappedComponent.children\n      )) {\n        wrappedChildren[selector] =\n          this._wrapComponentWithChildren(childComponent);\n      }\n      wrappedComponent.children = wrappedChildren;\n    }\n\n    return wrappedComponent;\n  }\n\n  /**\n   * Gets the current location information from the browser's window object.\n   * @private\n   * @returns {Omit<RouteLocation, 'params' | 'meta' | 'name' | 'matched'>}\n   */\n  _getCurrentLocation() {\n    if (typeof window === \"undefined\")\n      return { path: \"/\", query: {}, fullUrl: \"\" };\n    let path, queryString, fullUrl;\n    switch (this.options.mode) {\n      case \"hash\":\n        fullUrl = window.location.hash.slice(1) || \"/\";\n        [path, queryString] = fullUrl.split(\"?\");\n        break;\n      case \"query\":\n        const urlParams = new URLSearchParams(window.location.search);\n        path = urlParams.get(this.options.queryParam) || \"/\";\n        queryString = window.location.search.slice(1);\n        fullUrl = path;\n        break;\n      default: // 'history' mode\n        path = window.location.pathname || \"/\";\n        queryString = window.location.search.slice(1);\n        fullUrl = `${path}${queryString ? \"?\" + queryString : \"\"}`;\n    }\n    return {\n      path: path.startsWith(\"/\") ? path : `/${path}`,\n      query: this._parseQuery(queryString),\n      fullUrl,\n    };\n  }\n\n  /**\n   * Parses a query string into a key-value object.\n   * @private\n   */\n  _parseQuery(queryString) {\n    const query = {};\n    if (queryString) {\n      new URLSearchParams(queryString).forEach((value, key) => {\n        query[key] = value;\n      });\n    }\n    return query;\n  }\n\n  /**\n   * Matches a given path against the registered routes.\n   * @private\n   * @param {string} path - The path to match.\n   * @returns {{route: RouteDefinition, params: Object<string, string>} | null} The matched route and its params, or null.\n   */\n  _matchRoute(path) {\n    const pathSegments = path.split(\"/\").filter(Boolean);\n\n    for (const route of this.routes) {\n      // Handle the root path as a special case.\n      if (route.path === \"/\") {\n        if (pathSegments.length === 0) return { route, params: {} };\n        continue;\n      }\n\n      if (route.segments.length !== pathSegments.length) continue;\n\n      const params = {};\n      let isMatch = true;\n      for (let i = 0; i < route.segments.length; i++) {\n        const routeSegment = route.segments[i];\n        const pathSegment = pathSegments[i];\n        if (routeSegment.type === \"param\") {\n          params[routeSegment.name] = decodeURIComponent(pathSegment);\n        } else if (routeSegment.value !== pathSegment) {\n          isMatch = false;\n          break;\n        }\n      }\n      if (isMatch) return { route, params };\n    }\n    return null;\n  }\n\n  /** Registers a global pre-navigation guard. */\n  onBeforeEach(guard) {\n    this.options.onBeforeEach = guard;\n  }\n  /** Registers a global hook that runs after a new route component has been mounted *if* the route has an `afterEnter` hook. */\n  onAfterEnter(hook) {\n    this.emitter.on(\"router:afterEnter\", hook);\n  }\n  /** Registers a global hook that runs after a route component has been unmounted *if* the route has an `afterLeave` hook. */\n  onAfterLeave(hook) {\n    this.emitter.on(\"router:afterLeave\", hook);\n  }\n  /** Registers a global hook that runs after a navigation has been confirmed and all hooks have completed. */\n  onAfterEach(hook) {\n    this.emitter.on(\"router:afterEach\", hook);\n  }\n  /** Registers a global error handler for navigation. */\n  onError(handler) {\n    this.emitter.on(\"router:onError\", handler);\n  }\n\n  /**\n   * Registers a plugin with the router.\n   * @param {RouterPlugin} plugin - The plugin to register.\n   */\n  use(plugin, options = {}) {\n    if (typeof plugin.install !== \"function\") {\n      this.errorHandler.handle(\n        new Error(\"Plugin must have an install method\"),\n        \"Plugin registration failed\",\n        { plugin }\n      );\n    }\n\n    // Check if plugin is already registered\n    if (this.plugins.has(plugin.name)) {\n      this.errorHandler.warn(`Plugin \"${plugin.name}\" is already registered`, {\n        existingPlugin: this.plugins.get(plugin.name),\n      });\n      return;\n    }\n\n    this.plugins.set(plugin.name, plugin);\n    plugin.install(this, options);\n  }\n\n  /**\n   * Gets all registered plugins.\n   * @returns {RouterPlugin[]} Array of registered plugins.\n   */\n  getPlugins() {\n    return Array.from(this.plugins.values());\n  }\n\n  /**\n   * Gets a plugin by name.\n   * @param {string} name - The plugin name.\n   * @returns {RouterPlugin | undefined} The plugin or undefined.\n   */\n  getPlugin(name) {\n    return this.plugins.get(name);\n  }\n\n  /**\n   * Removes a plugin from the router.\n   * @param {string} name - The plugin name.\n   * @returns {boolean} True if the plugin was removed.\n   */\n  removePlugin(name) {\n    const plugin = this.plugins.get(name);\n    if (!plugin) return false;\n\n    // Call destroy if available\n    if (typeof plugin.destroy === \"function\") {\n      try {\n        plugin.destroy(this);\n      } catch (error) {\n        this.errorHandler.log(`Plugin ${name} destroy failed`, error);\n      }\n    }\n\n    return this.plugins.delete(name);\n  }\n\n  /**\n   * Sets a custom error handler. Used by error handling plugins.\n   * @param {Object} errorHandler - The error handler object with handle, warn, and log methods.\n   */\n  setErrorHandler(errorHandler) {\n    if (\n      errorHandler &&\n      typeof errorHandler.handle === \"function\" &&\n      typeof errorHandler.warn === \"function\" &&\n      typeof errorHandler.log === \"function\"\n    ) {\n      this.errorHandler = errorHandler;\n    } else {\n      console.warn(\n        \"[ElevaRouter] Invalid error handler provided. Must have handle, warn, and log methods.\"\n      );\n    }\n  }\n}\n\n/**\n * @typedef {Object} RouterOptions\n * @property {string} mount - A CSS selector for the main element where the app is mounted.\n * @property {RouteDefinition[]} routes - An array of route definitions.\n * @property {'hash' | 'query' | 'history'} [mode='hash'] - The routing mode.\n * @property {string} [queryParam='page'] - The query parameter to use in 'query' mode.\n * @property {string} [viewSelector='view'] - The selector for the view element within a layout.\n * @property {boolean} [autoStart=true] - Whether to start the router automatically.\n * @property {NavigationGuard} [onBeforeEach] - A global guard executed before every navigation.\n * @property {string | ComponentDefinition | (() => Promise<{default: ComponentDefinition}>)} [globalLayout] - A global layout for all routes. Can be overridden by a route's specific layout.\n */\n\n/**\n * @class 🚀 RouterPlugin\n * @classdesc A powerful, reactive, and flexible Router Plugin for Eleva.js applications.\n * This plugin provides comprehensive client-side routing functionality including:\n * - Multiple routing modes (hash, history, query)\n * - Navigation guards and lifecycle hooks\n * - Reactive state management\n * - Component resolution and lazy loading\n * - Layout and page component separation\n * - Plugin system for extensibility\n * - Advanced error handling\n *\n * @example\n * // Install the plugin\n * const app = new Eleva(\"myApp\");\n *\n * const HomePage = { template: () => `<h1>Home</h1>` };\n * const AboutPage = { template: () => `<h1>About Us</h1>` };\n * const UserPage = {\n *   template: (ctx) => `<h1>User: ${ctx.router.params.id}</h1>`\n * };\n *\n * app.use(RouterPlugin, {\n *   mount: '#app',\n *   mode: 'hash',\n *   routes: [\n *     { path: '/', component: HomePage },\n *     { path: '/about', component: AboutPage },\n *     { path: '/users/:id', component: UserPage }\n *   ]\n * });\n */\nexport const RouterPlugin = {\n  /**\n   * Unique identifier for the plugin\n   * @type {string}\n   */\n  name: \"router\",\n\n  /**\n   * Plugin version\n   * @type {string}\n   */\n  version: \"1.0.0-rc.1\",\n\n  /**\n   * Plugin description\n   * @type {string}\n   */\n  description: \"Client-side routing for Eleva applications\",\n\n  /**\n   * Installs the RouterPlugin into an Eleva instance.\n   *\n   * @param {Eleva} eleva - The Eleva instance\n   * @param {RouterOptions} options - Router configuration options\n   * @param {string} options.mount - A CSS selector for the main element where the app is mounted\n   * @param {RouteDefinition[]} options.routes - An array of route definitions\n   * @param {'hash' | 'query' | 'history'} [options.mode='hash'] - The routing mode\n   * @param {string} [options.queryParam='page'] - The query parameter to use in 'query' mode\n   * @param {string} [options.viewSelector='view'] - The selector for the view element within a layout\n   * @param {boolean} [options.autoStart=true] - Whether to start the router automatically\n   * @param {NavigationGuard} [options.onBeforeEach] - A global guard executed before every navigation\n   * @param {string | ComponentDefinition | (() => Promise<{default: ComponentDefinition}>)} [options.globalLayout] - A global layout for all routes\n   *\n   * @example\n   * // main.js\n   * import Eleva from './eleva.js';\n   * import { RouterPlugin } from './plugins/RouterPlugin.js';\n   *\n   * const app = new Eleva('myApp');\n   *\n   * const HomePage = { template: () => `<h1>Home</h1>` };\n   * const AboutPage = { template: () => `<h1>About Us</h1>` };\n   *\n   * app.use(RouterPlugin, {\n   *  mount: '#app',\n   *  routes: [\n   *    { path: '/', component: HomePage },\n   *    { path: '/about', component: AboutPage }\n   *  ]\n   * });\n   */\n  install(eleva, options = {}) {\n    if (!options.mount) {\n      throw new Error(\"[RouterPlugin] 'mount' option is required\");\n    }\n\n    if (!options.routes || !Array.isArray(options.routes)) {\n      throw new Error(\"[RouterPlugin] 'routes' option must be an array\");\n    }\n\n    /**\n     * Registers a component definition with the Eleva instance.\n     * This method handles both inline component objects and pre-registered component names.\n     *\n     * @param {any} def - The component definition to register\n     * @param {string} type - The type of component for naming (e.g., \"Route\", \"Layout\")\n     * @returns {string | null} The registered component name or null if no definition provided\n     */\n    const register = (def, type) => {\n      if (!def) return null;\n\n      if (typeof def === \"object\" && def !== null && !def.name) {\n        const name = `Eleva${type}Component_${Math.random()\n          .toString(36)\n          .slice(2, 11)}`;\n\n        try {\n          eleva.component(name, def);\n          return name;\n        } catch (error) {\n          throw new Error(\n            `[RouterPlugin] Failed to register ${type} component: ${error.message}`\n          );\n        }\n      }\n      return def;\n    };\n\n    if (options.globalLayout) {\n      options.globalLayout = register(options.globalLayout, \"GlobalLayout\");\n    }\n\n    (options.routes || []).forEach((route) => {\n      route.component = register(route.component, \"Route\");\n      if (route.layout) {\n        route.layout = register(route.layout, \"RouteLayout\");\n      }\n    });\n\n    const router = new Router(eleva, options);\n    eleva.router = router;\n\n    if (options.autoStart !== false) {\n      queueMicrotask(() => router.start());\n    }\n\n    // Add plugin metadata to the Eleva instance\n    if (!eleva.plugins) {\n      eleva.plugins = new Map();\n    }\n    eleva.plugins.set(this.name, {\n      name: this.name,\n      version: this.version,\n      description: this.description,\n      options,\n    });\n\n    // Add utility methods for manual router access\n    eleva.navigate = router.navigate.bind(router);\n    eleva.getCurrentRoute = () => router.currentRoute.value;\n    eleva.getRouteParams = () => router.currentParams.value;\n    eleva.getRouteQuery = () => router.currentQuery.value;\n\n    return router;\n  },\n\n  /**\n   * Uninstalls the plugin from the Eleva instance\n   *\n   * @param {Eleva} eleva - The Eleva instance\n   */\n  async uninstall(eleva) {\n    if (eleva.router) {\n      await eleva.router.destroy();\n      delete eleva.router;\n    }\n\n    // Remove plugin metadata\n    if (eleva.plugins) {\n      eleva.plugins.delete(this.name);\n    }\n\n    // Remove utility methods\n    delete eleva.navigate;\n    delete eleva.getCurrentRoute;\n    delete eleva.getRouteParams;\n    delete eleva.getRouteQuery;\n  },\n};\n","\"use strict\";\n\n/**\n * @class 🔒 TemplateEngine\n * @classdesc A secure template engine that handles interpolation and dynamic attribute parsing.\n * Provides a safe way to evaluate expressions in templates while preventing XSS attacks.\n * All methods are static and can be called directly on the class.\n *\n * @example\n * const template = \"Hello, {{name}}!\";\n * const data = { name: \"World\" };\n * const result = TemplateEngine.parse(template, data); // Returns: \"Hello, World!\"\n */\nexport class TemplateEngine {\n  /**\n   * @private {RegExp} Regular expression for matching template expressions in the format {{ expression }}\n   * @type {RegExp}\n   */\n  static expressionPattern = /\\{\\{\\s*(.*?)\\s*\\}\\}/g;\n\n  /**\n   * Parses a template string, replacing expressions with their evaluated values.\n   * Expressions are evaluated in the provided data context.\n   *\n   * @public\n   * @static\n   * @param {string} template - The template string to parse.\n   * @param {Record<string, unknown>} data - The data context for evaluating expressions.\n   * @returns {string} The parsed template with expressions replaced by their values.\n   * @example\n   * const result = TemplateEngine.parse(\"{{user.name}} is {{user.age}} years old\", {\n   *   user: { name: \"John\", age: 30 }\n   * }); // Returns: \"John is 30 years old\"\n   */\n  static parse(template, data) {\n    if (typeof template !== \"string\") return template;\n    return template.replace(this.expressionPattern, (_, expression) =>\n      this.evaluate(expression, data)\n    );\n  }\n\n  /**\n   * Evaluates an expression in the context of the provided data object.\n   * Note: This does not provide a true sandbox and evaluated expressions may access global scope.\n   * The use of the `with` statement is necessary for expression evaluation but has security implications.\n   * Expressions should be carefully validated before evaluation.\n   *\n   * @public\n   * @static\n   * @param {string} expression - The expression to evaluate.\n   * @param {Record<string, unknown>} data - The data context for evaluation.\n   * @returns {unknown} The result of the evaluation, or an empty string if evaluation fails.\n   * @example\n   * const result = TemplateEngine.evaluate(\"user.name\", { user: { name: \"John\" } }); // Returns: \"John\"\n   * const age = TemplateEngine.evaluate(\"user.age\", { user: { age: 30 } }); // Returns: 30\n   */\n  static evaluate(expression, data) {\n    if (typeof expression !== \"string\") return expression;\n    try {\n      return new Function(\"data\", `with(data) { return ${expression}; }`)(data);\n    } catch {\n      return \"\";\n    }\n  }\n}\n","\"use strict\";\n\nimport { TemplateEngine } from \"../modules/TemplateEngine.js\";\n\n/**\n * @class 🎯 PropsPlugin\n * @classdesc A plugin that extends Eleva's props data handling to support any type of data structure\n * with automatic type detection, parsing, and reactive prop updates. This plugin enables seamless\n * passing of complex data types from parent to child components without manual parsing.\n *\n * Core Features:\n * - Automatic type detection and parsing (strings, numbers, booleans, objects, arrays, dates, etc.)\n * - Support for complex data structures including nested objects and arrays\n * - Reactive props that automatically update when parent data changes\n * - Comprehensive error handling with custom error callbacks\n * - Simple configuration with minimal setup required\n *\n * @example\n * // Install the plugin\n * const app = new Eleva(\"myApp\");\n * app.use(PropsPlugin, {\n *   enableAutoParsing: true,\n *   enableReactivity: true,\n *   onError: (error, value) => {\n *     console.error('Props parsing error:', error, value);\n *   }\n * });\n *\n * // Use complex props in components\n * app.component(\"UserCard\", {\n *   template: (ctx) => `\n *     <div class=\"user-info-container\"\n *          :user='${JSON.stringify(ctx.user.value)}'\n *          :permissions='${JSON.stringify(ctx.permissions.value)}'\n *          :settings='${JSON.stringify(ctx.settings.value)}'>\n *     </div>\n *   `,\n *   children: {\n *     '.user-info-container': 'UserInfo'\n *   }\n * });\n *\n * app.component(\"UserInfo\", {\n *   setup({ props }) {\n *     return {\n *       user: props.user,        // Automatically parsed object\n *       permissions: props.permissions,  // Automatically parsed array\n *       settings: props.settings  // Automatically parsed object\n *     };\n *   }\n * });\n */\nexport const PropsPlugin = {\n  /**\n   * Unique identifier for the plugin\n   * @type {string}\n   */\n  name: \"props\",\n\n  /**\n   * Plugin version\n   * @type {string}\n   */\n  version: \"1.0.0-rc.2\",\n\n  /**\n   * Plugin description\n   * @type {string}\n   */\n  description:\n    \"Advanced props data handling for complex data structures with automatic type detection and reactivity\",\n\n  /**\n   * Installs the plugin into the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   * @param {Object} options - Plugin configuration options\n   * @param {boolean} [options.enableAutoParsing=true] - Enable automatic type detection and parsing\n   * @param {boolean} [options.enableReactivity=true] - Enable reactive prop updates using Eleva's signal system\n   * @param {Function} [options.onError=null] - Error handler function called when parsing fails\n   *\n   * @example\n   * // Basic installation\n   * app.use(PropsPlugin);\n   *\n   * // Installation with custom options\n   * app.use(PropsPlugin, {\n   *   enableAutoParsing: true,\n   *   enableReactivity: false,\n   *   onError: (error, value) => {\n   *     console.error('Props parsing error:', error, value);\n   *   }\n   * });\n   */\n  install(eleva, options = {}) {\n    const {\n      enableAutoParsing = true,\n      enableReactivity = true,\n      onError = null,\n    } = options;\n\n    /**\n     * Detects the type of a given value\n     * @private\n     * @param {any} value - The value to detect type for\n     * @returns {string} The detected type ('string', 'number', 'boolean', 'object', 'array', 'date', 'map', 'set', 'function', 'null', 'undefined', 'unknown')\n     *\n     * @example\n     * detectType(\"hello\")     // → \"string\"\n     * detectType(42)          // → \"number\"\n     * detectType(true)        // → \"boolean\"\n     * detectType([1, 2, 3])   // → \"array\"\n     * detectType({})          // → \"object\"\n     * detectType(new Date())  // → \"date\"\n     * detectType(null)        // → \"null\"\n     */\n    const detectType = (value) => {\n      if (value === null) return \"null\";\n      if (value === undefined) return \"undefined\";\n      if (typeof value === \"boolean\") return \"boolean\";\n      if (typeof value === \"number\") return \"number\";\n      if (typeof value === \"string\") return \"string\";\n      if (typeof value === \"function\") return \"function\";\n      if (value instanceof Date) return \"date\";\n      if (value instanceof Map) return \"map\";\n      if (value instanceof Set) return \"set\";\n      if (Array.isArray(value)) return \"array\";\n      if (typeof value === \"object\") return \"object\";\n      return \"unknown\";\n    };\n\n    /**\n     * Parses a prop value with automatic type detection\n     * @private\n     * @param {any} value - The value to parse\n     * @returns {any} The parsed value with appropriate type\n     *\n     * @description\n     * This function automatically detects and parses different data types from string values:\n     * - Special strings: \"true\" → true, \"false\" → false, \"null\" → null, \"undefined\" → undefined\n     * - JSON objects/arrays: '{\"key\": \"value\"}' → {key: \"value\"}, '[1, 2, 3]' → [1, 2, 3]\n     * - Boolean-like strings: \"1\" → true, \"0\" → false, \"\" → true\n     * - Numeric strings: \"42\" → 42, \"3.14\" → 3.14\n     * - Date strings: \"2023-01-01T00:00:00.000Z\" → Date object\n     * - Other strings: returned as-is\n     *\n     * @example\n     * parsePropValue(\"true\")           // → true\n     * parsePropValue(\"42\")             // → 42\n     * parsePropValue('{\"key\": \"val\"}') // → {key: \"val\"}\n     * parsePropValue('[1, 2, 3]')      // → [1, 2, 3]\n     * parsePropValue(\"hello\")          // → \"hello\"\n     */\n    const parsePropValue = (value) => {\n      try {\n        // Handle non-string values - return as-is\n        if (typeof value !== \"string\") {\n          return value;\n        }\n\n        // Handle special string patterns first\n        if (value === \"true\") return true;\n        if (value === \"false\") return false;\n        if (value === \"null\") return null;\n        if (value === \"undefined\") return undefined;\n\n        // Try to parse as JSON (for objects and arrays)\n        // This handles complex data structures like objects and arrays\n        if (value.startsWith(\"{\") || value.startsWith(\"[\")) {\n          try {\n            return JSON.parse(value);\n          } catch (e) {\n            // Not valid JSON, throw error to trigger error handler\n            throw new Error(`Invalid JSON: ${value}`);\n          }\n        }\n\n        // Handle boolean-like strings (including \"1\" and \"0\")\n        // These are common in HTML attributes and should be treated as booleans\n        if (value === \"1\") return true;\n        if (value === \"0\") return false;\n        if (value === \"\") return true; // Empty string is truthy in HTML attributes\n\n        // Handle numeric strings (after boolean check to avoid conflicts)\n        // This ensures \"0\" is treated as boolean false, not number 0\n        if (!isNaN(value) && value !== \"\" && !isNaN(parseFloat(value))) {\n          return Number(value);\n        }\n\n        // Handle date strings (ISO format)\n        // Recognizes standard ISO date format and converts to Date object\n        if (value.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/)) {\n          const date = new Date(value);\n          if (!isNaN(date.getTime())) {\n            return date;\n          }\n        }\n\n        // Return as string if no other parsing applies\n        // This is the fallback for regular text strings\n        return value;\n      } catch (error) {\n        // Call error handler if provided\n        if (onError) {\n          onError(error, value);\n        }\n        // Fallback to original value to prevent breaking the application\n        return value;\n      }\n    };\n\n    /**\n     * Enhanced props extraction with automatic type detection\n     * @private\n     * @param {HTMLElement} element - The DOM element to extract props from\n     * @returns {Object} Object containing parsed props with appropriate types\n     *\n     * @description\n     * Extracts props from DOM element attributes that start with \":\" and automatically\n     * parses them to their appropriate types. Removes the attributes from the element\n     * after extraction.\n     *\n     * @example\n     * // HTML: <div :name=\"John\" :age=\"30\" :active=\"true\" :data='{\"key\": \"value\"}'></div>\n     * const props = extractProps(element);\n     * // Result: { name: \"John\", age: 30, active: true, data: {key: \"value\"} }\n     */\n    const extractProps = (element) => {\n      const props = {};\n      const attrs = element.attributes;\n\n      // Iterate through attributes in reverse order to handle removal correctly\n      for (let i = attrs.length - 1; i >= 0; i--) {\n        const attr = attrs[i];\n        // Only process attributes that start with \":\" (prop attributes)\n        if (attr.name.startsWith(\":\")) {\n          const propName = attr.name.slice(1); // Remove the \":\" prefix\n          // Parse the value if auto-parsing is enabled, otherwise use as-is\n          const parsedValue = enableAutoParsing\n            ? parsePropValue(attr.value)\n            : attr.value;\n          props[propName] = parsedValue;\n          // Remove the attribute from the DOM element after extraction\n          element.removeAttribute(attr.name);\n        }\n      }\n\n      return props;\n    };\n\n    /**\n     * Creates reactive props using Eleva's signal system\n     * @private\n     * @param {Object} props - The props object to make reactive\n     * @returns {Object} Object containing reactive props (Eleva signals)\n     *\n     * @description\n     * Converts regular prop values into Eleva signals for reactive updates.\n     * If a value is already a signal, it's passed through unchanged.\n     *\n     * @example\n     * const props = { name: \"John\", age: 30, active: true };\n     * const reactiveProps = createReactiveProps(props);\n     * // Result: {\n     * //   name: Signal(\"John\"),\n     * //   age: Signal(30),\n     * //   active: Signal(true)\n     * // }\n     */\n    const createReactiveProps = (props) => {\n      const reactiveProps = {};\n\n      // Convert each prop value to a reactive signal\n      Object.entries(props).forEach(([key, value]) => {\n        // Check if value is already a signal (has 'value' and 'watch' properties)\n        if (\n          value &&\n          typeof value === \"object\" &&\n          \"value\" in value &&\n          \"watch\" in value\n        ) {\n          // Value is already a signal, use it as-is\n          reactiveProps[key] = value;\n        } else {\n          // Create new signal for the prop value to make it reactive\n          reactiveProps[key] = new eleva.signal(value);\n        }\n      });\n\n      return reactiveProps;\n    };\n\n    // Override Eleva's internal _extractProps method with our enhanced version\n    eleva._extractProps = extractProps;\n\n    // Override Eleva's mount method to apply enhanced prop handling\n    const originalMount = eleva.mount;\n    eleva.mount = async (container, compName, props = {}) => {\n      // Create reactive props if reactivity is enabled\n      const enhancedProps = enableReactivity\n        ? createReactiveProps(props)\n        : props;\n\n      // Call the original mount method with enhanced props\n      return await originalMount.call(\n        eleva,\n        container,\n        compName,\n        enhancedProps\n      );\n    };\n\n    // Override Eleva's _mountComponents method to enable signal reference passing\n    const originalMountComponents = eleva._mountComponents;\n\n    // Cache to store parent contexts by container element\n    const parentContextCache = new WeakMap();\n    // Store child instances that need signal linking\n    const pendingSignalLinks = new Set();\n\n    eleva._mountComponents = async (container, children, childInstances) => {\n      for (const [selector, component] of Object.entries(children)) {\n        if (!selector) continue;\n        for (const el of container.querySelectorAll(selector)) {\n          if (!(el instanceof HTMLElement)) continue;\n\n          // Extract props from DOM attributes\n          const extractedProps = eleva._extractProps(el);\n\n          // Get parent context to check for signal references\n          let enhancedProps = extractedProps;\n\n          // Try to find parent context by looking up the DOM tree\n          let parentContext = parentContextCache.get(container);\n          if (!parentContext) {\n            let currentElement = container;\n            while (currentElement && !parentContext) {\n              if (\n                currentElement._eleva_instance &&\n                currentElement._eleva_instance.data\n              ) {\n                parentContext = currentElement._eleva_instance.data;\n                // Cache the parent context for future use\n                parentContextCache.set(container, parentContext);\n                break;\n              }\n              currentElement = currentElement.parentElement;\n            }\n          }\n\n          if (enableReactivity && parentContext) {\n            const signalProps = {};\n\n            // Check each extracted prop to see if there's a matching signal in parent context\n            Object.keys(extractedProps).forEach((propName) => {\n              if (\n                parentContext[propName] &&\n                parentContext[propName] instanceof eleva.signal\n              ) {\n                // Found a signal in parent context with the same name as the prop\n                // Pass the signal reference instead of creating a new one\n                signalProps[propName] = parentContext[propName];\n              }\n            });\n\n            // Merge signal props with regular props (signal props take precedence)\n            enhancedProps = {\n              ...extractedProps,\n              ...signalProps,\n            };\n          }\n\n          // Create reactive props for non-signal props only\n          let finalProps = enhancedProps;\n          if (enableReactivity) {\n            // Only create reactive props for values that aren't already signals\n            const nonSignalProps = {};\n            Object.entries(enhancedProps).forEach(([key, value]) => {\n              if (\n                !(\n                  value &&\n                  typeof value === \"object\" &&\n                  \"value\" in value &&\n                  \"watch\" in value\n                )\n              ) {\n                // This is not a signal, create a reactive prop for it\n                nonSignalProps[key] = value;\n              }\n            });\n\n            // Create reactive props only for non-signal values\n            const reactiveNonSignalProps = createReactiveProps(nonSignalProps);\n\n            // Merge signal props with reactive non-signal props\n            finalProps = {\n              ...reactiveNonSignalProps,\n              ...enhancedProps, // Signal props take precedence\n            };\n          }\n\n          /** @type {MountResult} */\n          const instance = await eleva.mount(el, component, finalProps);\n          if (instance && !childInstances.includes(instance)) {\n            childInstances.push(instance);\n\n            // If we have extracted props but no parent context yet, mark for later signal linking\n            if (\n              enableReactivity &&\n              Object.keys(extractedProps).length > 0 &&\n              !parentContext\n            ) {\n              pendingSignalLinks.add({\n                instance,\n                extractedProps,\n                container,\n                component,\n              });\n            }\n          }\n        }\n      }\n\n      // After mounting all children, try to link signals for pending instances\n      if (enableReactivity && pendingSignalLinks.size > 0) {\n        for (const pending of pendingSignalLinks) {\n          const { instance, extractedProps, container, component } = pending;\n\n          // Try to find parent context again\n          let parentContext = parentContextCache.get(container);\n          if (!parentContext) {\n            let currentElement = container;\n            while (currentElement && !parentContext) {\n              if (\n                currentElement._eleva_instance &&\n                currentElement._eleva_instance.data\n              ) {\n                parentContext = currentElement._eleva_instance.data;\n                parentContextCache.set(container, parentContext);\n                break;\n              }\n              currentElement = currentElement.parentElement;\n            }\n          }\n\n          if (parentContext) {\n            const signalProps = {};\n\n            // Check each extracted prop to see if there's a matching signal in parent context\n            Object.keys(extractedProps).forEach((propName) => {\n              if (\n                parentContext[propName] &&\n                parentContext[propName] instanceof eleva.signal\n              ) {\n                signalProps[propName] = parentContext[propName];\n              }\n            });\n\n            // Update the child instance's data with signal references\n            if (Object.keys(signalProps).length > 0) {\n              Object.assign(instance.data, signalProps);\n\n              // Set up signal watchers for the newly linked signals\n              Object.keys(signalProps).forEach((propName) => {\n                const signal = signalProps[propName];\n                if (signal && typeof signal.watch === \"function\") {\n                  signal.watch((newValue) => {\n                    // Trigger a re-render of the child component when the signal changes\n                    const childComponent =\n                      eleva._components.get(component) || component;\n                    if (childComponent && childComponent.template) {\n                      const templateResult =\n                        typeof childComponent.template === \"function\"\n                          ? childComponent.template(instance.data)\n                          : childComponent.template;\n                      const newHtml = TemplateEngine.parse(\n                        templateResult,\n                        instance.data\n                      );\n                      eleva.renderer.patchDOM(instance.container, newHtml);\n                    }\n                  });\n                }\n              });\n\n              // Initial re-render to show the correct signal values\n              const childComponent =\n                eleva._components.get(component) || component;\n              if (childComponent && childComponent.template) {\n                const templateResult =\n                  typeof childComponent.template === \"function\"\n                    ? childComponent.template(instance.data)\n                    : childComponent.template;\n                const newHtml = TemplateEngine.parse(\n                  templateResult,\n                  instance.data\n                );\n                eleva.renderer.patchDOM(instance.container, newHtml);\n              }\n            }\n\n            // Remove from pending list\n            pendingSignalLinks.delete(pending);\n          }\n        }\n      }\n    };\n\n    /**\n     * Expose utility methods on the Eleva instance\n     * @namespace eleva.props\n     */\n    eleva.props = {\n      /**\n       * Parse a single value with automatic type detection\n       * @param {any} value - The value to parse\n       * @returns {any} The parsed value with appropriate type\n       *\n       * @example\n       * app.props.parse(\"42\")             // → 42\n       * app.props.parse(\"true\")           // → true\n       * app.props.parse('{\"key\": \"val\"}') // → {key: \"val\"}\n       */\n      parse: (value) => {\n        // Return value as-is if auto parsing is disabled\n        if (!enableAutoParsing) {\n          return value;\n        }\n        // Use our enhanced parsing function\n        return parsePropValue(value);\n      },\n\n      /**\n       * Detect the type of a value\n       * @param {any} value - The value to detect type for\n       * @returns {string} The detected type\n       *\n       * @example\n       * app.props.detectType(\"hello\")     // → \"string\"\n       * app.props.detectType(42)          // → \"number\"\n       * app.props.detectType([1, 2, 3])   // → \"array\"\n       */\n      detectType,\n    };\n\n    // Store original methods for uninstall\n    eleva._originalExtractProps = eleva._extractProps;\n    eleva._originalMount = originalMount;\n    eleva._originalMountComponents = originalMountComponents;\n  },\n\n  /**\n   * Uninstalls the plugin from the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   *\n   * @description\n   * Restores the original Eleva methods and removes all plugin-specific\n   * functionality. This method should be called when the plugin is no\n   * longer needed.\n   *\n   * @example\n   * // Uninstall the plugin\n   * PropsPlugin.uninstall(app);\n   */\n  uninstall(eleva) {\n    // Restore original _extractProps method\n    if (eleva._originalExtractProps) {\n      eleva._extractProps = eleva._originalExtractProps;\n      delete eleva._originalExtractProps;\n    }\n\n    // Restore original mount method\n    if (eleva._originalMount) {\n      eleva.mount = eleva._originalMount;\n      delete eleva._originalMount;\n    }\n\n    // Restore original _mountComponents method\n    if (eleva._originalMountComponents) {\n      eleva._mountComponents = eleva._originalMountComponents;\n      delete eleva._originalMountComponents;\n    }\n\n    // Remove plugin utility methods\n    if (eleva.props) {\n      delete eleva.props;\n    }\n  },\n};\n","\"use strict\";\n\n/**\n * @class 🏪 StorePlugin\n * @classdesc A powerful reactive state management plugin for Eleva.js that enables sharing\n * reactive data across the entire application. The Store plugin provides a centralized,\n * reactive data store that can be accessed from any component's setup function.\n *\n * Core Features:\n * - Centralized reactive state management using Eleva's signal system\n * - Global state accessibility through component setup functions\n * - Namespace support for organizing store modules\n * - Built-in persistence with localStorage/sessionStorage support\n * - Action-based state mutations with validation\n * - Subscription system for reactive updates\n * - DevTools integration for debugging\n * - Plugin architecture for extensibility\n *\n * @example\n * // Install the plugin\n * const app = new Eleva(\"myApp\");\n * app.use(StorePlugin, {\n *   state: {\n *     user: { name: \"John\", email: \"john@example.com\" },\n *     counter: 0,\n *     todos: []\n *   },\n *   actions: {\n *     increment: (state) => state.counter.value++,\n *     addTodo: (state, todo) => state.todos.value.push(todo),\n *     setUser: (state, user) => state.user.value = user\n *   },\n *   persistence: {\n *     enabled: true,\n *     key: \"myApp-store\",\n *     storage: \"localStorage\"\n *   }\n * });\n *\n * // Use store in components\n * app.component(\"Counter\", {\n *   setup({ store }) {\n *     return {\n *       count: store.state.counter,\n *       increment: () => store.dispatch(\"increment\"),\n *       user: store.state.user\n *     };\n *   },\n *   template: (ctx) => `\n *     <div>\n *       <p>Hello ${ctx.user.value.name}!</p>\n *       <p>Count: ${ctx.count.value}</p>\n *       <button onclick=\"ctx.increment()\">+</button>\n *     </div>\n *   `\n * });\n */\nexport const StorePlugin = {\n  /**\n   * Unique identifier for the plugin\n   * @type {string}\n   */\n  name: \"store\",\n\n  /**\n   * Plugin version\n   * @type {string}\n   */\n  version: \"1.0.0-rc.1\",\n\n  /**\n   * Plugin description\n   * @type {string}\n   */\n  description:\n    \"Reactive state management for sharing data across the entire Eleva application\",\n\n  /**\n   * Installs the plugin into the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   * @param {Object} options - Plugin configuration options\n   * @param {Object} [options.state={}] - Initial state object\n   * @param {Object} [options.actions={}] - Action functions for state mutations\n   * @param {Object} [options.namespaces={}] - Namespaced modules for organizing store\n   * @param {Object} [options.persistence] - Persistence configuration\n   * @param {boolean} [options.persistence.enabled=false] - Enable state persistence\n   * @param {string} [options.persistence.key=\"eleva-store\"] - Storage key\n   * @param {\"localStorage\" | \"sessionStorage\"} [options.persistence.storage=\"localStorage\"] - Storage type\n   * @param {Array<string>} [options.persistence.include] - State keys to persist (if not provided, all state is persisted)\n   * @param {Array<string>} [options.persistence.exclude] - State keys to exclude from persistence\n   * @param {boolean} [options.devTools=false] - Enable development tools integration\n   * @param {Function} [options.onError=null] - Error handler function\n   *\n   * @example\n   * // Basic installation\n   * app.use(StorePlugin, {\n   *   state: { count: 0, user: null },\n   *   actions: {\n   *     increment: (state) => state.count.value++,\n   *     setUser: (state, user) => state.user.value = user\n   *   }\n   * });\n   *\n   * // Advanced installation with persistence and namespaces\n   * app.use(StorePlugin, {\n   *   state: { theme: \"light\" },\n   *   namespaces: {\n   *     auth: {\n   *       state: { user: null, token: null },\n   *       actions: {\n   *         login: (state, { user, token }) => {\n   *           state.user.value = user;\n   *           state.token.value = token;\n   *         },\n   *         logout: (state) => {\n   *           state.user.value = null;\n   *           state.token.value = null;\n   *         }\n   *       }\n   *     }\n   *   },\n   *   persistence: {\n   *     enabled: true,\n   *     include: [\"theme\", \"auth.user\"]\n   *   }\n   * });\n   */\n  install(eleva, options = {}) {\n    const {\n      state = {},\n      actions = {},\n      namespaces = {},\n      persistence = {},\n      devTools = false,\n      onError = null,\n    } = options;\n\n    /**\n     * Store instance that manages all state and provides the API\n     * @private\n     */\n    class Store {\n      constructor() {\n        this.state = {};\n        this.actions = {};\n        this.subscribers = new Set();\n        this.mutations = [];\n        this.persistence = {\n          enabled: false,\n          key: \"eleva-store\",\n          storage: \"localStorage\",\n          include: null,\n          exclude: null,\n          ...persistence,\n        };\n        this.devTools = devTools;\n        this.onError = onError;\n\n        this._initializeState(state, actions);\n        this._initializeNamespaces(namespaces);\n        this._loadPersistedState();\n        this._setupDevTools();\n      }\n\n      /**\n       * Initializes the root state and actions\n       * @private\n       */\n      _initializeState(initialState, initialActions) {\n        // Create reactive signals for each state property\n        Object.entries(initialState).forEach(([key, value]) => {\n          this.state[key] = new eleva.signal(value);\n        });\n\n        // Set up actions\n        this.actions = { ...initialActions };\n      }\n\n      /**\n       * Initializes namespaced modules\n       * @private\n       */\n      _initializeNamespaces(namespaces) {\n        Object.entries(namespaces).forEach(([namespace, module]) => {\n          const { state: moduleState = {}, actions: moduleActions = {} } =\n            module;\n\n          // Create namespace object if it doesn't exist\n          if (!this.state[namespace]) {\n            this.state[namespace] = {};\n          }\n          if (!this.actions[namespace]) {\n            this.actions[namespace] = {};\n          }\n\n          // Initialize namespaced state\n          Object.entries(moduleState).forEach(([key, value]) => {\n            this.state[namespace][key] = new eleva.signal(value);\n          });\n\n          // Set up namespaced actions\n          this.actions[namespace] = { ...moduleActions };\n        });\n      }\n\n      /**\n       * Loads persisted state from storage\n       * @private\n       */\n      _loadPersistedState() {\n        if (!this.persistence.enabled || typeof window === \"undefined\") {\n          return;\n        }\n\n        try {\n          const storage = window[this.persistence.storage];\n          const persistedData = storage.getItem(this.persistence.key);\n\n          if (persistedData) {\n            const data = JSON.parse(persistedData);\n            this._applyPersistedData(data);\n          }\n        } catch (error) {\n          if (this.onError) {\n            this.onError(error, \"Failed to load persisted state\");\n          } else {\n            console.warn(\n              \"[StorePlugin] Failed to load persisted state:\",\n              error\n            );\n          }\n        }\n      }\n\n      /**\n       * Applies persisted data to the current state\n       * @private\n       */\n      _applyPersistedData(data, currentState = this.state, path = \"\") {\n        Object.entries(data).forEach(([key, value]) => {\n          const fullPath = path ? `${path}.${key}` : key;\n\n          if (this._shouldPersist(fullPath)) {\n            if (\n              currentState[key] &&\n              typeof currentState[key] === \"object\" &&\n              \"value\" in currentState[key]\n            ) {\n              // This is a signal, update its value\n              currentState[key].value = value;\n            } else if (\n              typeof value === \"object\" &&\n              value !== null &&\n              currentState[key]\n            ) {\n              // This is a nested object, recurse\n              this._applyPersistedData(value, currentState[key], fullPath);\n            }\n          }\n        });\n      }\n\n      /**\n       * Determines if a state path should be persisted\n       * @private\n       */\n      _shouldPersist(path) {\n        const { include, exclude } = this.persistence;\n\n        if (include && include.length > 0) {\n          return include.some((includePath) => path.startsWith(includePath));\n        }\n\n        if (exclude && exclude.length > 0) {\n          return !exclude.some((excludePath) => path.startsWith(excludePath));\n        }\n\n        return true;\n      }\n\n      /**\n       * Saves current state to storage\n       * @private\n       */\n      _saveState() {\n        if (!this.persistence.enabled || typeof window === \"undefined\") {\n          return;\n        }\n\n        try {\n          const storage = window[this.persistence.storage];\n          const dataToSave = this._extractPersistedData();\n          storage.setItem(this.persistence.key, JSON.stringify(dataToSave));\n        } catch (error) {\n          if (this.onError) {\n            this.onError(error, \"Failed to save state\");\n          } else {\n            console.warn(\"[StorePlugin] Failed to save state:\", error);\n          }\n        }\n      }\n\n      /**\n       * Extracts data that should be persisted\n       * @private\n       */\n      _extractPersistedData(currentState = this.state, path = \"\") {\n        const result = {};\n\n        Object.entries(currentState).forEach(([key, value]) => {\n          const fullPath = path ? `${path}.${key}` : key;\n\n          if (this._shouldPersist(fullPath)) {\n            if (value && typeof value === \"object\" && \"value\" in value) {\n              // This is a signal, extract its value\n              result[key] = value.value;\n            } else if (typeof value === \"object\" && value !== null) {\n              // This is a nested object, recurse\n              const nestedData = this._extractPersistedData(value, fullPath);\n              if (Object.keys(nestedData).length > 0) {\n                result[key] = nestedData;\n              }\n            }\n          }\n        });\n\n        return result;\n      }\n\n      /**\n       * Sets up development tools integration\n       * @private\n       */\n      _setupDevTools() {\n        if (\n          !this.devTools ||\n          typeof window === \"undefined\" ||\n          !window.__ELEVA_DEVTOOLS__\n        ) {\n          return;\n        }\n\n        window.__ELEVA_DEVTOOLS__.registerStore(this);\n      }\n\n      /**\n       * Dispatches an action to mutate the state\n       * @param {string} actionName - The name of the action to dispatch (supports namespaced actions like \"auth.login\")\n       * @param {any} payload - The payload to pass to the action\n       * @returns {Promise<any>} The result of the action\n       */\n      async dispatch(actionName, payload) {\n        try {\n          const action = this._getAction(actionName);\n\n          if (!action) {\n            const error = new Error(`Action \"${actionName}\" not found`);\n            if (this.onError) {\n              this.onError(error, actionName);\n            }\n            throw error;\n          }\n\n          const mutation = {\n            type: actionName,\n            payload,\n            timestamp: Date.now(),\n          };\n\n          // Record mutation for devtools\n          this.mutations.push(mutation);\n          if (this.mutations.length > 100) {\n            this.mutations.shift(); // Keep only last 100 mutations\n          }\n\n          // Execute the action\n          const result = await action.call(null, this.state, payload);\n\n          // Save state if persistence is enabled\n          this._saveState();\n\n          // Notify subscribers\n          this.subscribers.forEach((callback) => {\n            try {\n              callback(mutation, this.state);\n            } catch (error) {\n              if (this.onError) {\n                this.onError(error, \"Subscriber callback failed\");\n              }\n            }\n          });\n\n          // Notify devtools\n          if (\n            this.devTools &&\n            typeof window !== \"undefined\" &&\n            window.__ELEVA_DEVTOOLS__\n          ) {\n            window.__ELEVA_DEVTOOLS__.notifyMutation(mutation, this.state);\n          }\n\n          return result;\n        } catch (error) {\n          if (this.onError) {\n            this.onError(error, `Action dispatch failed: ${actionName}`);\n          }\n          throw error;\n        }\n      }\n\n      /**\n       * Gets an action by name (supports namespaced actions)\n       * @private\n       */\n      _getAction(actionName) {\n        const parts = actionName.split(\".\");\n        let current = this.actions;\n\n        for (const part of parts) {\n          if (current[part] === undefined) {\n            return null;\n          }\n          current = current[part];\n        }\n\n        return typeof current === \"function\" ? current : null;\n      }\n\n      /**\n       * Subscribes to store mutations\n       * @param {Function} callback - Callback function to call on mutations\n       * @returns {Function} Unsubscribe function\n       */\n      subscribe(callback) {\n        if (typeof callback !== \"function\") {\n          throw new Error(\"Subscribe callback must be a function\");\n        }\n\n        this.subscribers.add(callback);\n\n        // Return unsubscribe function\n        return () => {\n          this.subscribers.delete(callback);\n        };\n      }\n\n      /**\n       * Gets a deep copy of the current state values (not signals)\n       * @returns {Object} The current state values\n       */\n      getState() {\n        return this._extractPersistedData();\n      }\n\n      /**\n       * Replaces the entire state (useful for testing or state hydration)\n       * @param {Object} newState - The new state object\n       */\n      replaceState(newState) {\n        this._applyPersistedData(newState);\n        this._saveState();\n      }\n\n      /**\n       * Clears persisted state from storage\n       */\n      clearPersistedState() {\n        if (!this.persistence.enabled || typeof window === \"undefined\") {\n          return;\n        }\n\n        try {\n          const storage = window[this.persistence.storage];\n          storage.removeItem(this.persistence.key);\n        } catch (error) {\n          if (this.onError) {\n            this.onError(error, \"Failed to clear persisted state\");\n          }\n        }\n      }\n\n      /**\n       * Registers a new namespaced module at runtime\n       * @param {string} namespace - The namespace for the module\n       * @param {Object} module - The module definition\n       * @param {Object} module.state - The module's initial state\n       * @param {Object} module.actions - The module's actions\n       */\n      registerModule(namespace, module) {\n        if (this.state[namespace] || this.actions[namespace]) {\n          console.warn(`[StorePlugin] Module \"${namespace}\" already exists`);\n          return;\n        }\n\n        // Initialize the module\n        this.state[namespace] = {};\n        this.actions[namespace] = {};\n\n        const namespaces = { [namespace]: module };\n        this._initializeNamespaces(namespaces);\n\n        this._saveState();\n      }\n\n      /**\n       * Unregisters a namespaced module\n       * @param {string} namespace - The namespace to unregister\n       */\n      unregisterModule(namespace) {\n        if (!this.state[namespace] && !this.actions[namespace]) {\n          console.warn(`[StorePlugin] Module \"${namespace}\" does not exist`);\n          return;\n        }\n\n        delete this.state[namespace];\n        delete this.actions[namespace];\n        this._saveState();\n      }\n\n      /**\n       * Creates a new reactive state property at runtime\n       * @param {string} key - The state key\n       * @param {*} initialValue - The initial value\n       * @returns {Object} The created signal\n       */\n      createState(key, initialValue) {\n        if (this.state[key]) {\n          return this.state[key]; // Return existing state\n        }\n\n        this.state[key] = new eleva.signal(initialValue);\n        this._saveState();\n        return this.state[key];\n      }\n\n      /**\n       * Creates a new action at runtime\n       * @param {string} name - The action name\n       * @param {Function} actionFn - The action function\n       */\n      createAction(name, actionFn) {\n        if (typeof actionFn !== \"function\") {\n          throw new Error(\"Action must be a function\");\n        }\n\n        this.actions[name] = actionFn;\n      }\n    }\n\n    // Create the store instance\n    const store = new Store();\n\n    // Store the original mount method to override it\n    const originalMount = eleva.mount;\n\n    /**\n     * Override the mount method to inject store context into components\n     */\n    eleva.mount = async (container, compName, props = {}) => {\n      // Get the component definition\n      const componentDef =\n        typeof compName === \"string\"\n          ? eleva._components.get(compName) || compName\n          : compName;\n\n      if (!componentDef) {\n        return await originalMount.call(eleva, container, compName, props);\n      }\n\n      // Create a wrapped component that injects store into setup\n      const wrappedComponent = {\n        ...componentDef,\n        async setup(ctx) {\n          // Inject store into the context with enhanced API\n          ctx.store = {\n            // Core store functionality\n            state: store.state,\n            dispatch: store.dispatch.bind(store),\n            subscribe: store.subscribe.bind(store),\n            getState: store.getState.bind(store),\n\n            // Module management\n            registerModule: store.registerModule.bind(store),\n            unregisterModule: store.unregisterModule.bind(store),\n\n            // Utilities for dynamic state/action creation\n            createState: store.createState.bind(store),\n            createAction: store.createAction.bind(store),\n\n            // Access to signal constructor for manual state creation\n            signal: eleva.signal,\n          };\n\n          // Call original setup if it exists\n          const originalSetup = componentDef.setup;\n          const result = originalSetup ? await originalSetup(ctx) : {};\n\n          return result;\n        },\n      };\n\n      // Call original mount with wrapped component\n      return await originalMount.call(\n        eleva,\n        container,\n        wrappedComponent,\n        props\n      );\n    };\n\n    // Override _mountComponents to ensure child components also get store context\n    const originalMountComponents = eleva._mountComponents;\n    eleva._mountComponents = async (container, children, childInstances) => {\n      // Create wrapped children with store injection\n      const wrappedChildren = {};\n\n      for (const [selector, childComponent] of Object.entries(children)) {\n        const componentDef =\n          typeof childComponent === \"string\"\n            ? eleva._components.get(childComponent) || childComponent\n            : childComponent;\n\n        if (componentDef && typeof componentDef === \"object\") {\n          wrappedChildren[selector] = {\n            ...componentDef,\n            async setup(ctx) {\n              // Inject store into the context with enhanced API\n              ctx.store = {\n                // Core store functionality\n                state: store.state,\n                dispatch: store.dispatch.bind(store),\n                subscribe: store.subscribe.bind(store),\n                getState: store.getState.bind(store),\n\n                // Module management\n                registerModule: store.registerModule.bind(store),\n                unregisterModule: store.unregisterModule.bind(store),\n\n                // Utilities for dynamic state/action creation\n                createState: store.createState.bind(store),\n                createAction: store.createAction.bind(store),\n\n                // Access to signal constructor for manual state creation\n                signal: eleva.signal,\n              };\n\n              // Call original setup if it exists\n              const originalSetup = componentDef.setup;\n              const result = originalSetup ? await originalSetup(ctx) : {};\n\n              return result;\n            },\n          };\n        } else {\n          wrappedChildren[selector] = childComponent;\n        }\n      }\n\n      // Call original _mountComponents with wrapped children\n      return await originalMountComponents.call(\n        eleva,\n        container,\n        wrappedChildren,\n        childInstances\n      );\n    };\n\n    // Expose store instance and utilities on the Eleva instance\n    eleva.store = store;\n\n    /**\n     * Expose utility methods on the Eleva instance\n     * @namespace eleva.store\n     */\n    eleva.createAction = (name, actionFn) => {\n      store.actions[name] = actionFn;\n    };\n\n    eleva.dispatch = (actionName, payload) => {\n      return store.dispatch(actionName, payload);\n    };\n\n    eleva.getState = () => {\n      return store.getState();\n    };\n\n    eleva.subscribe = (callback) => {\n      return store.subscribe(callback);\n    };\n\n    // Store original methods for cleanup\n    eleva._originalMount = originalMount;\n    eleva._originalMountComponents = originalMountComponents;\n  },\n\n  /**\n   * Uninstalls the plugin from the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   *\n   * @description\n   * Restores the original Eleva methods and removes all plugin-specific\n   * functionality. This method should be called when the plugin is no\n   * longer needed.\n   *\n   * @example\n   * // Uninstall the plugin\n   * StorePlugin.uninstall(app);\n   */\n  uninstall(eleva) {\n    // Restore original mount method\n    if (eleva._originalMount) {\n      eleva.mount = eleva._originalMount;\n      delete eleva._originalMount;\n    }\n\n    // Restore original _mountComponents method\n    if (eleva._originalMountComponents) {\n      eleva._mountComponents = eleva._originalMountComponents;\n      delete eleva._originalMountComponents;\n    }\n\n    // Remove store instance and utility methods\n    if (eleva.store) {\n      delete eleva.store;\n    }\n    if (eleva.createAction) {\n      delete eleva.createAction;\n    }\n    if (eleva.dispatch) {\n      delete eleva.dispatch;\n    }\n    if (eleva.getState) {\n      delete eleva.getState;\n    }\n    if (eleva.subscribe) {\n      delete eleva.subscribe;\n    }\n  },\n};\n"],"names":["CAMEL_RE","AttrPlugin","name","version","description","install","eleva","options","enableAria","enableData","enableBoolean","enableDynamic","updateAttributes","oldEl","newEl","oldAttrs","attributes","newAttrs","i","length","value","startsWith","getAttribute","prop","slice","replace","_","l","toUpperCase","setAttribute","dataset","Object","getOwnPropertyDescriptor","getPrototypeOf","elementProps","getOwnPropertyNames","matchingProp","find","p","toLowerCase","includes","descriptor","hasProperty","isBoolean","get","call","boolValue","removeAttribute","hasAttribute","renderer","originalPatchNode","_patchNode","_originalPatchNode","oldNode","newNode","_eleva_instance","_isSameNode","replaceWith","cloneNode","nodeType","Node","ELEMENT_NODE","_diff","TEXT_NODE","nodeValue","plugins","Map","set","updateElementAttributes","uninstall","delete","CoreErrorHandler","handle","error","context","details","message","formattedError","Error","originalError","console","warn","log","Router","constructor","_extends","mode","queryParam","viewSelector","routes","_processRoutes","emitter","isStarted","_isNavigating","eventListeners","currentRoute","signal","previousRoute","currentParams","currentQuery","currentLayout","currentView","errorHandler","_validateOptions","processedRoutes","route","push","segments","_parsePathIntoSegments","path","normalizedPath","split","filter","Boolean","map","segment","paramName","substring","type","_findViewElement","container","selector","querySelector","start","window","document","mount","mountSelector","handler","_handleRouteChange","addEventListener","removeEventListener","destroy","plugin","values","forEach","cleanup","unmount","navigate","location","params","target","_buildPath","query","keys","queryString","URLSearchParams","toString","_isSameRoute","navigationSuccessful","_proceedWithNavigation","state","historyMethod","newUrl","pathname","search","history","replaceState","hash","url","_buildQueryUrl","queueMicrotask","emit","urlParams","current","targetPath","targetQuery","_parseQuery","JSON","stringify","result","key","entries","encodedValue","encodeURIComponent","String","RegExp","from","toLocation","_getCurrentLocation","fullUrl","fullPath","toMatch","_matchRoute","notFoundRoute","pathMatch","to","meta","matched","canNavigate","_runGuards","layoutComponent","pageComponent","_resolveComponents","toLayout","layout","globalLayout","fromLayout","tryUnmount","instance","afterLeave","_render","afterEnter","guards","onBeforeEach","beforeLeave","beforeEnter","guard","_resolveStringComponent","def","componentDef","_components","componentName","availableComponents","Array","_resolveFunctionComponent","funcStr","isAsyncImport","default","function","_validateComponentDefinition","definition","template","_resolveComponent","undefined","effectiveLayout","Promise","all","component","mountEl","layoutInstance","_wrapComponentWithChildren","viewEl","viewInstance","_createRouteGetter","property","defaultValue","_this$currentRoute$va","_this$currentRoute$va2","_wrapComponent","originalSetup","setup","self","ctx","router","bind","previous","href","wrappedComponent","children","wrappedChildren","childComponent","pathSegments","isMatch","routeSegment","pathSegment","decodeURIComponent","onAfterEnter","hook","on","onAfterLeave","onAfterEach","onError","use","has","existingPlugin","getPlugins","getPlugin","removePlugin","setErrorHandler","RouterPlugin","isArray","register","Math","random","autoStart","getCurrentRoute","getRouteParams","getRouteQuery","TemplateEngine","parse","data","expressionPattern","expression","evaluate","Function","_unused","PropsPlugin","enableAutoParsing","enableReactivity","detectType","Date","Set","parsePropValue","e","isNaN","parseFloat","Number","match","date","getTime","extractProps","element","props","attrs","attr","propName","parsedValue","createReactiveProps","reactiveProps","_extractProps","originalMount","compName","enhancedProps","originalMountComponents","_mountComponents","parentContextCache","WeakMap","pendingSignalLinks","childInstances","el","querySelectorAll","HTMLElement","extractedProps","parentContext","currentElement","parentElement","signalProps","finalProps","nonSignalProps","reactiveNonSignalProps","add","size","pending","assign","watch","newValue","templateResult","newHtml","patchDOM","_originalExtractProps","_originalMount","_originalMountComponents","StorePlugin","actions","namespaces","persistence","devTools","Store","subscribers","mutations","enabled","storage","include","exclude","_initializeState","_initializeNamespaces","_loadPersistedState","_setupDevTools","initialState","initialActions","namespace","module","moduleState","moduleActions","persistedData","getItem","_applyPersistedData","currentState","_shouldPersist","some","includePath","excludePath","_saveState","dataToSave","_extractPersistedData","setItem","nestedData","__ELEVA_DEVTOOLS__","registerStore","dispatch","actionName","payload","action","_getAction","mutation","timestamp","now","shift","callback","notifyMutation","parts","part","subscribe","getState","newState","clearPersistedState","removeItem","registerModule","unregisterModule","createState","initialValue","createAction","actionFn","store"],"mappings":"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AU,EAAE;MACxC,IAAI;AACFC,QAAAA,MAAM,CAACD,OAAO,CAAC,IAAI,CAAC;MACtB,CAAC,CAAC,OAAO3D,KAAK,EAAE;QACd,IAAI,CAAC6B,YAAY,CAACpB,GAAG,CAAC,UAAUhF,IAAI,CAAA,eAAA,CAAiB,EAAEuE,KAAK,CAAC;AAC/D,MAAA;AACF,IAAA;AAEA,IAAA,OAAO,IAAI,CAACR,OAAO,CAACK,MAAM,CAACpE,IAAI,CAAC;AAClC,EAAA;;AAEA;AACF;AACA;AACA;EACE2Q,eAAeA,CAACvK,YAAY,EAAE;IAC5B,IACEA,YAAY,IACZ,OAAOA,YAAY,CAAC9B,MAAM,KAAK,UAAU,IACzC,OAAO8B,YAAY,CAACrB,IAAI,KAAK,UAAU,IACvC,OAAOqB,YAAY,CAACpB,GAAG,KAAK,UAAU,EACtC;MACA,IAAI,CAACoB,YAAY,GAAGA,YAAY;AAClC,IAAA,CAAC,MAAM;AACLtB,MAAAA,OAAO,CAACC,IAAI,CACV,wFACF,CAAC;AACH,IAAA;AACF,EAAA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM6L,YAAY,GAAG;AAC1B;AACF;AACA;AACA;AACE5Q,EAAAA,IAAI,EAAE,QAAQ;AAEd;AACF;AACA;AACA;AACEC,EAAAA,OAAO,EAAE,YAAY;AAErB;AACF;AACA;AACA;AACEC,EAAAA,WAAW,EAAE,4CAA4C;AAEzD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,OAAOA,CAACC,KAAK,EAAEC,OAAO,GAAG,EAAE,EAAE;AAC3B,IAAA,IA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aAAa;IACjDhT,KAAK,CAAC+U,cAAc,GAAG9B,aAAa;IACpCjT,KAAK,CAACgV,wBAAwB,GAAG5B,uBAAuB;EAC1D,CAAC;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACErP,SAASA,CAAC/D,KAAK,EAAE;AACf;IACA,IAAIA,KAAK,CAAC8U,qBAAqB,EAAE;AAC/B9U,MAAAA,KAAK,CAACgT,aAAa,GAAGhT,KAAK,CAAC8U,qBAAqB;MACjD,OAAO9U,KAAK,CAAC8U,qBAAqB;AACpC,IAAA;;AAEA;IACA,IAAI9U,KAAK,CAAC+U,cAAc,EAAE;AACxB/U,MAAAA,KAAK,CAACwH,KAAK,GAAGxH,KAAK,CAAC+U,cAAc;MAClC,OAAO/U,KAAK,CAAC+U,cAAc;AAC7B,IAAA;;AAEA;IACA,IAAI/U,KAAK,CAACgV,wBAAwB,EAAE;AAClChV,MAAAA,KAAK,CAACqT,gBAAgB,GAAGrT,KAAK,CAACgV,wBAAwB;MACvD,OAAOhV,KAAK,CAACgV,wBAAwB;AACvC,IAAA;;AAEA;IACA,IAAIhV,KAAK,CAACyS,KAAK,EAAE;MACf,OAAOzS,KAAK,CAACyS,KAAK;AACpB,IAAA;AACF,EAAA;AACF;;ACphBO,MAAMwC,WAAW,GAAG;AACzB;AACF;AACA;AACA;AACErV,EAAAA,IAAI,EAAE,OAAO;AAEb;AACF;AACA;AACA;AACEC,EAAAA,OAAO,EAAE,YAAY;AAErB;AACF;AACA;AACA;AACEC,EAAAA,WAAW,EACT,gFAAgF;AAElF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,OAAOA,CAACC,KAAK,EAAEC,OAAO,GAAG,EAAE,EAAE;IAC3B,MAA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"}