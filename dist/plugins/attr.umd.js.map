{"version":3,"file":"attr.umd.js","sources":["../../src/plugins/Attr.js"],"sourcesContent":["\"use strict\";\n\n/**\n * A regular expression to match hyphenated lowercase letters.\n * @private\n * @type {RegExp}\n */\nconst CAMEL_RE = /-([a-z])/g;\n\n/**\n * @class ðŸŽ¯ AttrPlugin\n * @classdesc A plugin that provides advanced attribute handling for Eleva components.\n * This plugin extends the renderer with sophisticated attribute processing including:\n * - ARIA attribute handling with proper property mapping\n * - Data attribute management\n * - Boolean attribute processing\n * - Dynamic property detection and mapping\n * - Attribute cleanup and removal\n *\n * @example\n * // Install the plugin\n * const app = new Eleva(\"myApp\");\n * app.use(AttrPlugin);\n *\n * // Use advanced attributes in components\n * app.component(\"myComponent\", {\n *   template: (ctx) => `\n *     <button\n *       aria-expanded=\"${ctx.isExpanded.value}\"\n *       data-user-id=\"${ctx.userId.value}\"\n *       disabled=\"${ctx.isLoading.value}\"\n *       class=\"btn ${ctx.variant.value}\"\n *     >\n *       ${ctx.text.value}\n *     </button>\n *   `\n * });\n */\nexport const AttrPlugin = {\n  /**\n   * Unique identifier for the plugin\n   * @type {string}\n   */\n  name: \"attr\",\n\n  /**\n   * Plugin version\n   * @type {string}\n   */\n  version: \"1.0.0-rc.1\",\n\n  /**\n   * Plugin description\n   * @type {string}\n   */\n  description: \"Advanced attribute handling for Eleva components\",\n\n  /**\n   * Installs the plugin into the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   * @param {Object} options - Plugin configuration options\n   * @param {boolean} [options.enableAria=true] - Enable ARIA attribute handling\n   * @param {boolean} [options.enableData=true] - Enable data attribute handling\n   * @param {boolean} [options.enableBoolean=true] - Enable boolean attribute handling\n   * @param {boolean} [options.enableDynamic=true] - Enable dynamic property detection\n   */\n  install(eleva, options = {}) {\n    const {\n      enableAria = true,\n      enableData = true,\n      enableBoolean = true,\n      enableDynamic = true,\n    } = options;\n\n    /**\n     * Updates the attributes of an element to match a new element's attributes.\n     * This method provides sophisticated attribute processing including:\n     * - ARIA attribute handling with proper property mapping\n     * - Data attribute management\n     * - Boolean attribute processing\n     * - Dynamic property detection and mapping\n     * - Attribute cleanup and removal\n     *\n     * @param {HTMLElement} oldEl - The original element to update\n     * @param {HTMLElement} newEl - The new element to update\n     * @returns {void}\n     */\n    const updateAttributes = (oldEl, newEl) => {\n      const oldAttrs = oldEl.attributes;\n      const newAttrs = newEl.attributes;\n\n      // Process new attributes\n      for (let i = 0; i < newAttrs.length; i++) {\n        const { name, value } = newAttrs[i];\n\n        // Skip event attributes (handled by event system)\n        if (name.startsWith(\"@\")) continue;\n\n        // Skip if attribute hasn't changed\n        if (oldEl.getAttribute(name) === value) continue;\n\n        // Handle ARIA attributes\n        if (enableAria && name.startsWith(\"aria-\")) {\n          const prop =\n            \"aria\" + name.slice(5).replace(CAMEL_RE, (_, l) => l.toUpperCase());\n          oldEl[prop] = value;\n          oldEl.setAttribute(name, value);\n        }\n        // Handle data attributes\n        else if (enableData && name.startsWith(\"data-\")) {\n          oldEl.dataset[name.slice(5)] = value;\n          oldEl.setAttribute(name, value);\n        }\n        // Handle other attributes\n        else {\n          let prop = name.replace(CAMEL_RE, (_, l) => l.toUpperCase());\n\n          // Dynamic property detection\n          if (\n            enableDynamic &&\n            !(prop in oldEl) &&\n            !Object.getOwnPropertyDescriptor(Object.getPrototypeOf(oldEl), prop)\n          ) {\n            const elementProps = Object.getOwnPropertyNames(\n              Object.getPrototypeOf(oldEl)\n            );\n            const matchingProp = elementProps.find(\n              (p) =>\n                p.toLowerCase() === name.toLowerCase() ||\n                p.toLowerCase().includes(name.toLowerCase()) ||\n                name.toLowerCase().includes(p.toLowerCase())\n            );\n\n            if (matchingProp) {\n              prop = matchingProp;\n            }\n          }\n\n          const descriptor = Object.getOwnPropertyDescriptor(\n            Object.getPrototypeOf(oldEl),\n            prop\n          );\n          const hasProperty = prop in oldEl || descriptor;\n\n          if (hasProperty) {\n            // Boolean attribute handling\n            if (enableBoolean) {\n              const isBoolean =\n                typeof oldEl[prop] === \"boolean\" ||\n                (descriptor?.get &&\n                  typeof descriptor.get.call(oldEl) === \"boolean\");\n\n              if (isBoolean) {\n                const boolValue =\n                  value !== \"false\" &&\n                  (value === \"\" || value === prop || value === \"true\");\n                oldEl[prop] = boolValue;\n\n                if (boolValue) {\n                  oldEl.setAttribute(name, \"\");\n                } else {\n                  oldEl.removeAttribute(name);\n                }\n              } else {\n                oldEl[prop] = value;\n                oldEl.setAttribute(name, value);\n              }\n            } else {\n              oldEl[prop] = value;\n              oldEl.setAttribute(name, value);\n            }\n          } else {\n            oldEl.setAttribute(name, value);\n          }\n        }\n      }\n\n      // Remove old attributes that are no longer present\n      for (let i = oldAttrs.length - 1; i >= 0; i--) {\n        const name = oldAttrs[i].name;\n        if (!newEl.hasAttribute(name)) {\n          oldEl.removeAttribute(name);\n        }\n      }\n    };\n\n    // Extend the renderer with the advanced attribute handler\n    if (eleva.renderer) {\n      eleva.renderer.updateAttributes = updateAttributes;\n\n      // Store the original _patchNode method\n      const originalPatchNode = eleva.renderer._patchNode;\n      eleva.renderer._originalPatchNode = originalPatchNode;\n\n      // Override the _patchNode method to use our attribute handler\n      eleva.renderer._patchNode = function (oldNode, newNode) {\n        if (oldNode?._eleva_instance) return;\n\n        if (!this._isSameNode(oldNode, newNode)) {\n          oldNode.replaceWith(newNode.cloneNode(true));\n          return;\n        }\n\n        if (oldNode.nodeType === Node.ELEMENT_NODE) {\n          updateAttributes(oldNode, newNode);\n          this._diff(oldNode, newNode);\n        } else if (\n          oldNode.nodeType === Node.TEXT_NODE &&\n          oldNode.nodeValue !== newNode.nodeValue\n        ) {\n          oldNode.nodeValue = newNode.nodeValue;\n        }\n      };\n    }\n\n    // Add plugin metadata to the Eleva instance\n    if (!eleva.plugins) {\n      eleva.plugins = new Map();\n    }\n    eleva.plugins.set(this.name, {\n      name: this.name,\n      version: this.version,\n      description: this.description,\n      options,\n    });\n\n    // Add utility methods for manual attribute updates\n    eleva.updateElementAttributes = updateAttributes;\n  },\n\n  /**\n   * Uninstalls the plugin from the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   */\n  uninstall(eleva) {\n    // Restore original _patchNode method if it exists\n    if (eleva.renderer && eleva.renderer._originalPatchNode) {\n      eleva.renderer._patchNode = eleva.renderer._originalPatchNode;\n      delete eleva.renderer._originalPatchNode;\n    }\n\n    // Remove plugin metadata\n    if (eleva.plugins) {\n      eleva.plugins.delete(this.name);\n    }\n\n    // Remove utility methods\n    delete eleva.updateElementAttributes;\n  },\n};\n"],"names":["CAMEL_RE","AttrPlugin","name","version","description","install","eleva","options","enableAria","enableData","enableBoolean","enableDynamic","updateAttributes","oldEl","newEl","oldAttrs","attributes","newAttrs","i","length","value","startsWith","getAttribute","prop","slice","replace","_","l","toUpperCase","setAttribute","dataset","Object","getOwnPropertyDescriptor","getPrototypeOf","elementProps","getOwnPropertyNames","matchingProp","find","p","toLowerCase","includes","descriptor","hasProperty","isBoolean","get","call","boolValue","removeAttribute","hasAttribute","renderer","originalPatchNode","_patchNode","_originalPatchNode","oldNode","newNode","_eleva_instance","_isSameNode","replaceWith","cloneNode","nodeType","Node","ELEMENT_NODE","_diff","TEXT_NODE","nodeValue","plugins","Map","set","updateElementAttributes","uninstall","delete"],"mappings":"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"}