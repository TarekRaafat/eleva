{"version":3,"file":"store.umd.js","sources":["../../src/plugins/Store.js"],"sourcesContent":["\"use strict\";\n\n/**\n * @class 🏪 StorePlugin\n * @classdesc A powerful reactive state management plugin for Eleva.js that enables sharing\n * reactive data across the entire application. The Store plugin provides a centralized,\n * reactive data store that can be accessed from any component's setup function.\n *\n * Core Features:\n * - Centralized reactive state management using Eleva's signal system\n * - Global state accessibility through component setup functions\n * - Namespace support for organizing store modules\n * - Built-in persistence with localStorage/sessionStorage support\n * - Action-based state mutations with validation\n * - Subscription system for reactive updates\n * - DevTools integration for debugging\n * - Plugin architecture for extensibility\n *\n * @example\n * // Install the plugin\n * const app = new Eleva(\"myApp\");\n * app.use(StorePlugin, {\n *   state: {\n *     user: { name: \"John\", email: \"john@example.com\" },\n *     counter: 0,\n *     todos: []\n *   },\n *   actions: {\n *     increment: (state) => state.counter.value++,\n *     addTodo: (state, todo) => state.todos.value.push(todo),\n *     setUser: (state, user) => state.user.value = user\n *   },\n *   persistence: {\n *     enabled: true,\n *     key: \"myApp-store\",\n *     storage: \"localStorage\"\n *   }\n * });\n *\n * // Use store in components\n * app.component(\"Counter\", {\n *   setup({ store }) {\n *     return {\n *       count: store.state.counter,\n *       increment: () => store.dispatch(\"increment\"),\n *       user: store.state.user\n *     };\n *   },\n *   template: (ctx) => `\n *     <div>\n *       <p>Hello ${ctx.user.value.name}!</p>\n *       <p>Count: ${ctx.count.value}</p>\n *       <button onclick=\"ctx.increment()\">+</button>\n *     </div>\n *   `\n * });\n */\nexport const StorePlugin = {\n  /**\n   * Unique identifier for the plugin\n   * @type {string}\n   */\n  name: \"store\",\n\n  /**\n   * Plugin version\n   * @type {string}\n   */\n  version: \"1.0.0-rc.1\",\n\n  /**\n   * Plugin description\n   * @type {string}\n   */\n  description: \"Reactive state management for sharing data across the entire Eleva application\",\n\n  /**\n   * Installs the plugin into the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   * @param {Object} options - Plugin configuration options\n   * @param {Object} [options.state={}] - Initial state object\n   * @param {Object} [options.actions={}] - Action functions for state mutations\n   * @param {Object} [options.namespaces={}] - Namespaced modules for organizing store\n   * @param {Object} [options.persistence] - Persistence configuration\n   * @param {boolean} [options.persistence.enabled=false] - Enable state persistence\n   * @param {string} [options.persistence.key=\"eleva-store\"] - Storage key\n   * @param {\"localStorage\" | \"sessionStorage\"} [options.persistence.storage=\"localStorage\"] - Storage type\n   * @param {Array<string>} [options.persistence.include] - State keys to persist (if not provided, all state is persisted)\n   * @param {Array<string>} [options.persistence.exclude] - State keys to exclude from persistence\n   * @param {boolean} [options.devTools=false] - Enable development tools integration\n   * @param {Function} [options.onError=null] - Error handler function\n   *\n   * @example\n   * // Basic installation\n   * app.use(StorePlugin, {\n   *   state: { count: 0, user: null },\n   *   actions: {\n   *     increment: (state) => state.count.value++,\n   *     setUser: (state, user) => state.user.value = user\n   *   }\n   * });\n   *\n   * // Advanced installation with persistence and namespaces\n   * app.use(StorePlugin, {\n   *   state: { theme: \"light\" },\n   *   namespaces: {\n   *     auth: {\n   *       state: { user: null, token: null },\n   *       actions: {\n   *         login: (state, { user, token }) => {\n   *           state.user.value = user;\n   *           state.token.value = token;\n   *         },\n   *         logout: (state) => {\n   *           state.user.value = null;\n   *           state.token.value = null;\n   *         }\n   *       }\n   *     }\n   *   },\n   *   persistence: {\n   *     enabled: true,\n   *     include: [\"theme\", \"auth.user\"]\n   *   }\n   * });\n   */\n  install(eleva, options = {}) {\n    const {\n      state = {},\n      actions = {},\n      namespaces = {},\n      persistence = {},\n      devTools = false,\n      onError = null,\n    } = options;\n\n    /**\n     * Store instance that manages all state and provides the API\n     * @private\n     */\n    class Store {\n      constructor() {\n        this.state = {};\n        this.actions = {};\n        this.subscribers = new Set();\n        this.mutations = [];\n        this.persistence = {\n          enabled: false,\n          key: \"eleva-store\",\n          storage: \"localStorage\",\n          include: null,\n          exclude: null,\n          ...persistence\n        };\n        this.devTools = devTools;\n        this.onError = onError;\n\n        this._initializeState(state, actions);\n        this._initializeNamespaces(namespaces);\n        this._loadPersistedState();\n        this._setupDevTools();\n      }\n\n      /**\n       * Initializes the root state and actions\n       * @private\n       */\n      _initializeState(initialState, initialActions) {\n        // Create reactive signals for each state property\n        Object.entries(initialState).forEach(([key, value]) => {\n          this.state[key] = new eleva.signal(value);\n        });\n\n        // Set up actions\n        this.actions = { ...initialActions };\n      }\n\n      /**\n       * Initializes namespaced modules\n       * @private\n       */\n      _initializeNamespaces(namespaces) {\n        Object.entries(namespaces).forEach(([namespace, module]) => {\n          const { state: moduleState = {}, actions: moduleActions = {} } = module;\n\n          // Create namespace object if it doesn't exist\n          if (!this.state[namespace]) {\n            this.state[namespace] = {};\n          }\n          if (!this.actions[namespace]) {\n            this.actions[namespace] = {};\n          }\n\n          // Initialize namespaced state\n          Object.entries(moduleState).forEach(([key, value]) => {\n            this.state[namespace][key] = new eleva.signal(value);\n          });\n\n          // Set up namespaced actions\n          this.actions[namespace] = { ...moduleActions };\n        });\n      }\n\n      /**\n       * Loads persisted state from storage\n       * @private\n       */\n      _loadPersistedState() {\n        if (!this.persistence.enabled || typeof window === \"undefined\") {\n          return;\n        }\n\n        try {\n          const storage = window[this.persistence.storage];\n          const persistedData = storage.getItem(this.persistence.key);\n\n          if (persistedData) {\n            const data = JSON.parse(persistedData);\n            this._applyPersistedData(data);\n          }\n        } catch (error) {\n          if (this.onError) {\n            this.onError(error, \"Failed to load persisted state\");\n          } else {\n            console.warn(\"[StorePlugin] Failed to load persisted state:\", error);\n          }\n        }\n      }\n\n      /**\n       * Applies persisted data to the current state\n       * @private\n       */\n      _applyPersistedData(data, currentState = this.state, path = \"\") {\n        Object.entries(data).forEach(([key, value]) => {\n          const fullPath = path ? `${path}.${key}` : key;\n\n          if (this._shouldPersist(fullPath)) {\n            if (currentState[key] && typeof currentState[key] === \"object\" && \"value\" in currentState[key]) {\n              // This is a signal, update its value\n              currentState[key].value = value;\n            } else if (typeof value === \"object\" && value !== null && currentState[key]) {\n              // This is a nested object, recurse\n              this._applyPersistedData(value, currentState[key], fullPath);\n            }\n          }\n        });\n      }\n\n      /**\n       * Determines if a state path should be persisted\n       * @private\n       */\n      _shouldPersist(path) {\n        const { include, exclude } = this.persistence;\n\n        if (include && include.length > 0) {\n          return include.some(includePath => path.startsWith(includePath));\n        }\n\n        if (exclude && exclude.length > 0) {\n          return !exclude.some(excludePath => path.startsWith(excludePath));\n        }\n\n        return true;\n      }\n\n      /**\n       * Saves current state to storage\n       * @private\n       */\n      _saveState() {\n        if (!this.persistence.enabled || typeof window === \"undefined\") {\n          return;\n        }\n\n        try {\n          const storage = window[this.persistence.storage];\n          const dataToSave = this._extractPersistedData();\n          storage.setItem(this.persistence.key, JSON.stringify(dataToSave));\n        } catch (error) {\n          if (this.onError) {\n            this.onError(error, \"Failed to save state\");\n          } else {\n            console.warn(\"[StorePlugin] Failed to save state:\", error);\n          }\n        }\n      }\n\n      /**\n       * Extracts data that should be persisted\n       * @private\n       */\n      _extractPersistedData(currentState = this.state, path = \"\") {\n        const result = {};\n\n        Object.entries(currentState).forEach(([key, value]) => {\n          const fullPath = path ? `${path}.${key}` : key;\n\n          if (this._shouldPersist(fullPath)) {\n            if (value && typeof value === \"object\" && \"value\" in value) {\n              // This is a signal, extract its value\n              result[key] = value.value;\n            } else if (typeof value === \"object\" && value !== null) {\n              // This is a nested object, recurse\n              const nestedData = this._extractPersistedData(value, fullPath);\n              if (Object.keys(nestedData).length > 0) {\n                result[key] = nestedData;\n              }\n            }\n          }\n        });\n\n        return result;\n      }\n\n      /**\n       * Sets up development tools integration\n       * @private\n       */\n      _setupDevTools() {\n        if (!this.devTools || typeof window === \"undefined\" || !window.__ELEVA_DEVTOOLS__) {\n          return;\n        }\n\n        window.__ELEVA_DEVTOOLS__.registerStore(this);\n      }\n\n      /**\n       * Dispatches an action to mutate the state\n       * @param {string} actionName - The name of the action to dispatch (supports namespaced actions like \"auth.login\")\n       * @param {any} payload - The payload to pass to the action\n       * @returns {Promise<any>} The result of the action\n       */\n      async dispatch(actionName, payload) {\n        try {\n          const action = this._getAction(actionName);\n\n          if (!action) {\n            const error = new Error(`Action \"${actionName}\" not found`);\n            if (this.onError) {\n              this.onError(error, actionName);\n            }\n            throw error;\n          }\n\n          const mutation = {\n            type: actionName,\n            payload,\n            timestamp: Date.now()\n          };\n\n          // Record mutation for devtools\n          this.mutations.push(mutation);\n          if (this.mutations.length > 100) {\n            this.mutations.shift(); // Keep only last 100 mutations\n          }\n\n          // Execute the action\n          const result = await action.call(null, this.state, payload);\n\n          // Save state if persistence is enabled\n          this._saveState();\n\n          // Notify subscribers\n          this.subscribers.forEach(callback => {\n            try {\n              callback(mutation, this.state);\n            } catch (error) {\n              if (this.onError) {\n                this.onError(error, \"Subscriber callback failed\");\n              }\n            }\n          });\n\n          // Notify devtools\n          if (this.devTools && typeof window !== \"undefined\" && window.__ELEVA_DEVTOOLS__) {\n            window.__ELEVA_DEVTOOLS__.notifyMutation(mutation, this.state);\n          }\n\n          return result;\n        } catch (error) {\n          if (this.onError) {\n            this.onError(error, `Action dispatch failed: ${actionName}`);\n          }\n          throw error;\n        }\n      }\n\n      /**\n       * Gets an action by name (supports namespaced actions)\n       * @private\n       */\n      _getAction(actionName) {\n        const parts = actionName.split(\".\");\n        let current = this.actions;\n\n        for (const part of parts) {\n          if (current[part] === undefined) {\n            return null;\n          }\n          current = current[part];\n        }\n\n        return typeof current === \"function\" ? current : null;\n      }\n\n      /**\n       * Subscribes to store mutations\n       * @param {Function} callback - Callback function to call on mutations\n       * @returns {Function} Unsubscribe function\n       */\n      subscribe(callback) {\n        if (typeof callback !== \"function\") {\n          throw new Error(\"Subscribe callback must be a function\");\n        }\n\n        this.subscribers.add(callback);\n\n        // Return unsubscribe function\n        return () => {\n          this.subscribers.delete(callback);\n        };\n      }\n\n      /**\n       * Gets a deep copy of the current state values (not signals)\n       * @returns {Object} The current state values\n       */\n      getState() {\n        return this._extractPersistedData();\n      }\n\n      /**\n       * Replaces the entire state (useful for testing or state hydration)\n       * @param {Object} newState - The new state object\n       */\n      replaceState(newState) {\n        this._applyPersistedData(newState);\n        this._saveState();\n      }\n\n      /**\n       * Clears persisted state from storage\n       */\n      clearPersistedState() {\n        if (!this.persistence.enabled || typeof window === \"undefined\") {\n          return;\n        }\n\n        try {\n          const storage = window[this.persistence.storage];\n          storage.removeItem(this.persistence.key);\n        } catch (error) {\n          if (this.onError) {\n            this.onError(error, \"Failed to clear persisted state\");\n          }\n        }\n      }\n\n      /**\n       * Registers a new namespaced module at runtime\n       * @param {string} namespace - The namespace for the module\n       * @param {Object} module - The module definition\n       * @param {Object} module.state - The module's initial state\n       * @param {Object} module.actions - The module's actions\n       */\n      registerModule(namespace, module) {\n        if (this.state[namespace] || this.actions[namespace]) {\n          console.warn(`[StorePlugin] Module \"${namespace}\" already exists`);\n          return;\n        }\n\n        // Initialize the module\n        this.state[namespace] = {};\n        this.actions[namespace] = {};\n\n        const namespaces = { [namespace]: module };\n        this._initializeNamespaces(namespaces);\n\n        this._saveState();\n      }\n\n      /**\n       * Unregisters a namespaced module\n       * @param {string} namespace - The namespace to unregister\n       */\n      unregisterModule(namespace) {\n        if (!this.state[namespace] && !this.actions[namespace]) {\n          console.warn(`[StorePlugin] Module \"${namespace}\" does not exist`);\n          return;\n        }\n\n        delete this.state[namespace];\n        delete this.actions[namespace];\n        this._saveState();\n      }\n    }\n\n    // Create the store instance\n    const store = new Store();\n\n    // Store the original mount method to override it\n    const originalMount = eleva.mount;\n\n    /**\n     * Override the mount method to inject store context into components\n     */\n    eleva.mount = async (container, compName, props = {}) => {\n      // Get the component definition\n      const componentDef = typeof compName === \"string\"\n        ? eleva._components.get(compName) || compName\n        : compName;\n\n      if (!componentDef) {\n        return await originalMount.call(eleva, container, compName, props);\n      }\n\n      // Create a wrapped component that injects store into setup\n      const wrappedComponent = {\n        ...componentDef,\n        async setup(ctx) {\n          // Inject store into the context with enhanced API\n          ctx.store = {\n            // Core store functionality\n            state: store.state,\n            dispatch: store.dispatch.bind(store),\n            subscribe: store.subscribe.bind(store),\n            getState: store.getState.bind(store),\n\n            // Module management\n            registerModule: store.registerModule.bind(store),\n            unregisterModule: store.unregisterModule.bind(store),\n\n            // Utilities for dynamic state/action creation\n            createState: (key, initialValue) => {\n              if (!store.state[key]) {\n                store.state[key] = new eleva.signal(initialValue);\n              }\n              return store.state[key];\n            },\n\n            createAction: (name, actionFn) => {\n              store.actions[name] = actionFn;\n            },\n\n            // Access to signal constructor for manual state creation\n            signal: eleva.signal\n          };\n\n          // Call original setup if it exists\n          const originalSetup = componentDef.setup;\n          const result = originalSetup ? await originalSetup(ctx) : {};\n\n          return result;\n        }\n      };\n\n      // Call original mount with wrapped component\n      return await originalMount.call(eleva, container, wrappedComponent, props);\n    };\n\n    // Override _mountComponents to ensure child components also get store context\n    const originalMountComponents = eleva._mountComponents;\n    eleva._mountComponents = async (container, children, childInstances) => {\n      // Create wrapped children with store injection\n      const wrappedChildren = {};\n\n      for (const [selector, childComponent] of Object.entries(children)) {\n        const componentDef = typeof childComponent === \"string\"\n          ? eleva._components.get(childComponent) || childComponent\n          : childComponent;\n\n        if (componentDef && typeof componentDef === \"object\") {\n          wrappedChildren[selector] = {\n            ...componentDef,\n            async setup(ctx) {\n              // Inject store into the context with enhanced API\n              ctx.store = {\n                // Core store functionality\n                state: store.state,\n                dispatch: store.dispatch.bind(store),\n                subscribe: store.subscribe.bind(store),\n                getState: store.getState.bind(store),\n\n                // Module management\n                registerModule: store.registerModule.bind(store),\n                unregisterModule: store.unregisterModule.bind(store),\n\n                // Utilities for dynamic state/action creation\n                createState: (key, initialValue) => {\n                  if (!store.state[key]) {\n                    store.state[key] = new eleva.signal(initialValue);\n                  }\n                  return store.state[key];\n                },\n\n                createAction: (name, actionFn) => {\n                  store.actions[name] = actionFn;\n                },\n\n                // Access to signal constructor for manual state creation\n                signal: eleva.signal\n              };\n\n              // Call original setup if it exists\n              const originalSetup = componentDef.setup;\n              const result = originalSetup ? await originalSetup(ctx) : {};\n\n              return result;\n            }\n          };\n        } else {\n          wrappedChildren[selector] = childComponent;\n        }\n      }\n\n      // Call original _mountComponents with wrapped children\n      return await originalMountComponents.call(eleva, container, wrappedChildren, childInstances);\n    };\n\n    // Expose store instance and utilities on the Eleva instance\n    eleva.store = store;\n\n    /**\n     * Expose utility methods on the Eleva instance\n     * @namespace eleva.store\n     */\n    eleva.createAction = (name, actionFn) => {\n      store.actions[name] = actionFn;\n    };\n\n    eleva.dispatch = (actionName, payload) => {\n      return store.dispatch(actionName, payload);\n    };\n\n    eleva.getState = () => {\n      return store.getState();\n    };\n\n    eleva.subscribe = (callback) => {\n      return store.subscribe(callback);\n    };\n\n    // Store original methods for cleanup\n    eleva._originalMount = originalMount;\n    eleva._originalMountComponents = originalMountComponents;\n  },\n\n  /**\n   * Uninstalls the plugin from the Eleva instance\n   *\n   * @param {Object} eleva - The Eleva instance\n   *\n   * @description\n   * Restores the original Eleva methods and removes all plugin-specific\n   * functionality. This method should be called when the plugin is no\n   * longer needed.\n   *\n   * @example\n   * // Uninstall the plugin\n   * StorePlugin.uninstall(app);\n   */\n  uninstall(eleva) {\n    // Restore original mount method\n    if (eleva._originalMount) {\n      eleva.mount = eleva._originalMount;\n      delete eleva._originalMount;\n    }\n\n    // Restore original _mountComponents method\n    if (eleva._originalMountComponents) {\n      eleva._mountComponents = eleva._originalMountComponents;\n      delete eleva._originalMountComponents;\n    }\n\n    // Remove store instance and utility methods\n    if (eleva.store) {\n      delete eleva.store;\n    }\n    if (eleva.createAction) {\n      delete eleva.createAction;\n    }\n    if (eleva.dispatch) {\n      delete eleva.dispatch;\n    }\n    if (eleva.getState) {\n      delete eleva.getState;\n    }\n    if (eleva.subscribe) {\n      delete eleva.subscribe;\n    }\n  },\n};"],"names":["StorePlugin","name","version","description","install","eleva","options","state","actions","namespaces","persistence","devTools","onError","Store","constructor","subscribers","Set","mutations","enabled","key","storage","include","exclude","_initializeState","_initializeNamespaces","_loadPersistedState","_setupDevTools","initialState","initialActions","Object","entries","forEach","value","signal","namespace","module","moduleState","moduleActions","window","persistedData","getItem","data","JSON","parse","_applyPersistedData","error","console","warn","currentState","path","fullPath","_shouldPersist","length","some","includePath","startsWith","excludePath","_saveState","dataToSave","_extractPersistedData","setItem","stringify","result","nestedData","keys","__ELEVA_DEVTOOLS__","registerStore","dispatch","actionName","payload","action","_getAction","Error","mutation","type","timestamp","Date","now","push","shift","call","callback","notifyMutation","parts","split","current","part","undefined","subscribe","add","delete","getState","replaceState","newState","clearPersistedState","removeItem","registerModule","unregisterModule","store","originalMount","mount","container","compName","props","componentDef","_components","get","wrappedComponent","setup","ctx","bind","createState","initialValue","createAction","actionFn","originalSetup","originalMountComponents","_mountComponents","children","childInstances","wrappedChildren","selector","childComponent","_originalMount","_originalMountComponents","uninstall"],"mappings":";;;;;;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACO,QAAMA,WAAW,GAAG;EACzB;EACF;EACA;EACA;EACEC,EAAAA,IAAI,EAAE,OAAO;EAEb;EACF;EACA;EACA;EACEC,EAAAA,OAAO,EAAE,YAAY;EAErB;EACF;EACA;EACA;EACEC,EAAAA,WAAW,EAAE,gFAAgF;EAE7F;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,EAAAA,OAAOA,CAACC,KAAK,EAAEC,OAAO,GAAG,EAAE,EAAE;MAC3B,MAAM;QACJC,KAAK,GAAG,EAAE;QACVC,OAAO,GAAG,EAAE;QACZC,UAAU,GAAG,EAAE;QACfC,WAAW,GAAG,EAAE;EAChBC,MAAAA,QAAQ,GAAG,KAAK;EAChBC,MAAAA,OAAO,GAAG;EACZ,KAAC,GAAGN,OAAO;;EAEX;EACJ;EACA;EACA;EACI,IAAA,MAAMO,KAAK,CAAC;EACVC,MAAAA,WAAWA,GAAG;EACZ,QAAA,IAAI,CAACP,KAAK,GAAG,EAAE;EACf,QAAA,IAAI,CAACC,OAAO,GAAG,EAAE;EACjB,QAAA,IAAI,CAACO,WAAW,GAAG,IAAIC,GAAG,EAAE;UAC5B,IAAI,CAACC,SAAS,GAAG,EAAE;UACnB,IAAI,CAACP,WAAW,GAAG;EACjBQ,UAAAA,OAAO,EAAE,KA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"}